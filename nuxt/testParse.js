const data = {
    "diff": [{
            "ruleId": "edit-base-path",
            "message": "Base path turned from  `/api/v0` to `/api/v1`",
            "messageHtml": "Base path turned from <code>/api/v0</code> to <code>/api/v1</code>",
            "previousBasePath": "/api/v0",
            "currentBasePath": "/api/v1",
            "type": "warnings",
            "name": "What's Changed"
        },
        {
            "ruleId": "edit-object-property-type",
            "message": "`paths//networks/{networkId}/put/parameters/updateNetwork/schema` - Property `tags` type turn from `string` to `array`",
            "messageHtml": "Property <code>tags</code> type turn from <code>string</code> to <code>array</code>",
            "objectPath": "paths//networks/{networkId}/put/parameters/updateNetwork/schema",
            "path": "/networks/{networkId}",
            "method": "put",
            "Property": "tags",
            "previousType": "string",
            "currentType": "array",
            "type": "warnings",
            "name": "What's Changed",
            "group": "networks",
            "apiDetails": {
                "description": "Update a network",
                "operationId": "updateNetwork",
                "parameters": [{
                        "name": "networkId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "updateNetwork",
                        "in": "body",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "description": "The name of the network"
                                },
                                "timeZone": {
                                    "type": "string",
                                    "description": "The timezone of the network. For a list of allowed timezones, please see the 'TZ' column in the table in <a target='_blank' href='https://en.wikipedia.org/wiki/List_of_tz_database_time_zones'>this article.</a>"
                                },
                                "tags": {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    },
                                    "description": "A list of tags to be applied to the network"
                                },
                                "enrollmentString": {
                                    "type": "string",
                                    "description": "A unique identifier which can be used for device enrollment or easy access through the Meraki SM Registration page or the Self Service Portal. Please note that changing this field may cause existing bookmarks to break."
                                }
                            },
                            "example": {
                                "name": "Long Island Office",
                                "timeZone": "America/Los_Angeles",
                                "tags": [
                                    "tag1",
                                    "tag2"
                                ]
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "object"
                        },
                        "examples": {
                            "application/json": {
                                "id": "L_123456",
                                "organizationId": "2930418",
                                "name": "Long Island Office",
                                "timeZone": "America/Los_Angeles",
                                "tags": [
                                    "tag1",
                                    "tag2"
                                ],
                                "productTypes": [
                                    "appliance",
                                    "switch",
                                    "wireless"
                                ],
                                "enrollmentString": "long-island-office"
                            }
                        }
                    }
                },
                "summary": "Update a network",
                "tags": [
                    "networks",
                    "configure"
                ]
            },
            "docUrl": "https://developer.cisco.com/meraki/api/#/rest/api-endpoints/networks/update-network"
        },
        {
            "ruleId": "delete-path",
            "message": "`/networks/{networkId}/accessPolicies` - Deleted",
            "messageHtml": "Deleted",
            "path": "/networks/{networkId}/accessPolicies",
            "details": {
                "get": {
                    "description": "List the access policies for this network. Only valid for MS networks.",
                    "operationId": "getNetworkAccessPolicies",
                    "parameters": {
                        "networkId": {
                            "name": "networkId",
                            "in": "path",
                            "type": "string",
                            "required": true
                        }
                    },
                    "responses": {
                        "200": {
                            "description": "Successful operation",
                            "schema": {
                                "type": "object",
                                "x-is-dynamic": true
                            },
                            "examples": {
                                "application/json": [{
                                    "number": 1,
                                    "name": "My access policy",
                                    "accessType": "8021.x",
                                    "guestVlan": 3700,
                                    "radiusServers": [{
                                            "ip": "1.2.3.4",
                                            "port": 1337
                                        },
                                        {
                                            "ip": "2.3.4.5",
                                            "port": 1337
                                        }
                                    ]
                                }]
                            }
                        }
                    },
                    "summary": "List the access policies for this network. Only valid for MS networks.",
                    "tags": [
                        "Networks"
                    ],
                    "consumes": [
                        "application/json"
                    ],
                    "produces": [
                        "application/json"
                    ],
                    "schemes": [
                        "https"
                    ],
                    "security": [{
                        "meraki_api_key": []
                    }]
                }
            },
            "type": "warnings",
            "name": "What's Changed"
        },
        {
            "ruleId": "add-required-object-property",
            "message": "`paths//networks/{networkId}/clients/provision/post/parameters/provisionNetworkClients/schema` - Required property `clients` Added",
            "messageHtml": "Required property <span><code>clients</code> added</span>",
            "objectPath": "paths//networks/{networkId}/clients/provision/post/parameters/provisionNetworkClients/schema",
            "path": "/networks/{networkId}/clients/provision",
            "method": "post",
            "property": "clients",
            "type": "warnings",
            "name": "What's Changed",
            "group": "networks",
            "apiDetails": {
                "description": "Provisions a client with a name and policy. Clients can be provisioned before they associate to the network.",
                "operationId": "provisionNetworkClients",
                "parameters": [{
                        "name": "networkId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "provisionNetworkClients",
                        "in": "body",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "clients": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "mac": {
                                                "type": "string",
                                                "description": "The MAC address of the client. Required.",
                                                "required": true
                                            },
                                            "name": {
                                                "type": "string",
                                                "description": "The display name for the client. Optional. Limited to 255 bytes."
                                            }
                                        }
                                    },
                                    "description": "The array of clients to provision",
                                    "required": true
                                },
                                "devicePolicy": {
                                    "type": "string",
                                    "enum": [
                                        "Group policy",
                                        "Allowed",
                                        "Blocked",
                                        "Per connection",
                                        "Normal"
                                    ],
                                    "description": "The policy to apply to the specified client. Can be 'Group policy', 'Allowed', 'Blocked', 'Per connection' or 'Normal'. Required.",
                                    "required": true
                                },
                                "groupPolicyId": {
                                    "type": "string",
                                    "description": "The ID of the desired group policy to apply to the client. Required if 'devicePolicy' is set to \"Group policy\". Otherwise this is ignored."
                                },
                                "policiesBySecurityAppliance": {
                                    "type": "object",
                                    "properties": {
                                        "devicePolicy": {
                                            "type": "string",
                                            "enum": [
                                                "Allowed",
                                                "Blocked",
                                                "Normal"
                                            ],
                                            "description": "The policy to apply to the specified client. Can be 'Allowed', 'Blocked' or 'Normal'. Required."
                                        }
                                    },
                                    "description": "An object, describing what the policy-connection association is for the security appliance. (Only relevant if the security appliance is actually within the network)"
                                },
                                "policiesBySsid": {
                                    "type": "object",
                                    "properties": {
                                        "0": {
                                            "type": "object",
                                            "properties": {
                                                "devicePolicy": {
                                                    "type": "string",
                                                    "enum": [
                                                        "Allowed",
                                                        "Blocked",
                                                        "Normal",
                                                        "Group policy"
                                                    ],
                                                    "description": "The policy to apply to the specified client. Can be 'Allowed', 'Blocked', 'Normal' or 'Group policy'. Required.",
                                                    "required": true
                                                },
                                                "groupPolicyId": {
                                                    "type": "string",
                                                    "description": "The ID of the desired group policy to apply to the client. Required if 'devicePolicy' is set to \"Group policy\". Otherwise this is ignored."
                                                }
                                            },
                                            "description": "The number for the SSID"
                                        },
                                        "1": {
                                            "type": "object",
                                            "properties": {
                                                "devicePolicy": {
                                                    "type": "string",
                                                    "enum": [
                                                        "Allowed",
                                                        "Blocked",
                                                        "Normal",
                                                        "Group policy"
                                                    ],
                                                    "description": "The policy to apply to the specified client. Can be 'Allowed', 'Blocked', 'Normal' or 'Group policy'. Required.",
                                                    "required": true
                                                },
                                                "groupPolicyId": {
                                                    "type": "string",
                                                    "description": "The ID of the desired group policy to apply to the client. Required if 'devicePolicy' is set to \"Group policy\". Otherwise this is ignored."
                                                }
                                            },
                                            "description": "The number for the SSID"
                                        },
                                        "2": {
                                            "type": "object",
                                            "properties": {
                                                "devicePolicy": {
                                                    "type": "string",
                                                    "enum": [
                                                        "Allowed",
                                                        "Blocked",
                                                        "Normal",
                                                        "Group policy"
                                                    ],
                                                    "description": "The policy to apply to the specified client. Can be 'Allowed', 'Blocked', 'Normal' or 'Group policy'. Required.",
                                                    "required": true
                                                },
                                                "groupPolicyId": {
                                                    "type": "string",
                                                    "description": "The ID of the desired group policy to apply to the client. Required if 'devicePolicy' is set to \"Group policy\". Otherwise this is ignored."
                                                }
                                            },
                                            "description": "The number for the SSID"
                                        },
                                        "3": {
                                            "type": "object",
                                            "properties": {
                                                "devicePolicy": {
                                                    "type": "string",
                                                    "enum": [
                                                        "Allowed",
                                                        "Blocked",
                                                        "Normal",
                                                        "Group policy"
                                                    ],
                                                    "description": "The policy to apply to the specified client. Can be 'Allowed', 'Blocked', 'Normal' or 'Group policy'. Required.",
                                                    "required": true
                                                },
                                                "groupPolicyId": {
                                                    "type": "string",
                                                    "description": "The ID of the desired group policy to apply to the client. Required if 'devicePolicy' is set to \"Group policy\". Otherwise this is ignored."
                                                }
                                            },
                                            "description": "The number for the SSID"
                                        },
                                        "4": {
                                            "type": "object",
                                            "properties": {
                                                "devicePolicy": {
                                                    "type": "string",
                                                    "enum": [
                                                        "Allowed",
                                                        "Blocked",
                                                        "Normal",
                                                        "Group policy"
                                                    ],
                                                    "description": "The policy to apply to the specified client. Can be 'Allowed', 'Blocked', 'Normal' or 'Group policy'. Required.",
                                                    "required": true
                                                },
                                                "groupPolicyId": {
                                                    "type": "string",
                                                    "description": "The ID of the desired group policy to apply to the client. Required if 'devicePolicy' is set to \"Group policy\". Otherwise this is ignored."
                                                }
                                            },
                                            "description": "The number for the SSID"
                                        },
                                        "5": {
                                            "type": "object",
                                            "properties": {
                                                "devicePolicy": {
                                                    "type": "string",
                                                    "enum": [
                                                        "Allowed",
                                                        "Blocked",
                                                        "Normal",
                                                        "Group policy"
                                                    ],
                                                    "description": "The policy to apply to the specified client. Can be 'Allowed', 'Blocked', 'Normal' or 'Group policy'. Required.",
                                                    "required": true
                                                },
                                                "groupPolicyId": {
                                                    "type": "string",
                                                    "description": "The ID of the desired group policy to apply to the client. Required if 'devicePolicy' is set to \"Group policy\". Otherwise this is ignored."
                                                }
                                            },
                                            "description": "The number for the SSID"
                                        },
                                        "6": {
                                            "type": "object",
                                            "properties": {
                                                "devicePolicy": {
                                                    "type": "string",
                                                    "enum": [
                                                        "Allowed",
                                                        "Blocked",
                                                        "Normal",
                                                        "Group policy"
                                                    ],
                                                    "description": "The policy to apply to the specified client. Can be 'Allowed', 'Blocked', 'Normal' or 'Group policy'. Required.",
                                                    "required": true
                                                },
                                                "groupPolicyId": {
                                                    "type": "string",
                                                    "description": "The ID of the desired group policy to apply to the client. Required if 'devicePolicy' is set to \"Group policy\". Otherwise this is ignored."
                                                }
                                            },
                                            "description": "The number for the SSID"
                                        },
                                        "7": {
                                            "type": "object",
                                            "properties": {
                                                "devicePolicy": {
                                                    "type": "string",
                                                    "enum": [
                                                        "Allowed",
                                                        "Blocked",
                                                        "Normal",
                                                        "Group policy"
                                                    ],
                                                    "description": "The policy to apply to the specified client. Can be 'Allowed', 'Blocked', 'Normal' or 'Group policy'. Required.",
                                                    "required": true
                                                },
                                                "groupPolicyId": {
                                                    "type": "string",
                                                    "description": "The ID of the desired group policy to apply to the client. Required if 'devicePolicy' is set to \"Group policy\". Otherwise this is ignored."
                                                }
                                            },
                                            "description": "The number for the SSID"
                                        },
                                        "8": {
                                            "type": "object",
                                            "properties": {
                                                "devicePolicy": {
                                                    "type": "string",
                                                    "enum": [
                                                        "Allowed",
                                                        "Blocked",
                                                        "Normal",
                                                        "Group policy"
                                                    ],
                                                    "description": "The policy to apply to the specified client. Can be 'Allowed', 'Blocked', 'Normal' or 'Group policy'. Required.",
                                                    "required": true
                                                },
                                                "groupPolicyId": {
                                                    "type": "string",
                                                    "description": "The ID of the desired group policy to apply to the client. Required if 'devicePolicy' is set to \"Group policy\". Otherwise this is ignored."
                                                }
                                            },
                                            "description": "The number for the SSID"
                                        },
                                        "9": {
                                            "type": "object",
                                            "properties": {
                                                "devicePolicy": {
                                                    "type": "string",
                                                    "enum": [
                                                        "Allowed",
                                                        "Blocked",
                                                        "Normal",
                                                        "Group policy"
                                                    ],
                                                    "description": "The policy to apply to the specified client. Can be 'Allowed', 'Blocked', 'Normal' or 'Group policy'. Required.",
                                                    "required": true
                                                },
                                                "groupPolicyId": {
                                                    "type": "string",
                                                    "description": "The ID of the desired group policy to apply to the client. Required if 'devicePolicy' is set to \"Group policy\". Otherwise this is ignored."
                                                }
                                            },
                                            "description": "The number for the SSID"
                                        },
                                        "10": {
                                            "type": "object",
                                            "properties": {
                                                "devicePolicy": {
                                                    "type": "string",
                                                    "enum": [
                                                        "Allowed",
                                                        "Blocked",
                                                        "Normal",
                                                        "Group policy"
                                                    ],
                                                    "description": "The policy to apply to the specified client. Can be 'Allowed', 'Blocked', 'Normal' or 'Group policy'. Required.",
                                                    "required": true
                                                },
                                                "groupPolicyId": {
                                                    "type": "string",
                                                    "description": "The ID of the desired group policy to apply to the client. Required if 'devicePolicy' is set to \"Group policy\". Otherwise this is ignored."
                                                }
                                            },
                                            "description": "The number for the SSID"
                                        },
                                        "11": {
                                            "type": "object",
                                            "properties": {
                                                "devicePolicy": {
                                                    "type": "string",
                                                    "enum": [
                                                        "Allowed",
                                                        "Blocked",
                                                        "Normal",
                                                        "Group policy"
                                                    ],
                                                    "description": "The policy to apply to the specified client. Can be 'Allowed', 'Blocked', 'Normal' or 'Group policy'. Required.",
                                                    "required": true
                                                },
                                                "groupPolicyId": {
                                                    "type": "string",
                                                    "description": "The ID of the desired group policy to apply to the client. Required if 'devicePolicy' is set to \"Group policy\". Otherwise this is ignored."
                                                }
                                            },
                                            "description": "The number for the SSID"
                                        },
                                        "12": {
                                            "type": "object",
                                            "properties": {
                                                "devicePolicy": {
                                                    "type": "string",
                                                    "enum": [
                                                        "Allowed",
                                                        "Blocked",
                                                        "Normal",
                                                        "Group policy"
                                                    ],
                                                    "description": "The policy to apply to the specified client. Can be 'Allowed', 'Blocked', 'Normal' or 'Group policy'. Required.",
                                                    "required": true
                                                },
                                                "groupPolicyId": {
                                                    "type": "string",
                                                    "description": "The ID of the desired group policy to apply to the client. Required if 'devicePolicy' is set to \"Group policy\". Otherwise this is ignored."
                                                }
                                            },
                                            "description": "The number for the SSID"
                                        },
                                        "13": {
                                            "type": "object",
                                            "properties": {
                                                "devicePolicy": {
                                                    "type": "string",
                                                    "enum": [
                                                        "Allowed",
                                                        "Blocked",
                                                        "Normal",
                                                        "Group policy"
                                                    ],
                                                    "description": "The policy to apply to the specified client. Can be 'Allowed', 'Blocked', 'Normal' or 'Group policy'. Required.",
                                                    "required": true
                                                },
                                                "groupPolicyId": {
                                                    "type": "string",
                                                    "description": "The ID of the desired group policy to apply to the client. Required if 'devicePolicy' is set to \"Group policy\". Otherwise this is ignored."
                                                }
                                            },
                                            "description": "The number for the SSID"
                                        },
                                        "14": {
                                            "type": "object",
                                            "properties": {
                                                "devicePolicy": {
                                                    "type": "string",
                                                    "enum": [
                                                        "Allowed",
                                                        "Blocked",
                                                        "Normal",
                                                        "Group policy"
                                                    ],
                                                    "description": "The policy to apply to the specified client. Can be 'Allowed', 'Blocked', 'Normal' or 'Group policy'. Required.",
                                                    "required": true
                                                },
                                                "groupPolicyId": {
                                                    "type": "string",
                                                    "description": "The ID of the desired group policy to apply to the client. Required if 'devicePolicy' is set to \"Group policy\". Otherwise this is ignored."
                                                }
                                            },
                                            "description": "The number for the SSID"
                                        }
                                    },
                                    "description": "An object, describing the policy-connection associations for each active SSID within the network. Keys should be the number of enabled SSIDs, mapping to an object describing the client's policy"
                                }
                            },
                            "example": {
                                "clients": [{
                                    "mac": "00:11:22:33:44:55",
                                    "clientId": "k74272e",
                                    "name": "Miles's phone"
                                }],
                                "devicePolicy": "Group policy",
                                "groupPolicyId": "101"
                            }
                        },
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "object"
                        },
                        "examples": {
                            "application/json": {
                                "clients": [{
                                    "mac": "00:11:22:33:44:55",
                                    "clientId": "k74272e",
                                    "name": "Miles's phone"
                                }],
                                "devicePolicy": "Group policy",
                                "groupPolicyId": "101"
                            }
                        }
                    }
                },
                "summary": "Provisions a client with a name and policy. Clients can be provisioned before they associate to the network.",
                "tags": [
                    "networks",
                    "configure",
                    "clients"
                ]
            },
            "docUrl": "https://developer.cisco.com/meraki/api/#/rest/api-endpoints/networks/provision-network-clients"
        },
        {
            "ruleId": "delete-path",
            "message": "`/networks/{networkId}/clients/{clientId}/events` - Deleted",
            "messageHtml": "Deleted",
            "path": "/networks/{networkId}/clients/{clientId}/events",
            "details": {
                "get": {
                    "description": "Return the events associated with this client. Clients can be identified by a client key or either the MAC or IP depending on whether the network uses Track-by-IP.",
                    "operationId": "getNetworkClientEvents",
                    "parameters": {
                        "networkId": {
                            "name": "networkId",
                            "in": "path",
                            "type": "string",
                            "required": true
                        },
                        "clientId": {
                            "name": "clientId",
                            "in": "path",
                            "type": "string",
                            "required": true
                        },
                        "perPage": {
                            "type": "integer",
                            "name": "perPage",
                            "in": "query",
                            "description": "The number of entries per page returned. Acceptable range is 3 - 100. Default is 100."
                        },
                        "startingAfter": {
                            "type": "string",
                            "name": "startingAfter",
                            "in": "query",
                            "description": "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
                        },
                        "endingBefore": {
                            "type": "string",
                            "name": "endingBefore",
                            "in": "query",
                            "description": "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
                        }
                    },
                    "responses": {
                        "200": {
                            "description": "Successful operation",
                            "schema": {
                                "type": "object",
                                "x-is-dynamic": true
                            },
                            "headers": {
                                "Link": {
                                    "type": "string",
                                    "description": "A comma-separated list of first, last, prev, and next relative links used for subsequent paginated requests."
                                }
                            },
                            "examples": {
                                "application/json": [{
                                    "deviceSerial": "Q234-ABCD-5678",
                                    "occurredAt": 1518365681,
                                    "type": "l3roaming_assoc_start",
                                    "details": {
                                        "vap": "1",
                                        "on_packet": "true"
                                    }
                                }]
                            }
                        }
                    },
                    "summary": "Return the events associated with this client. Clients can be identified by a client key or either the MAC or IP depending on whether the network uses Track-by-IP.",
                    "tags": [
                        "Clients"
                    ],
                    "consumes": [
                        "application/json"
                    ],
                    "produces": [
                        "application/json"
                    ],
                    "schemes": [
                        "https"
                    ],
                    "security": [{
                        "meraki_api_key": []
                    }]
                }
            },
            "type": "warnings",
            "name": "What's Changed"
        },
        {
            "ruleId": "edit-object-property-required",
            "message": "`paths//networks/{networkId}/devices/claim/post/parameters/claimNetworkDevices/schema` - Property `serials` became required",
            "messageHtml": "Property <code>serials</code> became required",
            "objectPath": "paths//networks/{networkId}/devices/claim/post/parameters/claimNetworkDevices/schema",
            "path": "/networks/{networkId}/devices/claim",
            "method": "post",
            "property": "serials",
            "type": "warnings",
            "name": "What's Changed",
            "group": "networks",
            "apiDetails": {
                "description": "Claim devices into a network",
                "operationId": "claimNetworkDevices",
                "parameters": [{
                        "name": "networkId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "claimNetworkDevices",
                        "in": "body",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "serials": {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    },
                                    "description": "A list of serials of devices to claim",
                                    "required": true
                                }
                            },
                            "example": {
                                "serials": [
                                    "Q234-ABCD-0001",
                                    "Q234-ABCD-0002",
                                    "Q234-ABCD-0003"
                                ]
                            }
                        },
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                },
                "summary": "Claim devices into a network",
                "tags": [
                    "networks",
                    "configure",
                    "devices"
                ]
            },
            "docUrl": "https://developer.cisco.com/meraki/api/#/rest/api-endpoints/networks/claim-network-devices"
        },
        {
            "ruleId": "edit-param-required",
            "message": "`/networks/{networkId}/devices/claim` (post) - Param `claimNetworkDevices` became required",
            "messageHtml": "Param <code>claimNetworkDevices</code> became required",
            "path": "/networks/{networkId}/devices/claim",
            "method": "post",
            "param": "claimNetworkDevices",
            "type": "warnings",
            "name": "What's Changed",
            "group": "networks",
            "apiDetails": {
                "description": "Claim devices into a network",
                "operationId": "claimNetworkDevices",
                "parameters": [{
                        "name": "networkId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "claimNetworkDevices",
                        "in": "body",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "serials": {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    },
                                    "description": "A list of serials of devices to claim",
                                    "required": true
                                }
                            },
                            "example": {
                                "serials": [
                                    "Q234-ABCD-0001",
                                    "Q234-ABCD-0002",
                                    "Q234-ABCD-0003"
                                ]
                            }
                        },
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                },
                "summary": "Claim devices into a network",
                "tags": [
                    "networks",
                    "configure",
                    "devices"
                ]
            },
            "docUrl": "https://developer.cisco.com/meraki/api/#/rest/api-endpoints/networks/claim-network-devices"
        },
        {
            "ruleId": "delete-path",
            "message": "`/networks/{networkId}/devices/{serial}/uplink` - Deleted",
            "messageHtml": "Deleted",
            "path": "/networks/{networkId}/devices/{serial}/uplink",
            "details": {
                "get": {
                    "description": "Return the uplink information for a device.",
                    "operationId": "getNetworkDeviceUplink",
                    "parameters": {
                        "networkId": {
                            "name": "networkId",
                            "in": "path",
                            "type": "string",
                            "required": true
                        },
                        "serial": {
                            "name": "serial",
                            "in": "path",
                            "type": "string",
                            "required": true
                        }
                    },
                    "responses": {
                        "200": {
                            "description": "Successful operation",
                            "schema": {
                                "type": "object",
                                "x-is-dynamic": true
                            },
                            "examples": {
                                "application/json": [{
                                    "interface": "WAN 1",
                                    "status": "Active",
                                    "ip": "1.2.3.4",
                                    "gateway": "1.2.3.5",
                                    "publicIp": "123.123.123.1",
                                    "dns": "8.8.8.8, 8.8.4.4",
                                    "usingStaticIp": false
                                }]
                            }
                        }
                    },
                    "summary": "Return the uplink information for a device.",
                    "tags": [
                        "Devices"
                    ],
                    "consumes": [
                        "application/json"
                    ],
                    "produces": [
                        "application/json"
                    ],
                    "schemes": [
                        "https"
                    ],
                    "security": [{
                        "meraki_api_key": []
                    }]
                }
            },
            "type": "warnings",
            "name": "What's Changed"
        },
        {
            "ruleId": "delete-path",
            "message": "`/networks/{networkId}/sm/device/wipe` - Deleted",
            "messageHtml": "Deleted",
            "path": "/networks/{networkId}/sm/device/wipe",
            "details": {
                "put": {
                    "description": "Wipe a device",
                    "operationId": "wipeNetworkSmDevice",
                    "parameters": {
                        "networkId": {
                            "name": "networkId",
                            "in": "path",
                            "type": "string",
                            "required": true
                        },
                        "wipeNetworkSmDevice": {
                            "name": "wipeNetworkSmDevice",
                            "in": "body",
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "wifiMac": {
                                        "type": "string",
                                        "description": "The wifiMac of the device to be wiped."
                                    },
                                    "id": {
                                        "type": "string",
                                        "description": "The id of the device to be wiped."
                                    },
                                    "serial": {
                                        "type": "string",
                                        "description": "The serial of the device to be wiped."
                                    },
                                    "pin": {
                                        "type": "integer",
                                        "description": "The pin number (a six digit value) for wiping a macOS device. Required only for macOS devices."
                                    }
                                },
                                "example": {
                                    "id": "1284392014819"
                                }
                            }
                        }
                    },
                    "responses": {
                        "200": {
                            "description": "Successful operation",
                            "schema": {
                                "type": "object",
                                "x-is-dynamic": true
                            },
                            "examples": {
                                "application/json": {
                                    "success": true
                                }
                            }
                        }
                    },
                    "summary": "Wipe a device",
                    "tags": [
                        "SM"
                    ],
                    "consumes": [
                        "application/json"
                    ],
                    "produces": [
                        "application/json"
                    ],
                    "schemes": [
                        "https"
                    ],
                    "security": [{
                        "meraki_api_key": []
                    }]
                }
            },
            "type": "warnings",
            "name": "What's Changed"
        },
        {
            "ruleId": "delete-path",
            "message": "`/networks/{networkId}/sm/devices` - Deleted",
            "messageHtml": "Deleted",
            "path": "/networks/{networkId}/sm/devices",
            "details": {
                "get": {
                    "description": "List the devices enrolled in an SM network with various specified fields and filters",
                    "operationId": "getNetworkSmDevices",
                    "parameters": {
                        "networkId": {
                            "name": "networkId",
                            "in": "path",
                            "type": "string",
                            "required": true
                        },
                        "fields": {
                            "type": "string",
                            "name": "fields",
                            "in": "query",
                            "description": "Additional fields that will be displayed for each device. Multiple fields can be passed in as comma separated values.\n    The default fields are: id, name, tags, ssid, wifiMac, osName, systemModel, uuid, and serialNumber. The additional fields are: ip,\n    systemType, availableDeviceCapacity, kioskAppName, biosVersion, lastConnected, missingAppsCount, userSuppliedAddress, location, lastUser,\n    ownerEmail, ownerUsername, publicIp, phoneNumber, diskInfoJson, deviceCapacity, isManaged, hadMdm, isSupervised, meid, imei, iccid,\n    simCarrierNetwork, cellularDataUsed, isHotspotEnabled, createdAt, batteryEstCharge, quarantined, avName, avRunning, asName, fwName,\n    isRooted, loginRequired, screenLockEnabled, screenLockDelay, autoLoginDisabled, autoTags, hasMdm, hasDesktopAgent, diskEncryptionEnabled,\n    hardwareEncryptionCaps, passCodeLock, usesHardwareKeystore, and androidSecurityPatchVersion."
                        },
                        "wifiMacs": {
                            "type": "string",
                            "name": "wifiMacs",
                            "in": "query",
                            "description": "Filter devices by wifi mac(s). Multiple wifi macs can be passed in as comma separated values."
                        },
                        "serials": {
                            "type": "string",
                            "name": "serials",
                            "in": "query",
                            "description": "Filter devices by serial(s). Multiple serials can be passed in as comma separated values."
                        },
                        "ids": {
                            "type": "string",
                            "name": "ids",
                            "in": "query",
                            "description": "Filter devices by id(s). Multiple ids can be passed in as comma separated values."
                        },
                        "scope": {
                            "type": "string",
                            "name": "scope",
                            "in": "query",
                            "description": "Specify a scope (one of all, none, withAny, withAll, withoutAny, or withoutAll) and a set of tags as comma separated values."
                        },
                        "batchSize": {
                            "type": "integer",
                            "name": "batchSize",
                            "in": "query",
                            "description": "Number of devices to return, 1000 is the default as well as the max."
                        },
                        "batchToken": {
                            "type": "string",
                            "name": "batchToken",
                            "in": "query",
                            "description": "If the network has more devices than the batch size, a batch token will be returned\n    as a part of the device list. To see the remainder of the devices, pass in the batchToken as a parameter in the next request.\n    Requests made with the batchToken do not require additional parameters as the batchToken includes the parameters passed in\n    with the original request. Additional parameters passed in with the batchToken will be ignored."
                        }
                    },
                    "responses": {
                        "200": {
                            "description": "Successful operation",
                            "schema": {
                                "type": "object",
                                "x-is-dynamic": true
                            },
                            "examples": {
                                "application/json": {
                                    "devices": [{
                                        "id": "1284392014819",
                                        "name": "Miles's phone",
                                        "tags": [
                                            "tag1",
                                            "tag2"
                                        ],
                                        "ssid": "My SSID",
                                        "wifiMac": "00:11:22:33:44:55",
                                        "osName": "iOS 9.3.5",
                                        "systemModel": "iPhone",
                                        "uuid": "3d990628ede4c628d52",
                                        "serialNumber": "F5XKHEBX",
                                        "ip": "1.2.3.4"
                                    }],
                                    "batchToken": "MMbCbpHZtG3TKUCr9B9uc5"
                                }
                            }
                        }
                    },
                    "summary": "List the devices enrolled in an SM network with various specified fields and filters",
                    "tags": [
                        "SM"
                    ],
                    "consumes": [
                        "application/json"
                    ],
                    "produces": [
                        "application/json"
                    ],
                    "schemes": [
                        "https"
                    ],
                    "security": [{
                        "meraki_api_key": []
                    }]
                }
            },
            "type": "warnings",
            "name": "What's Changed"
        },
        {
            "ruleId": "delete-path",
            "message": "`/networks/{networkId}/sm/devices/checkin` - Deleted",
            "messageHtml": "Deleted",
            "path": "/networks/{networkId}/sm/devices/checkin",
            "details": {
                "put": {
                    "description": "Force check-in a set of devices",
                    "operationId": "checkinNetworkSmDevices",
                    "parameters": {
                        "networkId": {
                            "name": "networkId",
                            "in": "path",
                            "type": "string",
                            "required": true
                        },
                        "checkinNetworkSmDevices": {
                            "name": "checkinNetworkSmDevices",
                            "in": "body",
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "wifiMacs": {
                                        "type": "string",
                                        "description": "The wifiMacs of the devices to be checked-in."
                                    },
                                    "ids": {
                                        "type": "string",
                                        "description": "The ids of the devices to be checked-in."
                                    },
                                    "serials": {
                                        "type": "string",
                                        "description": "The serials of the devices to be checked-in."
                                    },
                                    "scope": {
                                        "type": "string",
                                        "description": "The scope (one of all, none, withAny, withAll, withoutAny, or withoutAll) and a set of tags of the devices to be checked-in."
                                    }
                                },
                                "example": {
                                    "ids": "\"1284392014819\""
                                }
                            }
                        }
                    },
                    "responses": {
                        "200": {
                            "description": "Successful operation",
                            "schema": {
                                "type": "object",
                                "x-is-dynamic": true
                            },
                            "examples": {
                                "application/json": {
                                    "success": true
                                }
                            }
                        }
                    },
                    "summary": "Force check-in a set of devices",
                    "tags": [
                        "SM"
                    ],
                    "consumes": [
                        "application/json"
                    ],
                    "produces": [
                        "application/json"
                    ],
                    "schemes": [
                        "https"
                    ],
                    "security": [{
                        "meraki_api_key": []
                    }]
                }
            },
            "type": "warnings",
            "name": "What's Changed"
        },
        {
            "ruleId": "delete-path",
            "message": "`/networks/{networkId}/sm/devices/move` - Deleted",
            "messageHtml": "Deleted",
            "path": "/networks/{networkId}/sm/devices/move",
            "details": {
                "put": {
                    "description": "Move a set of devices to a new network",
                    "operationId": "moveNetworkSmDevices",
                    "parameters": {
                        "networkId": {
                            "name": "networkId",
                            "in": "path",
                            "type": "string",
                            "required": true
                        },
                        "moveNetworkSmDevices": {
                            "name": "moveNetworkSmDevices",
                            "in": "body",
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "wifiMacs": {
                                        "type": "string",
                                        "description": "The wifiMacs of the devices to be moved."
                                    },
                                    "ids": {
                                        "type": "string",
                                        "description": "The ids of the devices to be moved."
                                    },
                                    "serials": {
                                        "type": "string",
                                        "description": "The serials of the devices to be moved."
                                    },
                                    "scope": {
                                        "type": "string",
                                        "description": "The scope (one of all, none, withAny, withAll, withoutAny, or withoutAll) and a set of tags of the devices to be moved."
                                    },
                                    "newNetwork": {
                                        "type": "string",
                                        "description": "The new network to which the devices will be moved.",
                                        "required": true
                                    }
                                },
                                "example": {
                                    "ids": "\"1284392014819\"",
                                    "newNetwork": "N_24329156"
                                }
                            },
                            "required": true
                        }
                    },
                    "responses": {
                        "200": {
                            "description": "Successful operation",
                            "schema": {
                                "type": "object",
                                "x-is-dynamic": true
                            },
                            "examples": {
                                "application/json": {
                                    "success": true
                                }
                            }
                        }
                    },
                    "summary": "Move a set of devices to a new network",
                    "tags": [
                        "SM"
                    ],
                    "consumes": [
                        "application/json"
                    ],
                    "produces": [
                        "application/json"
                    ],
                    "schemes": [
                        "https"
                    ],
                    "security": [{
                        "meraki_api_key": []
                    }]
                }
            },
            "type": "warnings",
            "name": "What's Changed"
        },
        {
            "ruleId": "delete-path",
            "message": "`/networks/{networkId}/sm/devices/tags` - Deleted",
            "messageHtml": "Deleted",
            "path": "/networks/{networkId}/sm/devices/tags",
            "details": {
                "put": {
                    "description": "Add, delete, or update the tags of a set of devices",
                    "operationId": "updateNetworkSmDevicesTags",
                    "parameters": {
                        "networkId": {
                            "name": "networkId",
                            "in": "path",
                            "type": "string",
                            "required": true
                        },
                        "updateNetworkSmDevicesTags": {
                            "name": "updateNetworkSmDevicesTags",
                            "in": "body",
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "wifiMacs": {
                                        "type": "string",
                                        "description": "The wifiMacs of the devices to be modified."
                                    },
                                    "ids": {
                                        "type": "string",
                                        "description": "The ids of the devices to be modified."
                                    },
                                    "serials": {
                                        "type": "string",
                                        "description": "The serials of the devices to be modified."
                                    },
                                    "scope": {
                                        "type": "string",
                                        "description": "The scope (one of all, none, withAny, withAll, withoutAny, or withoutAll) and a set of tags of the devices to be modified."
                                    },
                                    "tags": {
                                        "type": "string",
                                        "description": "The tags to be added, deleted, or updated.",
                                        "required": true
                                    },
                                    "updateAction": {
                                        "type": "string",
                                        "description": "One of add, delete, or update. Only devices that have been modified will be returned.",
                                        "required": true
                                    }
                                },
                                "example": {
                                    "scope": "withAny, old_tag",
                                    "updateAction": "add",
                                    "tags": "tag1,tag2"
                                }
                            },
                            "required": true
                        }
                    },
                    "responses": {
                        "200": {
                            "description": "Successful operation",
                            "schema": {
                                "type": "object",
                                "x-is-dynamic": true
                            },
                            "examples": {
                                "application/json": {
                                    "success": [{
                                        "id": "1284392014819",
                                        "serial": "F5XKHEBX",
                                        "wifiMac": "00:11:22:33:44:55",
                                        "tags": [
                                            "tag1",
                                            "tag2"
                                        ]
                                    }]
                                }
                            }
                        }
                    },
                    "summary": "Add, delete, or update the tags of a set of devices",
                    "tags": [
                        "SM"
                    ],
                    "consumes": [
                        "application/json"
                    ],
                    "produces": [
                        "application/json"
                    ],
                    "schemes": [
                        "https"
                    ],
                    "security": [{
                        "meraki_api_key": []
                    }]
                }
            },
            "type": "warnings",
            "name": "What's Changed"
        },
        {
            "ruleId": "delete-path",
            "message": "`/networks/{networkId}/sm/users` - Deleted",
            "messageHtml": "Deleted",
            "path": "/networks/{networkId}/sm/users",
            "details": {
                "get": {
                    "description": "List the owners in an SM network with various specified fields and filters",
                    "operationId": "getNetworkSmUsers",
                    "parameters": {
                        "networkId": {
                            "name": "networkId",
                            "in": "path",
                            "type": "string",
                            "required": true
                        },
                        "ids": {
                            "type": "string",
                            "name": "ids",
                            "in": "query",
                            "description": "Filter users by id(s). Multiple ids can be passed in as comma separated values."
                        },
                        "usernames": {
                            "type": "string",
                            "name": "usernames",
                            "in": "query",
                            "description": "Filter users by username(s). Multiple usernames can be passed in as comma separated values."
                        },
                        "emails": {
                            "type": "string",
                            "name": "emails",
                            "in": "query",
                            "description": "Filter users by email(s). Multiple emails can be passed in as comma separated values."
                        },
                        "scope": {
                            "type": "string",
                            "name": "scope",
                            "in": "query",
                            "description": "Specifiy a scope (one of all, none, withAny, withAll, withoutAny, withoutAll) and a set of tags as comma separated values."
                        }
                    },
                    "responses": {
                        "200": {
                            "description": "Successful operation",
                            "schema": {
                                "type": "object",
                                "x-is-dynamic": true
                            },
                            "examples": {
                                "application/json": [{
                                    "id": "1234",
                                    "email": "miles@meraki.com",
                                    "fullName": "Miles Meraki",
                                    "username": "",
                                    "hasPassword": false,
                                    "tags": [
                                        "tag1",
                                        "tag2"
                                    ],
                                    "adGroups": [],
                                    "asmGroups": [],
                                    "isExternal": false,
                                    "displayName": "Miles Meraki <miles@meraki.com>",
                                    "hasIdentityCertificate": false,
                                    "userThumbnail": "https://s3.amazonaws.com/image.extension"
                                }]
                            }
                        }
                    },
                    "summary": "List the owners in an SM network with various specified fields and filters",
                    "tags": [
                        "SM"
                    ],
                    "consumes": [
                        "application/json"
                    ],
                    "produces": [
                        "application/json"
                    ],
                    "schemes": [
                        "https"
                    ],
                    "security": [{
                        "meraki_api_key": []
                    }]
                }
            },
            "type": "warnings",
            "name": "What's Changed"
        },
        {
            "ruleId": "delete-path",
            "message": "`/networks/{networkId}/ssids` - Deleted",
            "messageHtml": "Deleted",
            "path": "/networks/{networkId}/ssids",
            "details": {
                "get": {
                    "description": "List the SSIDs in a network. Supports networks with access points or wireless-enabled security appliances and teleworker gateways.",
                    "operationId": "getNetworkSsids",
                    "parameters": {
                        "networkId": {
                            "name": "networkId",
                            "in": "path",
                            "type": "string",
                            "required": true
                        }
                    },
                    "responses": {
                        "200": {
                            "description": "Successful operation",
                            "schema": {
                                "type": "object",
                                "x-is-dynamic": true
                            },
                            "examples": {
                                "application/json": [{
                                    "number": 0,
                                    "name": "My SSID",
                                    "enabled": true,
                                    "splashPage": "Click-through splash page",
                                    "ssidAdminAccessible": false,
                                    "authMode": "8021x-radius",
                                    "encryptionMode": "wpa-eap",
                                    "wpaEncryptionMode": "WPA2 only",
                                    "radiusServers": [{
                                        "host": "0.0.0.0",
                                        "port": 3000
                                    }],
                                    "radiusAccountingEnabled": false,
                                    "radiusEnabled": true,
                                    "radiusAttributeForGroupPolicies": "Filter-Id",
                                    "radiusFailoverPolicy": "null",
                                    "radiusLoadBalancingPolicy": "null",
                                    "ipAssignmentMode": "NAT mode",
                                    "adminSplashUrl": "http://example.com",
                                    "splashTimeout": "30 minutes",
                                    "walledGardenEnabled": true,
                                    "walledGardenRanges": "example.com",
                                    "minBitrate": 11,
                                    "bandSelection": "5 GHz band only",
                                    "perClientBandwidthLimitUp": 0,
                                    "perClientBandwidthLimitDown": 0,
                                    "visible": true,
                                    "availableOnAllAps": false,
                                    "availabilityTags": [
                                        "test-tag"
                                    ]
                                }]
                            }
                        }
                    },
                    "summary": "List the SSIDs in a network. Supports networks with access points or wireless-enabled security appliances and teleworker gateways.",
                    "tags": [
                        "SSIDs"
                    ],
                    "consumes": [
                        "application/json"
                    ],
                    "produces": [
                        "application/json"
                    ],
                    "schemes": [
                        "https"
                    ],
                    "security": [{
                        "meraki_api_key": []
                    }]
                }
            },
            "type": "warnings",
            "name": "What's Changed"
        },
        {
            "ruleId": "delete-path",
            "message": "`/networks/{networkId}/ssids/{number}` - Deleted",
            "messageHtml": "Deleted",
            "path": "/networks/{networkId}/ssids/{number}",
            "details": {
                "get": {
                    "description": "Return a single SSID",
                    "operationId": "getNetworkSsid",
                    "parameters": {
                        "networkId": {
                            "name": "networkId",
                            "in": "path",
                            "type": "string",
                            "required": true
                        },
                        "number": {
                            "name": "number",
                            "in": "path",
                            "type": "string",
                            "required": true
                        }
                    },
                    "responses": {
                        "200": {
                            "description": "Successful operation",
                            "schema": {
                                "type": "object",
                                "x-is-dynamic": true
                            },
                            "examples": {
                                "application/json": {
                                    "number": 0,
                                    "name": "My SSID",
                                    "enabled": true,
                                    "splashPage": "Click-through splash page",
                                    "ssidAdminAccessible": false,
                                    "authMode": "8021x-radius",
                                    "encryptionMode": "wpa-eap",
                                    "wpaEncryptionMode": "WPA2 only",
                                    "radiusServers": [{
                                        "host": "0.0.0.0",
                                        "port": 3000
                                    }],
                                    "radiusAccountingEnabled": false,
                                    "radiusEnabled": true,
                                    "radiusAttributeForGroupPolicies": "Filter-Id",
                                    "radiusFailoverPolicy": "null",
                                    "radiusLoadBalancingPolicy": "null",
                                    "ipAssignmentMode": "NAT mode",
                                    "adminSplashUrl": "http://example.com",
                                    "splashTimeout": "30 minutes",
                                    "walledGardenEnabled": true,
                                    "walledGardenRanges": "example.com",
                                    "minBitrate": 11,
                                    "bandSelection": "5 GHz band only",
                                    "perClientBandwidthLimitUp": 0,
                                    "perClientBandwidthLimitDown": 0,
                                    "visible": true,
                                    "availableOnAllAps": false,
                                    "availabilityTags": [
                                        "test-tag"
                                    ]
                                }
                            }
                        }
                    },
                    "summary": "Return a single SSID",
                    "tags": [
                        "SSIDs"
                    ],
                    "consumes": [
                        "application/json"
                    ],
                    "produces": [
                        "application/json"
                    ],
                    "schemes": [
                        "https"
                    ],
                    "security": [{
                        "meraki_api_key": []
                    }]
                },
                "put": {
                    "description": "Update the attributes of an SSID",
                    "operationId": "updateNetworkSsid",
                    "parameters": {
                        "networkId": {
                            "name": "networkId",
                            "in": "path",
                            "type": "string",
                            "required": true
                        },
                        "number": {
                            "name": "number",
                            "in": "path",
                            "type": "string",
                            "required": true
                        },
                        "updateNetworkSsid": {
                            "name": "updateNetworkSsid",
                            "in": "body",
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "description": "The name of the SSID"
                                    },
                                    "enabled": {
                                        "type": "boolean",
                                        "description": "Whether or not the SSID is enabled"
                                    },
                                    "authMode": {
                                        "type": "string",
                                        "enum": [
                                            "open",
                                            "psk",
                                            "open-with-radius",
                                            "8021x-meraki",
                                            "8021x-radius",
                                            "ipsk-with-radius",
                                            "ipsk-without-radius"
                                        ],
                                        "description": "The association control method for the SSID ('open', 'psk', 'open-with-radius', '8021x-meraki', '8021x-radius', 'ipsk-with-radius' or 'ipsk-without-radius')"
                                    },
                                    "enterpriseAdminAccess": {
                                        "type": "string",
                                        "enum": [
                                            "access disabled",
                                            "access enabled"
                                        ],
                                        "description": "Whether or not an SSID is accessible by 'enterprise' administrators ('access disabled' or 'access enabled')"
                                    },
                                    "encryptionMode": {
                                        "type": "string",
                                        "enum": [
                                            "wep",
                                            "wpa"
                                        ],
                                        "description": "The psk encryption mode for the SSID ('wep' or 'wpa'). This param is only valid if the authMode is 'psk'"
                                    },
                                    "psk": {
                                        "type": "string",
                                        "description": "The passkey for the SSID. This param is only valid if the authMode is 'psk'"
                                    },
                                    "wpaEncryptionMode": {
                                        "type": "string",
                                        "enum": [
                                            "WPA1 only",
                                            "WPA1 and WPA2",
                                            "WPA2 only",
                                            "WPA3 Transition Mode",
                                            "WPA3 only"
                                        ],
                                        "description": "The types of WPA encryption. ('WPA1 only', 'WPA1 and WPA2', 'WPA2 only', 'WPA3 Transition Mode' or 'WPA3 only')"
                                    },
                                    "splashPage": {
                                        "type": "string",
                                        "enum": [
                                            "None",
                                            "Click-through splash page",
                                            "Billing",
                                            "Password-protected with Meraki RADIUS",
                                            "Password-protected with custom RADIUS",
                                            "Password-protected with Active Directory",
                                            "Password-protected with LDAP",
                                            "SMS authentication",
                                            "Systems Manager Sentry",
                                            "Facebook Wi-Fi",
                                            "Google OAuth",
                                            "Sponsored guest"
                                        ],
                                        "description": "The type of splash page for the SSID ('None', 'Click-through splash page', 'Billing', 'Password-protected with Meraki RADIUS', 'Password-protected with custom RADIUS', 'Password-protected with Active Directory', 'Password-protected with LDAP', 'SMS authentication', 'Systems Manager Sentry', 'Facebook Wi-Fi', 'Google OAuth' or 'Sponsored guest'). This attribute is not supported for template children."
                                    },
                                    "radiusServers": {
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "host": {
                                                    "type": "string",
                                                    "description": "IP address of your RADIUS server",
                                                    "required": true
                                                },
                                                "port": {
                                                    "type": "integer",
                                                    "description": "UDP port the RADIUS server listens on for Access-requests"
                                                },
                                                "secret": {
                                                    "type": "string",
                                                    "description": "RADIUS client shared secret",
                                                    "required": true
                                                }
                                            }
                                        },
                                        "description": "The RADIUS 802.1X servers to be used for authentication. This param is only valid if the authMode is 'open-with-radius', '8021x-radius' or 'ipsk-with-radius'"
                                    },
                                    "radiusCoaEnabled": {
                                        "type": "boolean",
                                        "description": "If true, Meraki devices will act as a RADIUS Dynamic Authorization Server and will respond to RADIUS Change-of-Authorization and Disconnect messages sent by the RADIUS server."
                                    },
                                    "radiusFailoverPolicy": {
                                        "type": "string",
                                        "enum": [
                                            "Deny access",
                                            "Allow access"
                                        ],
                                        "description": "This policy determines how authentication requests should be handled in the event that all of the configured RADIUS servers are unreachable ('Deny access' or 'Allow access')"
                                    },
                                    "radiusLoadBalancingPolicy": {
                                        "type": "string",
                                        "enum": [
                                            "Strict priority order",
                                            "Round robin"
                                        ],
                                        "description": "This policy determines which RADIUS server will be contacted first in an authentication attempt and the ordering of any necessary retry attempts ('Strict priority order' or 'Round robin')"
                                    },
                                    "radiusAccountingEnabled": {
                                        "type": "boolean",
                                        "description": "Whether or not RADIUS accounting is enabled. This param is only valid if the authMode is 'open-with-radius', '8021x-radius' or 'ipsk-with-radius'"
                                    },
                                    "radiusAccountingServers": {
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "host": {
                                                    "type": "string",
                                                    "description": "IP address to which the APs will send RADIUS accounting messages",
                                                    "required": true
                                                },
                                                "port": {
                                                    "type": "integer",
                                                    "description": "Port on the RADIUS server that is listening for accounting messages"
                                                },
                                                "secret": {
                                                    "type": "string",
                                                    "description": "Shared key used to authenticate messages between the APs and RADIUS server",
                                                    "required": true
                                                }
                                            }
                                        },
                                        "description": "The RADIUS accounting 802.1X servers to be used for authentication. This param is only valid if the authMode is 'open-with-radius', '8021x-radius' or 'ipsk-with-radius' and radiusAccountingEnabled is 'true'"
                                    },
                                    "radiusAttributeForGroupPolicies": {
                                        "type": "string",
                                        "description": "Specify the RADIUS attribute used to look up group policies ('Filter-Id', 'Reply-Message', 'Airespace-ACL-Name' or 'Aruba-User-Role'). Access points must receive this attribute in the RADIUS Access-Accept message"
                                    },
                                    "ipAssignmentMode": {
                                        "type": "string",
                                        "description": "The client IP assignment mode ('NAT mode', 'Bridge mode', 'Layer 3 roaming', 'Layer 3 roaming with a concentrator' or 'VPN')"
                                    },
                                    "useVlanTagging": {
                                        "type": "boolean",
                                        "description": "Whether or not traffic should be directed to use specific VLANs. This param is only valid if the ipAssignmentMode is 'Bridge mode' or 'Layer 3 roaming'"
                                    },
                                    "concentratorNetworkId": {
                                        "type": "string",
                                        "description": "The concentrator to use when the ipAssignmentMode is 'Layer 3 roaming with a concentrator' or 'VPN'."
                                    },
                                    "vlanId": {
                                        "type": "integer",
                                        "description": "The VLAN ID used for VLAN tagging. This param is only valid when the ipAssignmentMode is 'Layer 3 roaming with a concentrator' or 'VPN'"
                                    },
                                    "defaultVlanId": {
                                        "type": "integer",
                                        "description": "The default VLAN ID used for 'all other APs'. This param is only valid when the ipAssignmentMode is 'Bridge mode' or 'Layer 3 roaming'"
                                    },
                                    "apTagsAndVlanIds": {
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "tags": {
                                                    "type": "string",
                                                    "description": "Comma-separated list of AP tags"
                                                },
                                                "vlanId": {
                                                    "type": "integer",
                                                    "description": "Numerical identifier that is assigned to the VLAN"
                                                }
                                            }
                                        },
                                        "description": "The list of tags and VLAN IDs used for VLAN tagging. This param is only valid when the ipAssignmentMode is 'Bridge mode' or 'Layer 3 roaming'"
                                    },
                                    "walledGardenEnabled": {
                                        "type": "boolean",
                                        "description": "Allow access to a configurable list of IP ranges, which users may access prior to sign-on."
                                    },
                                    "walledGardenRanges": {
                                        "type": "string",
                                        "description": "Specify your walled garden by entering space-separated addresses, ranges using CIDR notation, domain names, and domain wildcards (e.g. 192.168.1.1/24 192.168.37.10/32 www.yahoo.com *.google.com). Meraki's splash page is automatically included in your walled garden."
                                    },
                                    "radiusOverride": {
                                        "type": "boolean",
                                        "description": "If true, the RADIUS response can override VLAN tag. This is not valid when ipAssignmentMode is 'NAT mode'."
                                    },
                                    "minBitrate": {
                                        "type": "number",
                                        "format": "float",
                                        "description": "The minimum bitrate in Mbps. ('1', '2', '5.5', '6', '9', '11', '12', '18', '24', '36', '48' or '54')"
                                    },
                                    "bandSelection": {
                                        "type": "string",
                                        "description": "The client-serving radio frequencies. ('Dual band operation', '5 GHz band only' or 'Dual band operation with Band Steering')"
                                    },
                                    "perClientBandwidthLimitUp": {
                                        "type": "integer",
                                        "description": "The upload bandwidth limit in Kbps. (0 represents no limit.)"
                                    },
                                    "perClientBandwidthLimitDown": {
                                        "type": "integer",
                                        "description": "The download bandwidth limit in Kbps. (0 represents no limit.)"
                                    },
                                    "lanIsolationEnabled": {
                                        "type": "boolean",
                                        "description": "Boolean indicating whether Layer 2 LAN isolation should be enabled or disabled. Only configurable when ipAssignmentMode is 'Bridge mode'."
                                    },
                                    "visible": {
                                        "type": "boolean",
                                        "description": "Boolean indicating whether APs should advertise or hide this SSID. APs will only broadcast this SSID if set to true"
                                    },
                                    "availableOnAllAps": {
                                        "type": "boolean",
                                        "description": "Boolean indicating whether all APs should broadcast the SSID or if it should be restricted to APs matching any availability tags. Can only be false if the SSID has availability tags."
                                    },
                                    "availabilityTags": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        },
                                        "description": "Accepts a list of tags for this SSID. If availableOnAllAps is false, then the SSID will only be broadcast by APs with tags matching any of the tags in this list."
                                    }
                                },
                                "example": {
                                    "name": "My SSID",
                                    "enabled": true
                                }
                            }
                        }
                    },
                    "responses": {
                        "200": {
                            "description": "Successful operation",
                            "schema": {
                                "type": "object",
                                "x-is-dynamic": true
                            },
                            "examples": {
                                "application/json": {
                                    "number": 0,
                                    "name": "My SSID",
                                    "enabled": true,
                                    "splashPage": "Click-through splash page",
                                    "ssidAdminAccessible": false,
                                    "authMode": "8021x-radius",
                                    "encryptionMode": "wpa-eap",
                                    "wpaEncryptionMode": "WPA2 only",
                                    "radiusServers": [{
                                        "host": "0.0.0.0",
                                        "port": 3000
                                    }],
                                    "radiusAccountingEnabled": false,
                                    "radiusEnabled": true,
                                    "radiusAttributeForGroupPolicies": "Filter-Id",
                                    "radiusFailoverPolicy": "null",
                                    "radiusLoadBalancingPolicy": "null",
                                    "ipAssignmentMode": "NAT mode",
                                    "adminSplashUrl": "http://example.com",
                                    "splashTimeout": "30 minutes",
                                    "walledGardenEnabled": true,
                                    "walledGardenRanges": "example.com",
                                    "minBitrate": 11,
                                    "bandSelection": "5 GHz band only",
                                    "perClientBandwidthLimitUp": 0,
                                    "perClientBandwidthLimitDown": 0,
                                    "visible": true,
                                    "availableOnAllAps": false,
                                    "availabilityTags": [
                                        "test-tag"
                                    ]
                                }
                            }
                        }
                    },
                    "summary": "Update the attributes of an SSID",
                    "tags": [
                        "SSIDs"
                    ],
                    "consumes": [
                        "application/json"
                    ],
                    "produces": [
                        "application/json"
                    ],
                    "schemes": [
                        "https"
                    ],
                    "security": [{
                        "meraki_api_key": []
                    }]
                }
            },
            "type": "warnings",
            "name": "What's Changed"
        },
        {
            "ruleId": "delete-path",
            "message": "`/networks/{network_id}/sm/devices/lock` - Deleted",
            "messageHtml": "Deleted",
            "path": "/networks/{network_id}/sm/devices/lock",
            "details": {
                "put": {
                    "description": "Lock a set of devices",
                    "operationId": "lockNetworkSmDevices",
                    "parameters": {
                        "network_id": {
                            "name": "network_id",
                            "in": "path",
                            "type": "string",
                            "required": true
                        },
                        "lockNetworkSmDevices": {
                            "name": "lockNetworkSmDevices",
                            "in": "body",
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "wifiMacs": {
                                        "type": "string",
                                        "description": "The wifiMacs of the devices to be locked."
                                    },
                                    "ids": {
                                        "type": "string",
                                        "description": "The ids of the devices to be locked."
                                    },
                                    "serials": {
                                        "type": "string",
                                        "description": "The serials of the devices to be locked."
                                    },
                                    "scope": {
                                        "type": "string",
                                        "description": "The scope (one of all, none, withAny, withAll, withoutAny, or withoutAll) and a set of tags of the devices to be wiped."
                                    },
                                    "pin": {
                                        "type": "integer",
                                        "description": "The pin number for locking macOS devices (a six digit number). Required only for macOS devices."
                                    }
                                },
                                "example": {
                                    "ids": "\"1284392014819\""
                                }
                            }
                        }
                    },
                    "responses": {
                        "200": {
                            "description": "Successful operation",
                            "schema": {
                                "type": "object",
                                "x-is-dynamic": true
                            },
                            "examples": {
                                "application/json": {
                                    "success": true
                                }
                            }
                        }
                    },
                    "summary": "Lock a set of devices",
                    "tags": [
                        "SM"
                    ],
                    "consumes": [
                        "application/json"
                    ],
                    "produces": [
                        "application/json"
                    ],
                    "schemes": [
                        "https"
                    ],
                    "security": [{
                        "meraki_api_key": []
                    }]
                }
            },
            "type": "warnings",
            "name": "What's Changed"
        },
        {
            "ruleId": "delete-path",
            "message": "`/organizations/{organizationId}/inventory` - Deleted",
            "messageHtml": "Deleted",
            "path": "/organizations/{organizationId}/inventory",
            "details": {
                "get": {
                    "description": "Return the inventory for an organization",
                    "operationId": "getOrganizationInventory",
                    "parameters": {
                        "organizationId": {
                            "name": "organizationId",
                            "in": "path",
                            "type": "string",
                            "required": true
                        },
                        "includeLicenseInfo": {
                            "type": "boolean",
                            "name": "includeLicenseInfo",
                            "in": "query",
                            "description": "When this parameter is true, each entity in the response will include the license expiration date of the device (if any). Only applies to organizations that support per-device licensing. Defaults to false."
                        }
                    },
                    "responses": {
                        "200": {
                            "description": "Successful operation",
                            "schema": {
                                "type": "object",
                                "x-is-dynamic": true
                            },
                            "examples": {
                                "application/json": [{
                                    "mac": "00:11:22:33:44:55",
                                    "serial": "Q234-ABCD-5678",
                                    "networkId": "N_24329156",
                                    "model": "MR34",
                                    "claimedAt": 1518365681,
                                    "publicIp": "123.123.123.1",
                                    "name": "My AP"
                                }]
                            }
                        }
                    },
                    "summary": "Return the inventory for an organization",
                    "tags": [
                        "Organizations"
                    ],
                    "consumes": [
                        "application/json"
                    ],
                    "produces": [
                        "application/json"
                    ],
                    "schemes": [
                        "https"
                    ],
                    "security": [{
                        "meraki_api_key": []
                    }]
                }
            },
            "type": "warnings",
            "name": "What's Changed"
        },
        {
            "ruleId": "edit-object-property-type",
            "message": "`paths//organizations/{organizationId}/networks/post/parameters/createOrganizationNetwork/schema` - Property `tags` type turn from `string` to `array`",
            "messageHtml": "Property <code>tags</code> type turn from <code>string</code> to <code>array</code>",
            "objectPath": "paths//organizations/{organizationId}/networks/post/parameters/createOrganizationNetwork/schema",
            "path": "/organizations/{organizationId}/networks",
            "method": "post",
            "Property": "tags",
            "previousType": "string",
            "currentType": "array",
            "type": "warnings",
            "name": "What's Changed",
            "group": "organizations",
            "apiDetails": {
                "description": "Create a network",
                "operationId": "createOrganizationNetwork",
                "parameters": [{
                        "name": "organizationId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "createOrganizationNetwork",
                        "in": "body",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "description": "The name of the new network",
                                    "required": true
                                },
                                "productTypes": {
                                    "type": "array",
                                    "items": {
                                        "type": "string",
                                        "enum": [
                                            "wireless",
                                            "appliance",
                                            "switch",
                                            "systemsManager",
                                            "camera",
                                            "cellularGateway"
                                        ]
                                    },
                                    "description": "The product type(s) of the new network. Valid types are wireless, appliance, switch, systemsManager, camera, cellularGateway. If more than one type is included, the network will be a combined network.",
                                    "required": true
                                },
                                "tags": {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    },
                                    "description": "A list of tags to be applied to the network"
                                },
                                "timeZone": {
                                    "type": "string",
                                    "description": "The timezone of the network. For a list of allowed timezones, please see the 'TZ' column in the table in <a target='_blank' href='https://en.wikipedia.org/wiki/List_of_tz_database_time_zones'>this article.</a>"
                                },
                                "copyFromNetworkId": {
                                    "type": "string",
                                    "description": "The ID of the network to copy configuration from. Other provided parameters will override the copied configuration, except type which must match this network's type exactly."
                                }
                            },
                            "example": {
                                "name": "Long Island Office",
                                "timeZone": "America/Los_Angeles",
                                "tags": [
                                    "tag1",
                                    "tag2"
                                ],
                                "productTypes": [
                                    "appliance",
                                    "switch",
                                    "camera"
                                ]
                            }
                        },
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "object"
                        },
                        "examples": {
                            "application/json": {
                                "id": "L_123456",
                                "organizationId": "2930418",
                                "name": "Long Island Office",
                                "timeZone": "America/Los_Angeles",
                                "tags": [
                                    "tag1",
                                    "tag2"
                                ],
                                "productTypes": [
                                    "appliance",
                                    "switch",
                                    "wireless"
                                ],
                                "enrollmentString": "long-island-office"
                            }
                        }
                    }
                },
                "summary": "Create a network",
                "tags": [
                    "organizations",
                    "configure",
                    "networks"
                ]
            },
            "docUrl": "https://developer.cisco.com/meraki/api/#/rest/api-endpoints/organizations/create-organization-network"
        },
        {
            "ruleId": "add-required-object-property",
            "message": "`paths//organizations/{organizationId}/networks/post/parameters/createOrganizationNetwork/schema` - Required property `productTypes` Added",
            "messageHtml": "Required property <span><code>productTypes</code> added</span>",
            "objectPath": "paths//organizations/{organizationId}/networks/post/parameters/createOrganizationNetwork/schema",
            "path": "/organizations/{organizationId}/networks",
            "method": "post",
            "property": "productTypes",
            "type": "warnings",
            "name": "What's Changed",
            "group": "organizations",
            "apiDetails": {
                "description": "Create a network",
                "operationId": "createOrganizationNetwork",
                "parameters": [{
                        "name": "organizationId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "createOrganizationNetwork",
                        "in": "body",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "description": "The name of the new network",
                                    "required": true
                                },
                                "productTypes": {
                                    "type": "array",
                                    "items": {
                                        "type": "string",
                                        "enum": [
                                            "wireless",
                                            "appliance",
                                            "switch",
                                            "systemsManager",
                                            "camera",
                                            "cellularGateway"
                                        ]
                                    },
                                    "description": "The product type(s) of the new network. Valid types are wireless, appliance, switch, systemsManager, camera, cellularGateway. If more than one type is included, the network will be a combined network.",
                                    "required": true
                                },
                                "tags": {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    },
                                    "description": "A list of tags to be applied to the network"
                                },
                                "timeZone": {
                                    "type": "string",
                                    "description": "The timezone of the network. For a list of allowed timezones, please see the 'TZ' column in the table in <a target='_blank' href='https://en.wikipedia.org/wiki/List_of_tz_database_time_zones'>this article.</a>"
                                },
                                "copyFromNetworkId": {
                                    "type": "string",
                                    "description": "The ID of the network to copy configuration from. Other provided parameters will override the copied configuration, except type which must match this network's type exactly."
                                }
                            },
                            "example": {
                                "name": "Long Island Office",
                                "timeZone": "America/Los_Angeles",
                                "tags": [
                                    "tag1",
                                    "tag2"
                                ],
                                "productTypes": [
                                    "appliance",
                                    "switch",
                                    "camera"
                                ]
                            }
                        },
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "object"
                        },
                        "examples": {
                            "application/json": {
                                "id": "L_123456",
                                "organizationId": "2930418",
                                "name": "Long Island Office",
                                "timeZone": "America/Los_Angeles",
                                "tags": [
                                    "tag1",
                                    "tag2"
                                ],
                                "productTypes": [
                                    "appliance",
                                    "switch",
                                    "wireless"
                                ],
                                "enrollmentString": "long-island-office"
                            }
                        }
                    }
                },
                "summary": "Create a network",
                "tags": [
                    "organizations",
                    "configure",
                    "networks"
                ]
            },
            "docUrl": "https://developer.cisco.com/meraki/api/#/rest/api-endpoints/organizations/create-organization-network"
        },
        {
            "ruleId": "edit-object-property-required",
            "message": "`paths//organizations/{organizationId}/samlRoles/post/parameters/createOrganizationSamlRole/schema` - Property `role` became required",
            "messageHtml": "Property <code>role</code> became required",
            "objectPath": "paths//organizations/{organizationId}/samlRoles/post/parameters/createOrganizationSamlRole/schema",
            "path": "/organizations/{organizationId}/samlRoles",
            "method": "post",
            "property": "role",
            "type": "warnings",
            "name": "What's Changed",
            "group": "organizations",
            "apiDetails": {
                "description": "Create a SAML role",
                "operationId": "createOrganizationSamlRole",
                "parameters": [{
                        "name": "organizationId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "createOrganizationSamlRole",
                        "in": "body",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "role": {
                                    "type": "string",
                                    "description": "The role of the SAML administrator",
                                    "required": true
                                },
                                "orgAccess": {
                                    "type": "string",
                                    "enum": [
                                        "none",
                                        "read-only",
                                        "full"
                                    ],
                                    "description": "The privilege of the SAML administrator on the organization. Can be one of 'none', 'read-only' or 'full'",
                                    "required": true
                                },
                                "tags": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "tag": {
                                                "type": "string",
                                                "description": "The name of the tag",
                                                "required": true
                                            },
                                            "access": {
                                                "type": "string",
                                                "enum": [
                                                    "full",
                                                    "read-only",
                                                    "guest-ambassador",
                                                    "monitor-only"
                                                ],
                                                "description": "The privilege of the SAML administrator on the tag. Can be one of 'full', 'read-only', 'guest-ambassador' or 'monitor-only'",
                                                "required": true
                                            }
                                        }
                                    },
                                    "description": "The list of tags that the SAML administrator has privleges on"
                                },
                                "networks": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "string",
                                                "description": "The network ID",
                                                "required": true
                                            },
                                            "access": {
                                                "type": "string",
                                                "enum": [
                                                    "full",
                                                    "read-only",
                                                    "guest-ambassador",
                                                    "monitor-only"
                                                ],
                                                "description": "The privilege of the SAML administrator on the network. Can be one of 'full', 'read-only', 'guest-ambassador' or 'monitor-only'",
                                                "required": true
                                            }
                                        }
                                    },
                                    "description": "The list of networks that the SAML administrator has privileges on"
                                }
                            },
                            "example": {
                                "role": "myrole",
                                "orgAccess": "none",
                                "networks": [{
                                    "id": "N_1234",
                                    "access": "full"
                                }],
                                "tags": [{
                                    "tag": "west",
                                    "access": "read-only"
                                }]
                            }
                        },
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "object"
                        },
                        "examples": {
                            "application/json": {
                                "id": "TEdJIEN1c3RvbWVy",
                                "role": "myrole",
                                "orgAccess": "none",
                                "networks": [{
                                    "id": "N_1234",
                                    "access": "full"
                                }],
                                "tags": [{
                                    "tag": "west",
                                    "access": "read-only"
                                }]
                            }
                        }
                    }
                },
                "summary": "Create a SAML role",
                "tags": [
                    "organizations",
                    "configure",
                    "samlRoles"
                ]
            },
            "docUrl": "https://developer.cisco.com/meraki/api/#/rest/api-endpoints/organizations/create-organization-saml-role"
        },
        {
            "ruleId": "edit-object-property-required",
            "message": "`paths//organizations/{organizationId}/samlRoles/post/parameters/createOrganizationSamlRole/schema` - Property `orgAccess` became required",
            "messageHtml": "Property <code>orgAccess</code> became required",
            "objectPath": "paths//organizations/{organizationId}/samlRoles/post/parameters/createOrganizationSamlRole/schema",
            "path": "/organizations/{organizationId}/samlRoles",
            "method": "post",
            "property": "orgAccess",
            "type": "warnings",
            "name": "What's Changed",
            "group": "organizations",
            "apiDetails": {
                "description": "Create a SAML role",
                "operationId": "createOrganizationSamlRole",
                "parameters": [{
                        "name": "organizationId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "createOrganizationSamlRole",
                        "in": "body",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "role": {
                                    "type": "string",
                                    "description": "The role of the SAML administrator",
                                    "required": true
                                },
                                "orgAccess": {
                                    "type": "string",
                                    "enum": [
                                        "none",
                                        "read-only",
                                        "full"
                                    ],
                                    "description": "The privilege of the SAML administrator on the organization. Can be one of 'none', 'read-only' or 'full'",
                                    "required": true
                                },
                                "tags": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "tag": {
                                                "type": "string",
                                                "description": "The name of the tag",
                                                "required": true
                                            },
                                            "access": {
                                                "type": "string",
                                                "enum": [
                                                    "full",
                                                    "read-only",
                                                    "guest-ambassador",
                                                    "monitor-only"
                                                ],
                                                "description": "The privilege of the SAML administrator on the tag. Can be one of 'full', 'read-only', 'guest-ambassador' or 'monitor-only'",
                                                "required": true
                                            }
                                        }
                                    },
                                    "description": "The list of tags that the SAML administrator has privleges on"
                                },
                                "networks": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "string",
                                                "description": "The network ID",
                                                "required": true
                                            },
                                            "access": {
                                                "type": "string",
                                                "enum": [
                                                    "full",
                                                    "read-only",
                                                    "guest-ambassador",
                                                    "monitor-only"
                                                ],
                                                "description": "The privilege of the SAML administrator on the network. Can be one of 'full', 'read-only', 'guest-ambassador' or 'monitor-only'",
                                                "required": true
                                            }
                                        }
                                    },
                                    "description": "The list of networks that the SAML administrator has privileges on"
                                }
                            },
                            "example": {
                                "role": "myrole",
                                "orgAccess": "none",
                                "networks": [{
                                    "id": "N_1234",
                                    "access": "full"
                                }],
                                "tags": [{
                                    "tag": "west",
                                    "access": "read-only"
                                }]
                            }
                        },
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "object"
                        },
                        "examples": {
                            "application/json": {
                                "id": "TEdJIEN1c3RvbWVy",
                                "role": "myrole",
                                "orgAccess": "none",
                                "networks": [{
                                    "id": "N_1234",
                                    "access": "full"
                                }],
                                "tags": [{
                                    "tag": "west",
                                    "access": "read-only"
                                }]
                            }
                        }
                    }
                },
                "summary": "Create a SAML role",
                "tags": [
                    "organizations",
                    "configure",
                    "samlRoles"
                ]
            },
            "docUrl": "https://developer.cisco.com/meraki/api/#/rest/api-endpoints/organizations/create-organization-saml-role"
        },
        {
            "ruleId": "edit-object-property-required",
            "message": "`paths//organizations/{organizationId}/samlRoles/post/parameters/createOrganizationSamlRole/schema/properties/tags/items` - Property `tag` became required",
            "messageHtml": "Property <code>tag</code> became required",
            "objectPath": "paths//organizations/{organizationId}/samlRoles/post/parameters/createOrganizationSamlRole/schema/properties/tags/items",
            "path": "/organizations/{organizationId}/samlRoles",
            "method": "post",
            "property": "tag",
            "type": "warnings",
            "name": "What's Changed",
            "group": "organizations",
            "apiDetails": {
                "description": "Create a SAML role",
                "operationId": "createOrganizationSamlRole",
                "parameters": [{
                        "name": "organizationId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "createOrganizationSamlRole",
                        "in": "body",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "role": {
                                    "type": "string",
                                    "description": "The role of the SAML administrator",
                                    "required": true
                                },
                                "orgAccess": {
                                    "type": "string",
                                    "enum": [
                                        "none",
                                        "read-only",
                                        "full"
                                    ],
                                    "description": "The privilege of the SAML administrator on the organization. Can be one of 'none', 'read-only' or 'full'",
                                    "required": true
                                },
                                "tags": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "tag": {
                                                "type": "string",
                                                "description": "The name of the tag",
                                                "required": true
                                            },
                                            "access": {
                                                "type": "string",
                                                "enum": [
                                                    "full",
                                                    "read-only",
                                                    "guest-ambassador",
                                                    "monitor-only"
                                                ],
                                                "description": "The privilege of the SAML administrator on the tag. Can be one of 'full', 'read-only', 'guest-ambassador' or 'monitor-only'",
                                                "required": true
                                            }
                                        }
                                    },
                                    "description": "The list of tags that the SAML administrator has privleges on"
                                },
                                "networks": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "string",
                                                "description": "The network ID",
                                                "required": true
                                            },
                                            "access": {
                                                "type": "string",
                                                "enum": [
                                                    "full",
                                                    "read-only",
                                                    "guest-ambassador",
                                                    "monitor-only"
                                                ],
                                                "description": "The privilege of the SAML administrator on the network. Can be one of 'full', 'read-only', 'guest-ambassador' or 'monitor-only'",
                                                "required": true
                                            }
                                        }
                                    },
                                    "description": "The list of networks that the SAML administrator has privileges on"
                                }
                            },
                            "example": {
                                "role": "myrole",
                                "orgAccess": "none",
                                "networks": [{
                                    "id": "N_1234",
                                    "access": "full"
                                }],
                                "tags": [{
                                    "tag": "west",
                                    "access": "read-only"
                                }]
                            }
                        },
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "object"
                        },
                        "examples": {
                            "application/json": {
                                "id": "TEdJIEN1c3RvbWVy",
                                "role": "myrole",
                                "orgAccess": "none",
                                "networks": [{
                                    "id": "N_1234",
                                    "access": "full"
                                }],
                                "tags": [{
                                    "tag": "west",
                                    "access": "read-only"
                                }]
                            }
                        }
                    }
                },
                "summary": "Create a SAML role",
                "tags": [
                    "organizations",
                    "configure",
                    "samlRoles"
                ]
            },
            "docUrl": "https://developer.cisco.com/meraki/api/#/rest/api-endpoints/organizations/create-organization-saml-role"
        },
        {
            "ruleId": "edit-object-property-required",
            "message": "`paths//organizations/{organizationId}/samlRoles/post/parameters/createOrganizationSamlRole/schema/properties/tags/items` - Property `access` became required",
            "messageHtml": "Property <code>access</code> became required",
            "objectPath": "paths//organizations/{organizationId}/samlRoles/post/parameters/createOrganizationSamlRole/schema/properties/tags/items",
            "path": "/organizations/{organizationId}/samlRoles",
            "method": "post",
            "property": "access",
            "type": "warnings",
            "name": "What's Changed",
            "group": "organizations",
            "apiDetails": {
                "description": "Create a SAML role",
                "operationId": "createOrganizationSamlRole",
                "parameters": [{
                        "name": "organizationId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "createOrganizationSamlRole",
                        "in": "body",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "role": {
                                    "type": "string",
                                    "description": "The role of the SAML administrator",
                                    "required": true
                                },
                                "orgAccess": {
                                    "type": "string",
                                    "enum": [
                                        "none",
                                        "read-only",
                                        "full"
                                    ],
                                    "description": "The privilege of the SAML administrator on the organization. Can be one of 'none', 'read-only' or 'full'",
                                    "required": true
                                },
                                "tags": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "tag": {
                                                "type": "string",
                                                "description": "The name of the tag",
                                                "required": true
                                            },
                                            "access": {
                                                "type": "string",
                                                "enum": [
                                                    "full",
                                                    "read-only",
                                                    "guest-ambassador",
                                                    "monitor-only"
                                                ],
                                                "description": "The privilege of the SAML administrator on the tag. Can be one of 'full', 'read-only', 'guest-ambassador' or 'monitor-only'",
                                                "required": true
                                            }
                                        }
                                    },
                                    "description": "The list of tags that the SAML administrator has privleges on"
                                },
                                "networks": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "string",
                                                "description": "The network ID",
                                                "required": true
                                            },
                                            "access": {
                                                "type": "string",
                                                "enum": [
                                                    "full",
                                                    "read-only",
                                                    "guest-ambassador",
                                                    "monitor-only"
                                                ],
                                                "description": "The privilege of the SAML administrator on the network. Can be one of 'full', 'read-only', 'guest-ambassador' or 'monitor-only'",
                                                "required": true
                                            }
                                        }
                                    },
                                    "description": "The list of networks that the SAML administrator has privileges on"
                                }
                            },
                            "example": {
                                "role": "myrole",
                                "orgAccess": "none",
                                "networks": [{
                                    "id": "N_1234",
                                    "access": "full"
                                }],
                                "tags": [{
                                    "tag": "west",
                                    "access": "read-only"
                                }]
                            }
                        },
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "object"
                        },
                        "examples": {
                            "application/json": {
                                "id": "TEdJIEN1c3RvbWVy",
                                "role": "myrole",
                                "orgAccess": "none",
                                "networks": [{
                                    "id": "N_1234",
                                    "access": "full"
                                }],
                                "tags": [{
                                    "tag": "west",
                                    "access": "read-only"
                                }]
                            }
                        }
                    }
                },
                "summary": "Create a SAML role",
                "tags": [
                    "organizations",
                    "configure",
                    "samlRoles"
                ]
            },
            "docUrl": "https://developer.cisco.com/meraki/api/#/rest/api-endpoints/organizations/create-organization-saml-role"
        },
        {
            "ruleId": "edit-object-property-required",
            "message": "`paths//organizations/{organizationId}/samlRoles/post/parameters/createOrganizationSamlRole/schema/properties/networks/items` - Property `id` became required",
            "messageHtml": "Property <code>id</code> became required",
            "objectPath": "paths//organizations/{organizationId}/samlRoles/post/parameters/createOrganizationSamlRole/schema/properties/networks/items",
            "path": "/organizations/{organizationId}/samlRoles",
            "method": "post",
            "property": "id",
            "type": "warnings",
            "name": "What's Changed",
            "group": "organizations",
            "apiDetails": {
                "description": "Create a SAML role",
                "operationId": "createOrganizationSamlRole",
                "parameters": [{
                        "name": "organizationId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "createOrganizationSamlRole",
                        "in": "body",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "role": {
                                    "type": "string",
                                    "description": "The role of the SAML administrator",
                                    "required": true
                                },
                                "orgAccess": {
                                    "type": "string",
                                    "enum": [
                                        "none",
                                        "read-only",
                                        "full"
                                    ],
                                    "description": "The privilege of the SAML administrator on the organization. Can be one of 'none', 'read-only' or 'full'",
                                    "required": true
                                },
                                "tags": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "tag": {
                                                "type": "string",
                                                "description": "The name of the tag",
                                                "required": true
                                            },
                                            "access": {
                                                "type": "string",
                                                "enum": [
                                                    "full",
                                                    "read-only",
                                                    "guest-ambassador",
                                                    "monitor-only"
                                                ],
                                                "description": "The privilege of the SAML administrator on the tag. Can be one of 'full', 'read-only', 'guest-ambassador' or 'monitor-only'",
                                                "required": true
                                            }
                                        }
                                    },
                                    "description": "The list of tags that the SAML administrator has privleges on"
                                },
                                "networks": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "string",
                                                "description": "The network ID",
                                                "required": true
                                            },
                                            "access": {
                                                "type": "string",
                                                "enum": [
                                                    "full",
                                                    "read-only",
                                                    "guest-ambassador",
                                                    "monitor-only"
                                                ],
                                                "description": "The privilege of the SAML administrator on the network. Can be one of 'full', 'read-only', 'guest-ambassador' or 'monitor-only'",
                                                "required": true
                                            }
                                        }
                                    },
                                    "description": "The list of networks that the SAML administrator has privileges on"
                                }
                            },
                            "example": {
                                "role": "myrole",
                                "orgAccess": "none",
                                "networks": [{
                                    "id": "N_1234",
                                    "access": "full"
                                }],
                                "tags": [{
                                    "tag": "west",
                                    "access": "read-only"
                                }]
                            }
                        },
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "object"
                        },
                        "examples": {
                            "application/json": {
                                "id": "TEdJIEN1c3RvbWVy",
                                "role": "myrole",
                                "orgAccess": "none",
                                "networks": [{
                                    "id": "N_1234",
                                    "access": "full"
                                }],
                                "tags": [{
                                    "tag": "west",
                                    "access": "read-only"
                                }]
                            }
                        }
                    }
                },
                "summary": "Create a SAML role",
                "tags": [
                    "organizations",
                    "configure",
                    "samlRoles"
                ]
            },
            "docUrl": "https://developer.cisco.com/meraki/api/#/rest/api-endpoints/organizations/create-organization-saml-role"
        },
        {
            "ruleId": "edit-object-property-required",
            "message": "`paths//organizations/{organizationId}/samlRoles/post/parameters/createOrganizationSamlRole/schema/properties/networks/items` - Property `access` became required",
            "messageHtml": "Property <code>access</code> became required",
            "objectPath": "paths//organizations/{organizationId}/samlRoles/post/parameters/createOrganizationSamlRole/schema/properties/networks/items",
            "path": "/organizations/{organizationId}/samlRoles",
            "method": "post",
            "property": "access",
            "type": "warnings",
            "name": "What's Changed",
            "group": "organizations",
            "apiDetails": {
                "description": "Create a SAML role",
                "operationId": "createOrganizationSamlRole",
                "parameters": [{
                        "name": "organizationId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "createOrganizationSamlRole",
                        "in": "body",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "role": {
                                    "type": "string",
                                    "description": "The role of the SAML administrator",
                                    "required": true
                                },
                                "orgAccess": {
                                    "type": "string",
                                    "enum": [
                                        "none",
                                        "read-only",
                                        "full"
                                    ],
                                    "description": "The privilege of the SAML administrator on the organization. Can be one of 'none', 'read-only' or 'full'",
                                    "required": true
                                },
                                "tags": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "tag": {
                                                "type": "string",
                                                "description": "The name of the tag",
                                                "required": true
                                            },
                                            "access": {
                                                "type": "string",
                                                "enum": [
                                                    "full",
                                                    "read-only",
                                                    "guest-ambassador",
                                                    "monitor-only"
                                                ],
                                                "description": "The privilege of the SAML administrator on the tag. Can be one of 'full', 'read-only', 'guest-ambassador' or 'monitor-only'",
                                                "required": true
                                            }
                                        }
                                    },
                                    "description": "The list of tags that the SAML administrator has privleges on"
                                },
                                "networks": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "string",
                                                "description": "The network ID",
                                                "required": true
                                            },
                                            "access": {
                                                "type": "string",
                                                "enum": [
                                                    "full",
                                                    "read-only",
                                                    "guest-ambassador",
                                                    "monitor-only"
                                                ],
                                                "description": "The privilege of the SAML administrator on the network. Can be one of 'full', 'read-only', 'guest-ambassador' or 'monitor-only'",
                                                "required": true
                                            }
                                        }
                                    },
                                    "description": "The list of networks that the SAML administrator has privileges on"
                                }
                            },
                            "example": {
                                "role": "myrole",
                                "orgAccess": "none",
                                "networks": [{
                                    "id": "N_1234",
                                    "access": "full"
                                }],
                                "tags": [{
                                    "tag": "west",
                                    "access": "read-only"
                                }]
                            }
                        },
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "object"
                        },
                        "examples": {
                            "application/json": {
                                "id": "TEdJIEN1c3RvbWVy",
                                "role": "myrole",
                                "orgAccess": "none",
                                "networks": [{
                                    "id": "N_1234",
                                    "access": "full"
                                }],
                                "tags": [{
                                    "tag": "west",
                                    "access": "read-only"
                                }]
                            }
                        }
                    }
                },
                "summary": "Create a SAML role",
                "tags": [
                    "organizations",
                    "configure",
                    "samlRoles"
                ]
            },
            "docUrl": "https://developer.cisco.com/meraki/api/#/rest/api-endpoints/organizations/create-organization-saml-role"
        },
        {
            "ruleId": "edit-param-required",
            "message": "`/organizations/{organizationId}/samlRoles` (post) - Param `createOrganizationSamlRole` became required",
            "messageHtml": "Param <code>createOrganizationSamlRole</code> became required",
            "path": "/organizations/{organizationId}/samlRoles",
            "method": "post",
            "param": "createOrganizationSamlRole",
            "type": "warnings",
            "name": "What's Changed",
            "group": "organizations",
            "apiDetails": {
                "description": "Create a SAML role",
                "operationId": "createOrganizationSamlRole",
                "parameters": [{
                        "name": "organizationId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "createOrganizationSamlRole",
                        "in": "body",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "role": {
                                    "type": "string",
                                    "description": "The role of the SAML administrator",
                                    "required": true
                                },
                                "orgAccess": {
                                    "type": "string",
                                    "enum": [
                                        "none",
                                        "read-only",
                                        "full"
                                    ],
                                    "description": "The privilege of the SAML administrator on the organization. Can be one of 'none', 'read-only' or 'full'",
                                    "required": true
                                },
                                "tags": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "tag": {
                                                "type": "string",
                                                "description": "The name of the tag",
                                                "required": true
                                            },
                                            "access": {
                                                "type": "string",
                                                "enum": [
                                                    "full",
                                                    "read-only",
                                                    "guest-ambassador",
                                                    "monitor-only"
                                                ],
                                                "description": "The privilege of the SAML administrator on the tag. Can be one of 'full', 'read-only', 'guest-ambassador' or 'monitor-only'",
                                                "required": true
                                            }
                                        }
                                    },
                                    "description": "The list of tags that the SAML administrator has privleges on"
                                },
                                "networks": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "string",
                                                "description": "The network ID",
                                                "required": true
                                            },
                                            "access": {
                                                "type": "string",
                                                "enum": [
                                                    "full",
                                                    "read-only",
                                                    "guest-ambassador",
                                                    "monitor-only"
                                                ],
                                                "description": "The privilege of the SAML administrator on the network. Can be one of 'full', 'read-only', 'guest-ambassador' or 'monitor-only'",
                                                "required": true
                                            }
                                        }
                                    },
                                    "description": "The list of networks that the SAML administrator has privileges on"
                                }
                            },
                            "example": {
                                "role": "myrole",
                                "orgAccess": "none",
                                "networks": [{
                                    "id": "N_1234",
                                    "access": "full"
                                }],
                                "tags": [{
                                    "tag": "west",
                                    "access": "read-only"
                                }]
                            }
                        },
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "object"
                        },
                        "examples": {
                            "application/json": {
                                "id": "TEdJIEN1c3RvbWVy",
                                "role": "myrole",
                                "orgAccess": "none",
                                "networks": [{
                                    "id": "N_1234",
                                    "access": "full"
                                }],
                                "tags": [{
                                    "tag": "west",
                                    "access": "read-only"
                                }]
                            }
                        }
                    }
                },
                "summary": "Create a SAML role",
                "tags": [
                    "organizations",
                    "configure",
                    "samlRoles"
                ]
            },
            "docUrl": "https://developer.cisco.com/meraki/api/#/rest/api-endpoints/organizations/create-organization-saml-role"
        },
        {
            "ruleId": "edit-object-property-required",
            "message": "`paths//organizations/{organizationId}/samlRoles/{samlRoleId}/put/parameters/updateOrganizationSamlRole/schema/properties/tags/items` - Property `tag` became required",
            "messageHtml": "Property <code>tag</code> became required",
            "objectPath": "paths//organizations/{organizationId}/samlRoles/{samlRoleId}/put/parameters/updateOrganizationSamlRole/schema/properties/tags/items",
            "path": "/organizations/{organizationId}/samlRoles/{samlRoleId}",
            "method": "put",
            "property": "tag",
            "type": "warnings",
            "name": "What's Changed",
            "group": "organizations",
            "apiDetails": {
                "description": "Update a SAML role",
                "operationId": "updateOrganizationSamlRole",
                "parameters": [{
                        "name": "organizationId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "samlRoleId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "updateOrganizationSamlRole",
                        "in": "body",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "role": {
                                    "type": "string",
                                    "description": "The role of the SAML administrator"
                                },
                                "orgAccess": {
                                    "type": "string",
                                    "enum": [
                                        "none",
                                        "read-only",
                                        "full"
                                    ],
                                    "description": "The privilege of the SAML administrator on the organization. Can be one of 'none', 'read-only' or 'full'"
                                },
                                "tags": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "tag": {
                                                "type": "string",
                                                "description": "The name of the tag",
                                                "required": true
                                            },
                                            "access": {
                                                "type": "string",
                                                "enum": [
                                                    "full",
                                                    "read-only",
                                                    "guest-ambassador",
                                                    "monitor-only"
                                                ],
                                                "description": "The privilege of the SAML administrator on the tag. Can be one of 'full', 'read-only', 'guest-ambassador' or 'monitor-only'",
                                                "required": true
                                            }
                                        }
                                    },
                                    "description": "The list of tags that the SAML administrator has privleges on"
                                },
                                "networks": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "string",
                                                "description": "The network ID",
                                                "required": true
                                            },
                                            "access": {
                                                "type": "string",
                                                "enum": [
                                                    "full",
                                                    "read-only",
                                                    "guest-ambassador",
                                                    "monitor-only"
                                                ],
                                                "description": "The privilege of the SAML administrator on the network. Can be one of 'full', 'read-only', 'guest-ambassador' or 'monitor-only'",
                                                "required": true
                                            }
                                        }
                                    },
                                    "description": "The list of networks that the SAML administrator has privileges on"
                                }
                            },
                            "example": {
                                "orgAccess": "none",
                                "networks": [{
                                    "id": "N_1234",
                                    "access": "full"
                                }],
                                "tags": [{
                                    "tag": "west",
                                    "access": "read-only"
                                }]
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "object"
                        },
                        "examples": {
                            "application/json": {
                                "id": "TEdJIEN1c3RvbWVy",
                                "role": "myrole",
                                "orgAccess": "none",
                                "networks": [{
                                    "id": "N_1234",
                                    "access": "full"
                                }],
                                "tags": [{
                                    "tag": "west",
                                    "access": "read-only"
                                }]
                            }
                        }
                    }
                },
                "summary": "Update a SAML role",
                "tags": [
                    "organizations",
                    "configure",
                    "samlRoles"
                ]
            },
            "docUrl": "https://developer.cisco.com/meraki/api/#/rest/api-endpoints/organizations/update-organization-saml-role"
        },
        {
            "ruleId": "edit-object-property-required",
            "message": "`paths//organizations/{organizationId}/samlRoles/{samlRoleId}/put/parameters/updateOrganizationSamlRole/schema/properties/tags/items` - Property `access` became required",
            "messageHtml": "Property <code>access</code> became required",
            "objectPath": "paths//organizations/{organizationId}/samlRoles/{samlRoleId}/put/parameters/updateOrganizationSamlRole/schema/properties/tags/items",
            "path": "/organizations/{organizationId}/samlRoles/{samlRoleId}",
            "method": "put",
            "property": "access",
            "type": "warnings",
            "name": "What's Changed",
            "group": "organizations",
            "apiDetails": {
                "description": "Update a SAML role",
                "operationId": "updateOrganizationSamlRole",
                "parameters": [{
                        "name": "organizationId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "samlRoleId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "updateOrganizationSamlRole",
                        "in": "body",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "role": {
                                    "type": "string",
                                    "description": "The role of the SAML administrator"
                                },
                                "orgAccess": {
                                    "type": "string",
                                    "enum": [
                                        "none",
                                        "read-only",
                                        "full"
                                    ],
                                    "description": "The privilege of the SAML administrator on the organization. Can be one of 'none', 'read-only' or 'full'"
                                },
                                "tags": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "tag": {
                                                "type": "string",
                                                "description": "The name of the tag",
                                                "required": true
                                            },
                                            "access": {
                                                "type": "string",
                                                "enum": [
                                                    "full",
                                                    "read-only",
                                                    "guest-ambassador",
                                                    "monitor-only"
                                                ],
                                                "description": "The privilege of the SAML administrator on the tag. Can be one of 'full', 'read-only', 'guest-ambassador' or 'monitor-only'",
                                                "required": true
                                            }
                                        }
                                    },
                                    "description": "The list of tags that the SAML administrator has privleges on"
                                },
                                "networks": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "string",
                                                "description": "The network ID",
                                                "required": true
                                            },
                                            "access": {
                                                "type": "string",
                                                "enum": [
                                                    "full",
                                                    "read-only",
                                                    "guest-ambassador",
                                                    "monitor-only"
                                                ],
                                                "description": "The privilege of the SAML administrator on the network. Can be one of 'full', 'read-only', 'guest-ambassador' or 'monitor-only'",
                                                "required": true
                                            }
                                        }
                                    },
                                    "description": "The list of networks that the SAML administrator has privileges on"
                                }
                            },
                            "example": {
                                "orgAccess": "none",
                                "networks": [{
                                    "id": "N_1234",
                                    "access": "full"
                                }],
                                "tags": [{
                                    "tag": "west",
                                    "access": "read-only"
                                }]
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "object"
                        },
                        "examples": {
                            "application/json": {
                                "id": "TEdJIEN1c3RvbWVy",
                                "role": "myrole",
                                "orgAccess": "none",
                                "networks": [{
                                    "id": "N_1234",
                                    "access": "full"
                                }],
                                "tags": [{
                                    "tag": "west",
                                    "access": "read-only"
                                }]
                            }
                        }
                    }
                },
                "summary": "Update a SAML role",
                "tags": [
                    "organizations",
                    "configure",
                    "samlRoles"
                ]
            },
            "docUrl": "https://developer.cisco.com/meraki/api/#/rest/api-endpoints/organizations/update-organization-saml-role"
        },
        {
            "ruleId": "edit-object-property-required",
            "message": "`paths//organizations/{organizationId}/samlRoles/{samlRoleId}/put/parameters/updateOrganizationSamlRole/schema/properties/networks/items` - Property `id` became required",
            "messageHtml": "Property <code>id</code> became required",
            "objectPath": "paths//organizations/{organizationId}/samlRoles/{samlRoleId}/put/parameters/updateOrganizationSamlRole/schema/properties/networks/items",
            "path": "/organizations/{organizationId}/samlRoles/{samlRoleId}",
            "method": "put",
            "property": "id",
            "type": "warnings",
            "name": "What's Changed",
            "group": "organizations",
            "apiDetails": {
                "description": "Update a SAML role",
                "operationId": "updateOrganizationSamlRole",
                "parameters": [{
                        "name": "organizationId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "samlRoleId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "updateOrganizationSamlRole",
                        "in": "body",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "role": {
                                    "type": "string",
                                    "description": "The role of the SAML administrator"
                                },
                                "orgAccess": {
                                    "type": "string",
                                    "enum": [
                                        "none",
                                        "read-only",
                                        "full"
                                    ],
                                    "description": "The privilege of the SAML administrator on the organization. Can be one of 'none', 'read-only' or 'full'"
                                },
                                "tags": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "tag": {
                                                "type": "string",
                                                "description": "The name of the tag",
                                                "required": true
                                            },
                                            "access": {
                                                "type": "string",
                                                "enum": [
                                                    "full",
                                                    "read-only",
                                                    "guest-ambassador",
                                                    "monitor-only"
                                                ],
                                                "description": "The privilege of the SAML administrator on the tag. Can be one of 'full', 'read-only', 'guest-ambassador' or 'monitor-only'",
                                                "required": true
                                            }
                                        }
                                    },
                                    "description": "The list of tags that the SAML administrator has privleges on"
                                },
                                "networks": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "string",
                                                "description": "The network ID",
                                                "required": true
                                            },
                                            "access": {
                                                "type": "string",
                                                "enum": [
                                                    "full",
                                                    "read-only",
                                                    "guest-ambassador",
                                                    "monitor-only"
                                                ],
                                                "description": "The privilege of the SAML administrator on the network. Can be one of 'full', 'read-only', 'guest-ambassador' or 'monitor-only'",
                                                "required": true
                                            }
                                        }
                                    },
                                    "description": "The list of networks that the SAML administrator has privileges on"
                                }
                            },
                            "example": {
                                "orgAccess": "none",
                                "networks": [{
                                    "id": "N_1234",
                                    "access": "full"
                                }],
                                "tags": [{
                                    "tag": "west",
                                    "access": "read-only"
                                }]
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "object"
                        },
                        "examples": {
                            "application/json": {
                                "id": "TEdJIEN1c3RvbWVy",
                                "role": "myrole",
                                "orgAccess": "none",
                                "networks": [{
                                    "id": "N_1234",
                                    "access": "full"
                                }],
                                "tags": [{
                                    "tag": "west",
                                    "access": "read-only"
                                }]
                            }
                        }
                    }
                },
                "summary": "Update a SAML role",
                "tags": [
                    "organizations",
                    "configure",
                    "samlRoles"
                ]
            },
            "docUrl": "https://developer.cisco.com/meraki/api/#/rest/api-endpoints/organizations/update-organization-saml-role"
        },
        {
            "ruleId": "edit-object-property-required",
            "message": "`paths//organizations/{organizationId}/samlRoles/{samlRoleId}/put/parameters/updateOrganizationSamlRole/schema/properties/networks/items` - Property `access` became required",
            "messageHtml": "Property <code>access</code> became required",
            "objectPath": "paths//organizations/{organizationId}/samlRoles/{samlRoleId}/put/parameters/updateOrganizationSamlRole/schema/properties/networks/items",
            "path": "/organizations/{organizationId}/samlRoles/{samlRoleId}",
            "method": "put",
            "property": "access",
            "type": "warnings",
            "name": "What's Changed",
            "group": "organizations",
            "apiDetails": {
                "description": "Update a SAML role",
                "operationId": "updateOrganizationSamlRole",
                "parameters": [{
                        "name": "organizationId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "samlRoleId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "updateOrganizationSamlRole",
                        "in": "body",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "role": {
                                    "type": "string",
                                    "description": "The role of the SAML administrator"
                                },
                                "orgAccess": {
                                    "type": "string",
                                    "enum": [
                                        "none",
                                        "read-only",
                                        "full"
                                    ],
                                    "description": "The privilege of the SAML administrator on the organization. Can be one of 'none', 'read-only' or 'full'"
                                },
                                "tags": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "tag": {
                                                "type": "string",
                                                "description": "The name of the tag",
                                                "required": true
                                            },
                                            "access": {
                                                "type": "string",
                                                "enum": [
                                                    "full",
                                                    "read-only",
                                                    "guest-ambassador",
                                                    "monitor-only"
                                                ],
                                                "description": "The privilege of the SAML administrator on the tag. Can be one of 'full', 'read-only', 'guest-ambassador' or 'monitor-only'",
                                                "required": true
                                            }
                                        }
                                    },
                                    "description": "The list of tags that the SAML administrator has privleges on"
                                },
                                "networks": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "string",
                                                "description": "The network ID",
                                                "required": true
                                            },
                                            "access": {
                                                "type": "string",
                                                "enum": [
                                                    "full",
                                                    "read-only",
                                                    "guest-ambassador",
                                                    "monitor-only"
                                                ],
                                                "description": "The privilege of the SAML administrator on the network. Can be one of 'full', 'read-only', 'guest-ambassador' or 'monitor-only'",
                                                "required": true
                                            }
                                        }
                                    },
                                    "description": "The list of networks that the SAML administrator has privileges on"
                                }
                            },
                            "example": {
                                "orgAccess": "none",
                                "networks": [{
                                    "id": "N_1234",
                                    "access": "full"
                                }],
                                "tags": [{
                                    "tag": "west",
                                    "access": "read-only"
                                }]
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "object"
                        },
                        "examples": {
                            "application/json": {
                                "id": "TEdJIEN1c3RvbWVy",
                                "role": "myrole",
                                "orgAccess": "none",
                                "networks": [{
                                    "id": "N_1234",
                                    "access": "full"
                                }],
                                "tags": [{
                                    "tag": "west",
                                    "access": "read-only"
                                }]
                            }
                        }
                    }
                },
                "summary": "Update a SAML role",
                "tags": [
                    "organizations",
                    "configure",
                    "samlRoles"
                ]
            },
            "docUrl": "https://developer.cisco.com/meraki/api/#/rest/api-endpoints/organizations/update-organization-saml-role"
        },
        {
            "ruleId": "edit-object-property-type",
            "message": "`paths//organizations/{organizationId}/snmp/put/parameters/updateOrganizationSnmp/schema` - Property `peerIps` type turn from `string` to `array`",
            "messageHtml": "Property <code>peerIps</code> type turn from <code>string</code> to <code>array</code>",
            "objectPath": "paths//organizations/{organizationId}/snmp/put/parameters/updateOrganizationSnmp/schema",
            "path": "/organizations/{organizationId}/snmp",
            "method": "put",
            "Property": "peerIps",
            "previousType": "string",
            "currentType": "array",
            "type": "warnings",
            "name": "What's Changed",
            "group": "organizations",
            "apiDetails": {
                "description": "Update the SNMP settings for an organization",
                "operationId": "updateOrganizationSnmp",
                "parameters": [{
                        "name": "organizationId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "updateOrganizationSnmp",
                        "in": "body",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "v2cEnabled": {
                                    "type": "boolean",
                                    "description": "Boolean indicating whether SNMP version 2c is enabled for the organization."
                                },
                                "v3Enabled": {
                                    "type": "boolean",
                                    "description": "Boolean indicating whether SNMP version 3 is enabled for the organization."
                                },
                                "v3AuthMode": {
                                    "type": "string",
                                    "enum": [
                                        "MD5",
                                        "SHA"
                                    ],
                                    "description": "The SNMP version 3 authentication mode. Can be either 'MD5' or 'SHA'."
                                },
                                "v3AuthPass": {
                                    "type": "string",
                                    "description": "The SNMP version 3 authentication password. Must be at least 8 characters if specified."
                                },
                                "v3PrivMode": {
                                    "type": "string",
                                    "enum": [
                                        "DES",
                                        "AES128"
                                    ],
                                    "description": "The SNMP version 3 privacy mode. Can be either 'DES' or 'AES128'."
                                },
                                "v3PrivPass": {
                                    "type": "string",
                                    "description": "The SNMP version 3 privacy password. Must be at least 8 characters if specified."
                                },
                                "peerIps": {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    },
                                    "description": "The list of IPv4 addresses that are allowed to access the SNMP server."
                                }
                            },
                            "example": {
                                "v2cEnabled": false,
                                "v3Enabled": true,
                                "v3AuthMode": "SHA",
                                "v3PrivMode": "AES128",
                                "peerIps": [
                                    "123.123.123.1"
                                ]
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "object"
                        },
                        "examples": {
                            "application/json": {
                                "v2cEnabled": false,
                                "v3Enabled": true,
                                "v3AuthMode": "SHA",
                                "v3PrivMode": "AES128",
                                "peerIps": [
                                    "123.123.123.1"
                                ],
                                "hostname": "snmp.meraki.com",
                                "port": 443
                            }
                        }
                    }
                },
                "summary": "Update the SNMP settings for an organization",
                "tags": [
                    "organizations",
                    "configure",
                    "snmp"
                ]
            },
            "docUrl": "https://developer.cisco.com/meraki/api/#/rest/api-endpoints/organizations/update-organization-snmp"
        },
        {
            "ruleId": "delete-object-property",
            "message": "`paths//networks/{networkId}/put/parameters/updateNetwork/schema` - Property `disableMyMerakiCom` Deleted",
            "messageHtml": "Property <code>disableMyMerakiCom</code> Deleted",
            "path": "/networks/{networkId}",
            "method": "put",
            "objectPath": "paths//networks/{networkId}/put/parameters/updateNetwork/schema",
            "property": "disableMyMerakiCom",
            "type": "infos",
            "name": "What's Updated",
            "group": "networks",
            "apiDetails": {
                "description": "Update a network",
                "operationId": "updateNetwork",
                "parameters": [{
                        "name": "networkId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "updateNetwork",
                        "in": "body",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "description": "The name of the network"
                                },
                                "timeZone": {
                                    "type": "string",
                                    "description": "The timezone of the network. For a list of allowed timezones, please see the 'TZ' column in the table in <a target='_blank' href='https://en.wikipedia.org/wiki/List_of_tz_database_time_zones'>this article.</a>"
                                },
                                "tags": {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    },
                                    "description": "A list of tags to be applied to the network"
                                },
                                "enrollmentString": {
                                    "type": "string",
                                    "description": "A unique identifier which can be used for device enrollment or easy access through the Meraki SM Registration page or the Self Service Portal. Please note that changing this field may cause existing bookmarks to break."
                                }
                            },
                            "example": {
                                "name": "Long Island Office",
                                "timeZone": "America/Los_Angeles",
                                "tags": [
                                    "tag1",
                                    "tag2"
                                ]
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "object"
                        },
                        "examples": {
                            "application/json": {
                                "id": "L_123456",
                                "organizationId": "2930418",
                                "name": "Long Island Office",
                                "timeZone": "America/Los_Angeles",
                                "tags": [
                                    "tag1",
                                    "tag2"
                                ],
                                "productTypes": [
                                    "appliance",
                                    "switch",
                                    "wireless"
                                ],
                                "enrollmentString": "long-island-office"
                            }
                        }
                    }
                },
                "summary": "Update a network",
                "tags": [
                    "networks",
                    "configure"
                ]
            },
            "docUrl": "https://developer.cisco.com/meraki/api/#/rest/api-endpoints/networks/update-network"
        },
        {
            "ruleId": "delete-object-property",
            "message": "`paths//networks/{networkId}/put/parameters/updateNetwork/schema` - Property `disableRemoteStatusPage` Deleted",
            "messageHtml": "Property <code>disableRemoteStatusPage</code> Deleted",
            "path": "/networks/{networkId}",
            "method": "put",
            "objectPath": "paths//networks/{networkId}/put/parameters/updateNetwork/schema",
            "property": "disableRemoteStatusPage",
            "type": "infos",
            "name": "What's Updated",
            "group": "networks",
            "apiDetails": {
                "description": "Update a network",
                "operationId": "updateNetwork",
                "parameters": [{
                        "name": "networkId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "updateNetwork",
                        "in": "body",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "description": "The name of the network"
                                },
                                "timeZone": {
                                    "type": "string",
                                    "description": "The timezone of the network. For a list of allowed timezones, please see the 'TZ' column in the table in <a target='_blank' href='https://en.wikipedia.org/wiki/List_of_tz_database_time_zones'>this article.</a>"
                                },
                                "tags": {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    },
                                    "description": "A list of tags to be applied to the network"
                                },
                                "enrollmentString": {
                                    "type": "string",
                                    "description": "A unique identifier which can be used for device enrollment or easy access through the Meraki SM Registration page or the Self Service Portal. Please note that changing this field may cause existing bookmarks to break."
                                }
                            },
                            "example": {
                                "name": "Long Island Office",
                                "timeZone": "America/Los_Angeles",
                                "tags": [
                                    "tag1",
                                    "tag2"
                                ]
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "object"
                        },
                        "examples": {
                            "application/json": {
                                "id": "L_123456",
                                "organizationId": "2930418",
                                "name": "Long Island Office",
                                "timeZone": "America/Los_Angeles",
                                "tags": [
                                    "tag1",
                                    "tag2"
                                ],
                                "productTypes": [
                                    "appliance",
                                    "switch",
                                    "wireless"
                                ],
                                "enrollmentString": "long-island-office"
                            }
                        }
                    }
                },
                "summary": "Update a network",
                "tags": [
                    "networks",
                    "configure"
                ]
            },
            "docUrl": "https://developer.cisco.com/meraki/api/#/rest/api-endpoints/networks/update-network"
        },
        {
            "ruleId": "delete-object-property",
            "message": "`paths//networks/{networkId}/camera/qualityRetentionProfiles/post/parameters/createNetworkCameraQualityRetentionProfile/schema/properties/videoSettings` - Property `MV02` Deleted",
            "messageHtml": "Property <code>MV02</code> Deleted",
            "path": "/networks/{networkId}/camera/qualityRetentionProfiles",
            "method": "post",
            "objectPath": "paths//networks/{networkId}/camera/qualityRetentionProfiles/post/parameters/createNetworkCameraQualityRetentionProfile/schema/properties/videoSettings",
            "property": "MV02",
            "type": "infos",
            "name": "What's Updated",
            "group": "camera",
            "apiDetails": {
                "description": "Creates new quality retention profile for this network.",
                "operationId": "createNetworkCameraQualityRetentionProfile",
                "parameters": [{
                        "name": "networkId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "createNetworkCameraQualityRetentionProfile",
                        "in": "body",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "description": "The name of the new profile. Must be unique. This parameter is required.",
                                    "required": true
                                },
                                "motionBasedRetentionEnabled": {
                                    "type": "boolean",
                                    "description": "Deletes footage older than 3 days in which no motion was detected. Can be either true or false. Defaults to false."
                                },
                                "restrictedBandwidthModeEnabled": {
                                    "type": "boolean",
                                    "description": "Disable features that require additional bandwidth such as Motion Recap. Can be either true or false. Defaults to false."
                                },
                                "audioRecordingEnabled": {
                                    "type": "boolean",
                                    "description": "Whether or not to record audio. Can be either true or false. Defaults to false."
                                },
                                "cloudArchiveEnabled": {
                                    "type": "boolean",
                                    "description": "Create redundant video backup using Cloud Archive. Can be either true or false. Defaults to false."
                                },
                                "motionDetectorVersion": {
                                    "type": "integer",
                                    "description": "The version of the motion detector that will be used by the camera. Only applies to Gen 2 cameras. Defaults to v2."
                                },
                                "scheduleId": {
                                    "type": "string",
                                    "description": "Schedule for which this camera will record video, or 'null' to always record."
                                },
                                "maxRetentionDays": {
                                    "type": "integer",
                                    "description": "The maximum number of days for which the data will be stored, or 'null' to keep data until storage space runs out. If the former, it can be one of [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 14, 30, 60, 90] days"
                                },
                                "videoSettings": {
                                    "type": "object",
                                    "properties": {
                                        "MV21/MV71": {
                                            "type": "object",
                                            "properties": {
                                                "quality": {
                                                    "type": "string",
                                                    "enum": [
                                                        "Standard",
                                                        "Enhanced",
                                                        "High"
                                                    ],
                                                    "description": "Quality of the camera. Can be one of 'Standard', 'Enhanced' or 'High'.",
                                                    "required": true
                                                },
                                                "resolution": {
                                                    "type": "string",
                                                    "enum": [
                                                        "1280x720"
                                                    ],
                                                    "description": "Resolution of the camera. Can be one of '1280x720'.",
                                                    "required": true
                                                }
                                            },
                                            "description": "Quality and resolution for MV21/MV71 camera models."
                                        },
                                        "MV12/MV22/MV72": {
                                            "type": "object",
                                            "properties": {
                                                "quality": {
                                                    "type": "string",
                                                    "enum": [
                                                        "Standard",
                                                        "Enhanced",
                                                        "High"
                                                    ],
                                                    "description": "Quality of the camera. Can be one of 'Standard', 'Enhanced' or 'High'.",
                                                    "required": true
                                                },
                                                "resolution": {
                                                    "type": "string",
                                                    "enum": [
                                                        "1280x720",
                                                        "1920x1080"
                                                    ],
                                                    "description": "Resolution of the camera. Can be one of '1280x720' or '1920x1080'.",
                                                    "required": true
                                                }
                                            },
                                            "description": "Quality and resolution for MV12/MV22/MV72 camera models."
                                        },
                                        "MV32": {
                                            "type": "object",
                                            "properties": {
                                                "quality": {
                                                    "type": "string",
                                                    "enum": [
                                                        "Standard",
                                                        "Enhanced"
                                                    ],
                                                    "description": "Quality of the camera. Can be one of 'Standard' or 'Enhanced'.",
                                                    "required": true
                                                },
                                                "resolution": {
                                                    "type": "string",
                                                    "enum": [
                                                        "1080x1080",
                                                        "2058x2058"
                                                    ],
                                                    "description": "Resolution of the camera. Can be one of '1080x1080' or '2058x2058'.",
                                                    "required": true
                                                }
                                            },
                                            "description": "Quality and resolution for MV32 camera models."
                                        },
                                        "MV12WE": {
                                            "type": "object",
                                            "properties": {
                                                "quality": {
                                                    "type": "string",
                                                    "enum": [
                                                        "Standard",
                                                        "Enhanced",
                                                        "High"
                                                    ],
                                                    "description": "Quality of the camera. Can be one of 'Standard', 'Enhanced' or 'High'.",
                                                    "required": true
                                                },
                                                "resolution": {
                                                    "type": "string",
                                                    "enum": [
                                                        "1280x720",
                                                        "1920x1080"
                                                    ],
                                                    "description": "Resolution of the camera. Can be one of '1280x720' or '1920x1080'.",
                                                    "required": true
                                                }
                                            },
                                            "description": "Quality and resolution for MV12WE camera models."
                                        },
                                        "MV22X/MV72X": {
                                            "type": "object",
                                            "properties": {
                                                "quality": {
                                                    "type": "string",
                                                    "enum": [
                                                        "Standard",
                                                        "Enhanced",
                                                        "High"
                                                    ],
                                                    "description": "Quality of the camera. Can be one of 'Standard', 'Enhanced' or 'High'.",
                                                    "required": true
                                                },
                                                "resolution": {
                                                    "type": "string",
                                                    "enum": [
                                                        "1280x720",
                                                        "1920x1080",
                                                        "2688x1512"
                                                    ],
                                                    "description": "Resolution of the camera. Can be one of '1280x720', '1920x1080' or '2688x1512'.",
                                                    "required": true
                                                }
                                            },
                                            "description": "Quality and resolution for MV22X/MV72X camera models."
                                        }
                                    },
                                    "description": "Video quality and resolution settings for all the camera models."
                                }
                            },
                            "example": {}
                        },
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "object"
                        },
                        "examples": {
                            "application/json": {
                                "id": "1234",
                                "networkId": "N_24329156",
                                "name": "Sample quality retention profile",
                                "restrictedBandwidthModeEnabled": true,
                                "motionBasedRetentionEnabled": false,
                                "audioRecordingEnabled": false,
                                "cloudArchiveEnabled": false,
                                "maxRetentionDays": 7,
                                "scheduleId": null,
                                "motionDetectorVersion": 2,
                                "videoSettings": {
                                    "MV32": {
                                        "quality": "Enhanced",
                                        "resolution": "1080x1080"
                                    },
                                    "MV21/MV71": {
                                        "quality": "High",
                                        "resolution": "1280x720"
                                    },
                                    "MV12/MV22/MV72": {
                                        "quality": "High",
                                        "resolution": "1920x1080"
                                    },
                                    "MV12WE": {
                                        "quality": "High",
                                        "resolution": "1920x1080"
                                    }
                                }
                            }
                        }
                    }
                },
                "summary": "Creates new quality retention profile for this network.",
                "tags": [
                    "camera",
                    "configure",
                    "qualityRetentionProfiles"
                ]
            },
            "docUrl": "https://developer.cisco.com/meraki/api/#/rest/api-endpoints/camera/create-network-camera-quality-retention-profile"
        },
        {
            "ruleId": "delete-object-property",
            "message": "`paths//networks/{networkId}/camera/qualityRetentionProfiles/{qualityRetentionProfileId}/put/parameters/updateNetworkCameraQualityRetentionProfile/schema/properties/videoSettings` - Property `MV02` Deleted",
            "messageHtml": "Property <code>MV02</code> Deleted",
            "path": "/networks/{networkId}/camera/qualityRetentionProfiles/{qualityRetentionProfileId}",
            "method": "put",
            "objectPath": "paths//networks/{networkId}/camera/qualityRetentionProfiles/{qualityRetentionProfileId}/put/parameters/updateNetworkCameraQualityRetentionProfile/schema/properties/videoSettings",
            "property": "MV02",
            "type": "infos",
            "name": "What's Updated",
            "group": "camera",
            "apiDetails": {
                "description": "Update an existing quality retention profile for this network.",
                "operationId": "updateNetworkCameraQualityRetentionProfile",
                "parameters": [{
                        "name": "networkId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "qualityRetentionProfileId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "updateNetworkCameraQualityRetentionProfile",
                        "in": "body",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "description": "The name of the new profile. Must be unique."
                                },
                                "motionBasedRetentionEnabled": {
                                    "type": "boolean",
                                    "description": "Deletes footage older than 3 days in which no motion was detected. Can be either true or false. Defaults to false."
                                },
                                "restrictedBandwidthModeEnabled": {
                                    "type": "boolean",
                                    "description": "Disable features that require additional bandwidth such as Motion Recap. Can be either true or false. Defaults to false."
                                },
                                "audioRecordingEnabled": {
                                    "type": "boolean",
                                    "description": "Whether or not to record audio. Can be either true or false. Defaults to false."
                                },
                                "cloudArchiveEnabled": {
                                    "type": "boolean",
                                    "description": "Create redundant video backup using Cloud Archive. Can be either true or false. Defaults to false."
                                },
                                "motionDetectorVersion": {
                                    "type": "integer",
                                    "description": "The version of the motion detector that will be used by the camera. Only applies to Gen 2 cameras. Defaults to v2."
                                },
                                "scheduleId": {
                                    "type": "string",
                                    "description": "Schedule for which this camera will record video, or 'null' to always record."
                                },
                                "maxRetentionDays": {
                                    "type": "integer",
                                    "description": "The maximum number of days for which the data will be stored, or 'null' to keep data until storage space runs out. If the former, it can be one of [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 14, 30, 60, 90] days"
                                },
                                "videoSettings": {
                                    "type": "object",
                                    "properties": {
                                        "MV21/MV71": {
                                            "type": "object",
                                            "properties": {
                                                "quality": {
                                                    "type": "string",
                                                    "enum": [
                                                        "Standard",
                                                        "Enhanced",
                                                        "High"
                                                    ],
                                                    "description": "Quality of the camera. Can be one of 'Standard', 'Enhanced' or 'High'.",
                                                    "required": true
                                                },
                                                "resolution": {
                                                    "type": "string",
                                                    "enum": [
                                                        "1280x720"
                                                    ],
                                                    "description": "Resolution of the camera. Can be one of '1280x720'.",
                                                    "required": true
                                                }
                                            },
                                            "description": "Quality and resolution for MV21/MV71 camera models."
                                        },
                                        "MV12/MV22/MV72": {
                                            "type": "object",
                                            "properties": {
                                                "quality": {
                                                    "type": "string",
                                                    "enum": [
                                                        "Standard",
                                                        "Enhanced",
                                                        "High"
                                                    ],
                                                    "description": "Quality of the camera. Can be one of 'Standard', 'Enhanced' or 'High'.",
                                                    "required": true
                                                },
                                                "resolution": {
                                                    "type": "string",
                                                    "enum": [
                                                        "1280x720",
                                                        "1920x1080"
                                                    ],
                                                    "description": "Resolution of the camera. Can be one of '1280x720' or '1920x1080'.",
                                                    "required": true
                                                }
                                            },
                                            "description": "Quality and resolution for MV12/MV22/MV72 camera models."
                                        },
                                        "MV32": {
                                            "type": "object",
                                            "properties": {
                                                "quality": {
                                                    "type": "string",
                                                    "enum": [
                                                        "Standard",
                                                        "Enhanced"
                                                    ],
                                                    "description": "Quality of the camera. Can be one of 'Standard' or 'Enhanced'.",
                                                    "required": true
                                                },
                                                "resolution": {
                                                    "type": "string",
                                                    "enum": [
                                                        "1080x1080",
                                                        "2058x2058"
                                                    ],
                                                    "description": "Resolution of the camera. Can be one of '1080x1080' or '2058x2058'.",
                                                    "required": true
                                                }
                                            },
                                            "description": "Quality and resolution for MV32 camera models."
                                        },
                                        "MV12WE": {
                                            "type": "object",
                                            "properties": {
                                                "quality": {
                                                    "type": "string",
                                                    "enum": [
                                                        "Standard",
                                                        "Enhanced",
                                                        "High"
                                                    ],
                                                    "description": "Quality of the camera. Can be one of 'Standard', 'Enhanced' or 'High'.",
                                                    "required": true
                                                },
                                                "resolution": {
                                                    "type": "string",
                                                    "enum": [
                                                        "1280x720",
                                                        "1920x1080"
                                                    ],
                                                    "description": "Resolution of the camera. Can be one of '1280x720' or '1920x1080'.",
                                                    "required": true
                                                }
                                            },
                                            "description": "Quality and resolution for MV12WE camera models."
                                        },
                                        "MV22X/MV72X": {
                                            "type": "object",
                                            "properties": {
                                                "quality": {
                                                    "type": "string",
                                                    "enum": [
                                                        "Standard",
                                                        "Enhanced",
                                                        "High"
                                                    ],
                                                    "description": "Quality of the camera. Can be one of 'Standard', 'Enhanced' or 'High'.",
                                                    "required": true
                                                },
                                                "resolution": {
                                                    "type": "string",
                                                    "enum": [
                                                        "1280x720",
                                                        "1920x1080",
                                                        "2688x1512"
                                                    ],
                                                    "description": "Resolution of the camera. Can be one of '1280x720', '1920x1080' or '2688x1512'.",
                                                    "required": true
                                                }
                                            },
                                            "description": "Quality and resolution for MV22X/MV72X camera models."
                                        }
                                    },
                                    "description": "Video quality and resolution settings for all the camera models."
                                }
                            },
                            "example": {}
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "object"
                        },
                        "examples": {
                            "application/json": {
                                "id": "1234",
                                "networkId": "N_24329156",
                                "name": "Sample quality retention profile",
                                "restrictedBandwidthModeEnabled": true,
                                "motionBasedRetentionEnabled": false,
                                "audioRecordingEnabled": false,
                                "cloudArchiveEnabled": false,
                                "maxRetentionDays": 7,
                                "scheduleId": null,
                                "motionDetectorVersion": 2,
                                "videoSettings": {
                                    "MV32": {
                                        "quality": "Enhanced",
                                        "resolution": "1080x1080"
                                    },
                                    "MV21/MV71": {
                                        "quality": "High",
                                        "resolution": "1280x720"
                                    },
                                    "MV12/MV22/MV72": {
                                        "quality": "High",
                                        "resolution": "1920x1080"
                                    },
                                    "MV12WE": {
                                        "quality": "High",
                                        "resolution": "1920x1080"
                                    }
                                }
                            }
                        }
                    }
                },
                "summary": "Update an existing quality retention profile for this network.",
                "tags": [
                    "camera",
                    "configure",
                    "qualityRetentionProfiles"
                ]
            },
            "docUrl": "https://developer.cisco.com/meraki/api/#/rest/api-endpoints/camera/update-network-camera-quality-retention-profile"
        },
        {
            "ruleId": "delete-object-property",
            "message": "`paths//networks/{networkId}/clients/provision/post/parameters/provisionNetworkClients/schema` - Property `mac` Deleted",
            "messageHtml": "Property <code>mac</code> Deleted",
            "path": "/networks/{networkId}/clients/provision",
            "method": "post",
            "objectPath": "paths//networks/{networkId}/clients/provision/post/parameters/provisionNetworkClients/schema",
            "property": "mac",
            "type": "infos",
            "name": "What's Updated",
            "group": "networks",
            "apiDetails": {
                "description": "Provisions a client with a name and policy. Clients can be provisioned before they associate to the network.",
                "operationId": "provisionNetworkClients",
                "parameters": [{
                        "name": "networkId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "provisionNetworkClients",
                        "in": "body",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "clients": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "mac": {
                                                "type": "string",
                                                "description": "The MAC address of the client. Required.",
                                                "required": true
                                            },
                                            "name": {
                                                "type": "string",
                                                "description": "The display name for the client. Optional. Limited to 255 bytes."
                                            }
                                        }
                                    },
                                    "description": "The array of clients to provision",
                                    "required": true
                                },
                                "devicePolicy": {
                                    "type": "string",
                                    "enum": [
                                        "Group policy",
                                        "Allowed",
                                        "Blocked",
                                        "Per connection",
                                        "Normal"
                                    ],
                                    "description": "The policy to apply to the specified client. Can be 'Group policy', 'Allowed', 'Blocked', 'Per connection' or 'Normal'. Required.",
                                    "required": true
                                },
                                "groupPolicyId": {
                                    "type": "string",
                                    "description": "The ID of the desired group policy to apply to the client. Required if 'devicePolicy' is set to \"Group policy\". Otherwise this is ignored."
                                },
                                "policiesBySecurityAppliance": {
                                    "type": "object",
                                    "properties": {
                                        "devicePolicy": {
                                            "type": "string",
                                            "enum": [
                                                "Allowed",
                                                "Blocked",
                                                "Normal"
                                            ],
                                            "description": "The policy to apply to the specified client. Can be 'Allowed', 'Blocked' or 'Normal'. Required."
                                        }
                                    },
                                    "description": "An object, describing what the policy-connection association is for the security appliance. (Only relevant if the security appliance is actually within the network)"
                                },
                                "policiesBySsid": {
                                    "type": "object",
                                    "properties": {
                                        "0": {
                                            "type": "object",
                                            "properties": {
                                                "devicePolicy": {
                                                    "type": "string",
                                                    "enum": [
                                                        "Allowed",
                                                        "Blocked",
                                                        "Normal",
                                                        "Group policy"
                                                    ],
                                                    "description": "The policy to apply to the specified client. Can be 'Allowed', 'Blocked', 'Normal' or 'Group policy'. Required.",
                                                    "required": true
                                                },
                                                "groupPolicyId": {
                                                    "type": "string",
                                                    "description": "The ID of the desired group policy to apply to the client. Required if 'devicePolicy' is set to \"Group policy\". Otherwise this is ignored."
                                                }
                                            },
                                            "description": "The number for the SSID"
                                        },
                                        "1": {
                                            "type": "object",
                                            "properties": {
                                                "devicePolicy": {
                                                    "type": "string",
                                                    "enum": [
                                                        "Allowed",
                                                        "Blocked",
                                                        "Normal",
                                                        "Group policy"
                                                    ],
                                                    "description": "The policy to apply to the specified client. Can be 'Allowed', 'Blocked', 'Normal' or 'Group policy'. Required.",
                                                    "required": true
                                                },
                                                "groupPolicyId": {
                                                    "type": "string",
                                                    "description": "The ID of the desired group policy to apply to the client. Required if 'devicePolicy' is set to \"Group policy\". Otherwise this is ignored."
                                                }
                                            },
                                            "description": "The number for the SSID"
                                        },
                                        "2": {
                                            "type": "object",
                                            "properties": {
                                                "devicePolicy": {
                                                    "type": "string",
                                                    "enum": [
                                                        "Allowed",
                                                        "Blocked",
                                                        "Normal",
                                                        "Group policy"
                                                    ],
                                                    "description": "The policy to apply to the specified client. Can be 'Allowed', 'Blocked', 'Normal' or 'Group policy'. Required.",
                                                    "required": true
                                                },
                                                "groupPolicyId": {
                                                    "type": "string",
                                                    "description": "The ID of the desired group policy to apply to the client. Required if 'devicePolicy' is set to \"Group policy\". Otherwise this is ignored."
                                                }
                                            },
                                            "description": "The number for the SSID"
                                        },
                                        "3": {
                                            "type": "object",
                                            "properties": {
                                                "devicePolicy": {
                                                    "type": "string",
                                                    "enum": [
                                                        "Allowed",
                                                        "Blocked",
                                                        "Normal",
                                                        "Group policy"
                                                    ],
                                                    "description": "The policy to apply to the specified client. Can be 'Allowed', 'Blocked', 'Normal' or 'Group policy'. Required.",
                                                    "required": true
                                                },
                                                "groupPolicyId": {
                                                    "type": "string",
                                                    "description": "The ID of the desired group policy to apply to the client. Required if 'devicePolicy' is set to \"Group policy\". Otherwise this is ignored."
                                                }
                                            },
                                            "description": "The number for the SSID"
                                        },
                                        "4": {
                                            "type": "object",
                                            "properties": {
                                                "devicePolicy": {
                                                    "type": "string",
                                                    "enum": [
                                                        "Allowed",
                                                        "Blocked",
                                                        "Normal",
                                                        "Group policy"
                                                    ],
                                                    "description": "The policy to apply to the specified client. Can be 'Allowed', 'Blocked', 'Normal' or 'Group policy'. Required.",
                                                    "required": true
                                                },
                                                "groupPolicyId": {
                                                    "type": "string",
                                                    "description": "The ID of the desired group policy to apply to the client. Required if 'devicePolicy' is set to \"Group policy\". Otherwise this is ignored."
                                                }
                                            },
                                            "description": "The number for the SSID"
                                        },
                                        "5": {
                                            "type": "object",
                                            "properties": {
                                                "devicePolicy": {
                                                    "type": "string",
                                                    "enum": [
                                                        "Allowed",
                                                        "Blocked",
                                                        "Normal",
                                                        "Group policy"
                                                    ],
                                                    "description": "The policy to apply to the specified client. Can be 'Allowed', 'Blocked', 'Normal' or 'Group policy'. Required.",
                                                    "required": true
                                                },
                                                "groupPolicyId": {
                                                    "type": "string",
                                                    "description": "The ID of the desired group policy to apply to the client. Required if 'devicePolicy' is set to \"Group policy\". Otherwise this is ignored."
                                                }
                                            },
                                            "description": "The number for the SSID"
                                        },
                                        "6": {
                                            "type": "object",
                                            "properties": {
                                                "devicePolicy": {
                                                    "type": "string",
                                                    "enum": [
                                                        "Allowed",
                                                        "Blocked",
                                                        "Normal",
                                                        "Group policy"
                                                    ],
                                                    "description": "The policy to apply to the specified client. Can be 'Allowed', 'Blocked', 'Normal' or 'Group policy'. Required.",
                                                    "required": true
                                                },
                                                "groupPolicyId": {
                                                    "type": "string",
                                                    "description": "The ID of the desired group policy to apply to the client. Required if 'devicePolicy' is set to \"Group policy\". Otherwise this is ignored."
                                                }
                                            },
                                            "description": "The number for the SSID"
                                        },
                                        "7": {
                                            "type": "object",
                                            "properties": {
                                                "devicePolicy": {
                                                    "type": "string",
                                                    "enum": [
                                                        "Allowed",
                                                        "Blocked",
                                                        "Normal",
                                                        "Group policy"
                                                    ],
                                                    "description": "The policy to apply to the specified client. Can be 'Allowed', 'Blocked', 'Normal' or 'Group policy'. Required.",
                                                    "required": true
                                                },
                                                "groupPolicyId": {
                                                    "type": "string",
                                                    "description": "The ID of the desired group policy to apply to the client. Required if 'devicePolicy' is set to \"Group policy\". Otherwise this is ignored."
                                                }
                                            },
                                            "description": "The number for the SSID"
                                        },
                                        "8": {
                                            "type": "object",
                                            "properties": {
                                                "devicePolicy": {
                                                    "type": "string",
                                                    "enum": [
                                                        "Allowed",
                                                        "Blocked",
                                                        "Normal",
                                                        "Group policy"
                                                    ],
                                                    "description": "The policy to apply to the specified client. Can be 'Allowed', 'Blocked', 'Normal' or 'Group policy'. Required.",
                                                    "required": true
                                                },
                                                "groupPolicyId": {
                                                    "type": "string",
                                                    "description": "The ID of the desired group policy to apply to the client. Required if 'devicePolicy' is set to \"Group policy\". Otherwise this is ignored."
                                                }
                                            },
                                            "description": "The number for the SSID"
                                        },
                                        "9": {
                                            "type": "object",
                                            "properties": {
                                                "devicePolicy": {
                                                    "type": "string",
                                                    "enum": [
                                                        "Allowed",
                                                        "Blocked",
                                                        "Normal",
                                                        "Group policy"
                                                    ],
                                                    "description": "The policy to apply to the specified client. Can be 'Allowed', 'Blocked', 'Normal' or 'Group policy'. Required.",
                                                    "required": true
                                                },
                                                "groupPolicyId": {
                                                    "type": "string",
                                                    "description": "The ID of the desired group policy to apply to the client. Required if 'devicePolicy' is set to \"Group policy\". Otherwise this is ignored."
                                                }
                                            },
                                            "description": "The number for the SSID"
                                        },
                                        "10": {
                                            "type": "object",
                                            "properties": {
                                                "devicePolicy": {
                                                    "type": "string",
                                                    "enum": [
                                                        "Allowed",
                                                        "Blocked",
                                                        "Normal",
                                                        "Group policy"
                                                    ],
                                                    "description": "The policy to apply to the specified client. Can be 'Allowed', 'Blocked', 'Normal' or 'Group policy'. Required.",
                                                    "required": true
                                                },
                                                "groupPolicyId": {
                                                    "type": "string",
                                                    "description": "The ID of the desired group policy to apply to the client. Required if 'devicePolicy' is set to \"Group policy\". Otherwise this is ignored."
                                                }
                                            },
                                            "description": "The number for the SSID"
                                        },
                                        "11": {
                                            "type": "object",
                                            "properties": {
                                                "devicePolicy": {
                                                    "type": "string",
                                                    "enum": [
                                                        "Allowed",
                                                        "Blocked",
                                                        "Normal",
                                                        "Group policy"
                                                    ],
                                                    "description": "The policy to apply to the specified client. Can be 'Allowed', 'Blocked', 'Normal' or 'Group policy'. Required.",
                                                    "required": true
                                                },
                                                "groupPolicyId": {
                                                    "type": "string",
                                                    "description": "The ID of the desired group policy to apply to the client. Required if 'devicePolicy' is set to \"Group policy\". Otherwise this is ignored."
                                                }
                                            },
                                            "description": "The number for the SSID"
                                        },
                                        "12": {
                                            "type": "object",
                                            "properties": {
                                                "devicePolicy": {
                                                    "type": "string",
                                                    "enum": [
                                                        "Allowed",
                                                        "Blocked",
                                                        "Normal",
                                                        "Group policy"
                                                    ],
                                                    "description": "The policy to apply to the specified client. Can be 'Allowed', 'Blocked', 'Normal' or 'Group policy'. Required.",
                                                    "required": true
                                                },
                                                "groupPolicyId": {
                                                    "type": "string",
                                                    "description": "The ID of the desired group policy to apply to the client. Required if 'devicePolicy' is set to \"Group policy\". Otherwise this is ignored."
                                                }
                                            },
                                            "description": "The number for the SSID"
                                        },
                                        "13": {
                                            "type": "object",
                                            "properties": {
                                                "devicePolicy": {
                                                    "type": "string",
                                                    "enum": [
                                                        "Allowed",
                                                        "Blocked",
                                                        "Normal",
                                                        "Group policy"
                                                    ],
                                                    "description": "The policy to apply to the specified client. Can be 'Allowed', 'Blocked', 'Normal' or 'Group policy'. Required.",
                                                    "required": true
                                                },
                                                "groupPolicyId": {
                                                    "type": "string",
                                                    "description": "The ID of the desired group policy to apply to the client. Required if 'devicePolicy' is set to \"Group policy\". Otherwise this is ignored."
                                                }
                                            },
                                            "description": "The number for the SSID"
                                        },
                                        "14": {
                                            "type": "object",
                                            "properties": {
                                                "devicePolicy": {
                                                    "type": "string",
                                                    "enum": [
                                                        "Allowed",
                                                        "Blocked",
                                                        "Normal",
                                                        "Group policy"
                                                    ],
                                                    "description": "The policy to apply to the specified client. Can be 'Allowed', 'Blocked', 'Normal' or 'Group policy'. Required.",
                                                    "required": true
                                                },
                                                "groupPolicyId": {
                                                    "type": "string",
                                                    "description": "The ID of the desired group policy to apply to the client. Required if 'devicePolicy' is set to \"Group policy\". Otherwise this is ignored."
                                                }
                                            },
                                            "description": "The number for the SSID"
                                        }
                                    },
                                    "description": "An object, describing the policy-connection associations for each active SSID within the network. Keys should be the number of enabled SSIDs, mapping to an object describing the client's policy"
                                }
                            },
                            "example": {
                                "clients": [{
                                    "mac": "00:11:22:33:44:55",
                                    "clientId": "k74272e",
                                    "name": "Miles's phone"
                                }],
                                "devicePolicy": "Group policy",
                                "groupPolicyId": "101"
                            }
                        },
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "object"
                        },
                        "examples": {
                            "application/json": {
                                "clients": [{
                                    "mac": "00:11:22:33:44:55",
                                    "clientId": "k74272e",
                                    "name": "Miles's phone"
                                }],
                                "devicePolicy": "Group policy",
                                "groupPolicyId": "101"
                            }
                        }
                    }
                },
                "summary": "Provisions a client with a name and policy. Clients can be provisioned before they associate to the network.",
                "tags": [
                    "networks",
                    "configure",
                    "clients"
                ]
            },
            "docUrl": "https://developer.cisco.com/meraki/api/#/rest/api-endpoints/networks/provision-network-clients"
        },
        {
            "ruleId": "delete-object-property",
            "message": "`paths//networks/{networkId}/clients/provision/post/parameters/provisionNetworkClients/schema` - Property `name` Deleted",
            "messageHtml": "Property <code>name</code> Deleted",
            "path": "/networks/{networkId}/clients/provision",
            "method": "post",
            "objectPath": "paths//networks/{networkId}/clients/provision/post/parameters/provisionNetworkClients/schema",
            "property": "name",
            "type": "infos",
            "name": "What's Updated",
            "group": "networks",
            "apiDetails": {
                "description": "Provisions a client with a name and policy. Clients can be provisioned before they associate to the network.",
                "operationId": "provisionNetworkClients",
                "parameters": [{
                        "name": "networkId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "provisionNetworkClients",
                        "in": "body",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "clients": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "mac": {
                                                "type": "string",
                                                "description": "The MAC address of the client. Required.",
                                                "required": true
                                            },
                                            "name": {
                                                "type": "string",
                                                "description": "The display name for the client. Optional. Limited to 255 bytes."
                                            }
                                        }
                                    },
                                    "description": "The array of clients to provision",
                                    "required": true
                                },
                                "devicePolicy": {
                                    "type": "string",
                                    "enum": [
                                        "Group policy",
                                        "Allowed",
                                        "Blocked",
                                        "Per connection",
                                        "Normal"
                                    ],
                                    "description": "The policy to apply to the specified client. Can be 'Group policy', 'Allowed', 'Blocked', 'Per connection' or 'Normal'. Required.",
                                    "required": true
                                },
                                "groupPolicyId": {
                                    "type": "string",
                                    "description": "The ID of the desired group policy to apply to the client. Required if 'devicePolicy' is set to \"Group policy\". Otherwise this is ignored."
                                },
                                "policiesBySecurityAppliance": {
                                    "type": "object",
                                    "properties": {
                                        "devicePolicy": {
                                            "type": "string",
                                            "enum": [
                                                "Allowed",
                                                "Blocked",
                                                "Normal"
                                            ],
                                            "description": "The policy to apply to the specified client. Can be 'Allowed', 'Blocked' or 'Normal'. Required."
                                        }
                                    },
                                    "description": "An object, describing what the policy-connection association is for the security appliance. (Only relevant if the security appliance is actually within the network)"
                                },
                                "policiesBySsid": {
                                    "type": "object",
                                    "properties": {
                                        "0": {
                                            "type": "object",
                                            "properties": {
                                                "devicePolicy": {
                                                    "type": "string",
                                                    "enum": [
                                                        "Allowed",
                                                        "Blocked",
                                                        "Normal",
                                                        "Group policy"
                                                    ],
                                                    "description": "The policy to apply to the specified client. Can be 'Allowed', 'Blocked', 'Normal' or 'Group policy'. Required.",
                                                    "required": true
                                                },
                                                "groupPolicyId": {
                                                    "type": "string",
                                                    "description": "The ID of the desired group policy to apply to the client. Required if 'devicePolicy' is set to \"Group policy\". Otherwise this is ignored."
                                                }
                                            },
                                            "description": "The number for the SSID"
                                        },
                                        "1": {
                                            "type": "object",
                                            "properties": {
                                                "devicePolicy": {
                                                    "type": "string",
                                                    "enum": [
                                                        "Allowed",
                                                        "Blocked",
                                                        "Normal",
                                                        "Group policy"
                                                    ],
                                                    "description": "The policy to apply to the specified client. Can be 'Allowed', 'Blocked', 'Normal' or 'Group policy'. Required.",
                                                    "required": true
                                                },
                                                "groupPolicyId": {
                                                    "type": "string",
                                                    "description": "The ID of the desired group policy to apply to the client. Required if 'devicePolicy' is set to \"Group policy\". Otherwise this is ignored."
                                                }
                                            },
                                            "description": "The number for the SSID"
                                        },
                                        "2": {
                                            "type": "object",
                                            "properties": {
                                                "devicePolicy": {
                                                    "type": "string",
                                                    "enum": [
                                                        "Allowed",
                                                        "Blocked",
                                                        "Normal",
                                                        "Group policy"
                                                    ],
                                                    "description": "The policy to apply to the specified client. Can be 'Allowed', 'Blocked', 'Normal' or 'Group policy'. Required.",
                                                    "required": true
                                                },
                                                "groupPolicyId": {
                                                    "type": "string",
                                                    "description": "The ID of the desired group policy to apply to the client. Required if 'devicePolicy' is set to \"Group policy\". Otherwise this is ignored."
                                                }
                                            },
                                            "description": "The number for the SSID"
                                        },
                                        "3": {
                                            "type": "object",
                                            "properties": {
                                                "devicePolicy": {
                                                    "type": "string",
                                                    "enum": [
                                                        "Allowed",
                                                        "Blocked",
                                                        "Normal",
                                                        "Group policy"
                                                    ],
                                                    "description": "The policy to apply to the specified client. Can be 'Allowed', 'Blocked', 'Normal' or 'Group policy'. Required.",
                                                    "required": true
                                                },
                                                "groupPolicyId": {
                                                    "type": "string",
                                                    "description": "The ID of the desired group policy to apply to the client. Required if 'devicePolicy' is set to \"Group policy\". Otherwise this is ignored."
                                                }
                                            },
                                            "description": "The number for the SSID"
                                        },
                                        "4": {
                                            "type": "object",
                                            "properties": {
                                                "devicePolicy": {
                                                    "type": "string",
                                                    "enum": [
                                                        "Allowed",
                                                        "Blocked",
                                                        "Normal",
                                                        "Group policy"
                                                    ],
                                                    "description": "The policy to apply to the specified client. Can be 'Allowed', 'Blocked', 'Normal' or 'Group policy'. Required.",
                                                    "required": true
                                                },
                                                "groupPolicyId": {
                                                    "type": "string",
                                                    "description": "The ID of the desired group policy to apply to the client. Required if 'devicePolicy' is set to \"Group policy\". Otherwise this is ignored."
                                                }
                                            },
                                            "description": "The number for the SSID"
                                        },
                                        "5": {
                                            "type": "object",
                                            "properties": {
                                                "devicePolicy": {
                                                    "type": "string",
                                                    "enum": [
                                                        "Allowed",
                                                        "Blocked",
                                                        "Normal",
                                                        "Group policy"
                                                    ],
                                                    "description": "The policy to apply to the specified client. Can be 'Allowed', 'Blocked', 'Normal' or 'Group policy'. Required.",
                                                    "required": true
                                                },
                                                "groupPolicyId": {
                                                    "type": "string",
                                                    "description": "The ID of the desired group policy to apply to the client. Required if 'devicePolicy' is set to \"Group policy\". Otherwise this is ignored."
                                                }
                                            },
                                            "description": "The number for the SSID"
                                        },
                                        "6": {
                                            "type": "object",
                                            "properties": {
                                                "devicePolicy": {
                                                    "type": "string",
                                                    "enum": [
                                                        "Allowed",
                                                        "Blocked",
                                                        "Normal",
                                                        "Group policy"
                                                    ],
                                                    "description": "The policy to apply to the specified client. Can be 'Allowed', 'Blocked', 'Normal' or 'Group policy'. Required.",
                                                    "required": true
                                                },
                                                "groupPolicyId": {
                                                    "type": "string",
                                                    "description": "The ID of the desired group policy to apply to the client. Required if 'devicePolicy' is set to \"Group policy\". Otherwise this is ignored."
                                                }
                                            },
                                            "description": "The number for the SSID"
                                        },
                                        "7": {
                                            "type": "object",
                                            "properties": {
                                                "devicePolicy": {
                                                    "type": "string",
                                                    "enum": [
                                                        "Allowed",
                                                        "Blocked",
                                                        "Normal",
                                                        "Group policy"
                                                    ],
                                                    "description": "The policy to apply to the specified client. Can be 'Allowed', 'Blocked', 'Normal' or 'Group policy'. Required.",
                                                    "required": true
                                                },
                                                "groupPolicyId": {
                                                    "type": "string",
                                                    "description": "The ID of the desired group policy to apply to the client. Required if 'devicePolicy' is set to \"Group policy\". Otherwise this is ignored."
                                                }
                                            },
                                            "description": "The number for the SSID"
                                        },
                                        "8": {
                                            "type": "object",
                                            "properties": {
                                                "devicePolicy": {
                                                    "type": "string",
                                                    "enum": [
                                                        "Allowed",
                                                        "Blocked",
                                                        "Normal",
                                                        "Group policy"
                                                    ],
                                                    "description": "The policy to apply to the specified client. Can be 'Allowed', 'Blocked', 'Normal' or 'Group policy'. Required.",
                                                    "required": true
                                                },
                                                "groupPolicyId": {
                                                    "type": "string",
                                                    "description": "The ID of the desired group policy to apply to the client. Required if 'devicePolicy' is set to \"Group policy\". Otherwise this is ignored."
                                                }
                                            },
                                            "description": "The number for the SSID"
                                        },
                                        "9": {
                                            "type": "object",
                                            "properties": {
                                                "devicePolicy": {
                                                    "type": "string",
                                                    "enum": [
                                                        "Allowed",
                                                        "Blocked",
                                                        "Normal",
                                                        "Group policy"
                                                    ],
                                                    "description": "The policy to apply to the specified client. Can be 'Allowed', 'Blocked', 'Normal' or 'Group policy'. Required.",
                                                    "required": true
                                                },
                                                "groupPolicyId": {
                                                    "type": "string",
                                                    "description": "The ID of the desired group policy to apply to the client. Required if 'devicePolicy' is set to \"Group policy\". Otherwise this is ignored."
                                                }
                                            },
                                            "description": "The number for the SSID"
                                        },
                                        "10": {
                                            "type": "object",
                                            "properties": {
                                                "devicePolicy": {
                                                    "type": "string",
                                                    "enum": [
                                                        "Allowed",
                                                        "Blocked",
                                                        "Normal",
                                                        "Group policy"
                                                    ],
                                                    "description": "The policy to apply to the specified client. Can be 'Allowed', 'Blocked', 'Normal' or 'Group policy'. Required.",
                                                    "required": true
                                                },
                                                "groupPolicyId": {
                                                    "type": "string",
                                                    "description": "The ID of the desired group policy to apply to the client. Required if 'devicePolicy' is set to \"Group policy\". Otherwise this is ignored."
                                                }
                                            },
                                            "description": "The number for the SSID"
                                        },
                                        "11": {
                                            "type": "object",
                                            "properties": {
                                                "devicePolicy": {
                                                    "type": "string",
                                                    "enum": [
                                                        "Allowed",
                                                        "Blocked",
                                                        "Normal",
                                                        "Group policy"
                                                    ],
                                                    "description": "The policy to apply to the specified client. Can be 'Allowed', 'Blocked', 'Normal' or 'Group policy'. Required.",
                                                    "required": true
                                                },
                                                "groupPolicyId": {
                                                    "type": "string",
                                                    "description": "The ID of the desired group policy to apply to the client. Required if 'devicePolicy' is set to \"Group policy\". Otherwise this is ignored."
                                                }
                                            },
                                            "description": "The number for the SSID"
                                        },
                                        "12": {
                                            "type": "object",
                                            "properties": {
                                                "devicePolicy": {
                                                    "type": "string",
                                                    "enum": [
                                                        "Allowed",
                                                        "Blocked",
                                                        "Normal",
                                                        "Group policy"
                                                    ],
                                                    "description": "The policy to apply to the specified client. Can be 'Allowed', 'Blocked', 'Normal' or 'Group policy'. Required.",
                                                    "required": true
                                                },
                                                "groupPolicyId": {
                                                    "type": "string",
                                                    "description": "The ID of the desired group policy to apply to the client. Required if 'devicePolicy' is set to \"Group policy\". Otherwise this is ignored."
                                                }
                                            },
                                            "description": "The number for the SSID"
                                        },
                                        "13": {
                                            "type": "object",
                                            "properties": {
                                                "devicePolicy": {
                                                    "type": "string",
                                                    "enum": [
                                                        "Allowed",
                                                        "Blocked",
                                                        "Normal",
                                                        "Group policy"
                                                    ],
                                                    "description": "The policy to apply to the specified client. Can be 'Allowed', 'Blocked', 'Normal' or 'Group policy'. Required.",
                                                    "required": true
                                                },
                                                "groupPolicyId": {
                                                    "type": "string",
                                                    "description": "The ID of the desired group policy to apply to the client. Required if 'devicePolicy' is set to \"Group policy\". Otherwise this is ignored."
                                                }
                                            },
                                            "description": "The number for the SSID"
                                        },
                                        "14": {
                                            "type": "object",
                                            "properties": {
                                                "devicePolicy": {
                                                    "type": "string",
                                                    "enum": [
                                                        "Allowed",
                                                        "Blocked",
                                                        "Normal",
                                                        "Group policy"
                                                    ],
                                                    "description": "The policy to apply to the specified client. Can be 'Allowed', 'Blocked', 'Normal' or 'Group policy'. Required.",
                                                    "required": true
                                                },
                                                "groupPolicyId": {
                                                    "type": "string",
                                                    "description": "The ID of the desired group policy to apply to the client. Required if 'devicePolicy' is set to \"Group policy\". Otherwise this is ignored."
                                                }
                                            },
                                            "description": "The number for the SSID"
                                        }
                                    },
                                    "description": "An object, describing the policy-connection associations for each active SSID within the network. Keys should be the number of enabled SSIDs, mapping to an object describing the client's policy"
                                }
                            },
                            "example": {
                                "clients": [{
                                    "mac": "00:11:22:33:44:55",
                                    "clientId": "k74272e",
                                    "name": "Miles's phone"
                                }],
                                "devicePolicy": "Group policy",
                                "groupPolicyId": "101"
                            }
                        },
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "object"
                        },
                        "examples": {
                            "application/json": {
                                "clients": [{
                                    "mac": "00:11:22:33:44:55",
                                    "clientId": "k74272e",
                                    "name": "Miles's phone"
                                }],
                                "devicePolicy": "Group policy",
                                "groupPolicyId": "101"
                            }
                        }
                    }
                },
                "summary": "Provisions a client with a name and policy. Clients can be provisioned before they associate to the network.",
                "tags": [
                    "networks",
                    "configure",
                    "clients"
                ]
            },
            "docUrl": "https://developer.cisco.com/meraki/api/#/rest/api-endpoints/networks/provision-network-clients"
        },
        {
            "ruleId": "add-response",
            "message": "`/networks/{networkId}/clients/{clientId}/policy` (get) - Response `200` added to (`Group policy`)",
            "messageHtml": "Response property <code>devicePolicy</code> value added",
            "path": "/networks/{networkId}/clients/{clientId}/policy",
            "method": "get",
            "responseId": "200",
            "type": "infos",
            "name": "What's Updated",
            "group": "networks",
            "apiDetails": {
                "description": "Return the policy assigned to a client on the network. Clients can be identified by a client key or either the MAC or IP depending on whether the network uses Track-by-IP.",
                "operationId": "getNetworkClientPolicy",
                "parameters": [{
                        "name": "networkId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "clientId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "object"
                        },
                        "examples": {
                            "application/json": {
                                "mac": "00:11:22:33:44:55",
                                "devicePolicy": "Group policy",
                                "groupPolicyId": "101"
                            }
                        }
                    }
                },
                "summary": "Return the policy assigned to a client on the network. Clients can be identified by a client key or either the MAC or IP depending on whether the network uses Track-by-IP.",
                "tags": [
                    "networks",
                    "configure",
                    "clients",
                    "policy"
                ]
            },
            "docUrl": "https://developer.cisco.com/meraki/api/#/rest/api-endpoints/networks/get-network-client-policy"
        },
        {
            "ruleId": "delete-object-property",
            "message": "`paths//networks/{networkId}/devices/claim/post/parameters/claimNetworkDevices/schema` - Property `serial` Deleted",
            "messageHtml": "Property <code>serial</code> Deleted",
            "path": "/networks/{networkId}/devices/claim",
            "method": "post",
            "objectPath": "paths//networks/{networkId}/devices/claim/post/parameters/claimNetworkDevices/schema",
            "property": "serial",
            "type": "infos",
            "name": "What's Updated",
            "group": "networks",
            "apiDetails": {
                "description": "Claim devices into a network",
                "operationId": "claimNetworkDevices",
                "parameters": [{
                        "name": "networkId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "claimNetworkDevices",
                        "in": "body",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "serials": {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    },
                                    "description": "A list of serials of devices to claim",
                                    "required": true
                                }
                            },
                            "example": {
                                "serials": [
                                    "Q234-ABCD-0001",
                                    "Q234-ABCD-0002",
                                    "Q234-ABCD-0003"
                                ]
                            }
                        },
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                },
                "summary": "Claim devices into a network",
                "tags": [
                    "networks",
                    "configure",
                    "devices"
                ]
            },
            "docUrl": "https://developer.cisco.com/meraki/api/#/rest/api-endpoints/networks/claim-network-devices"
        },
        {
            "ruleId": "add-response",
            "message": "`/networks/{networkId}/merakiAuthUsers` (get) - Response `200` added to (`aGlAaGkuY29t`)",
            "messageHtml": "Response property <code>merakiAuthUserId</code> value added",
            "path": "/networks/{networkId}/merakiAuthUsers",
            "method": "get",
            "responseId": "200",
            "type": "infos",
            "name": "What's Updated",
            "group": "networks",
            "apiDetails": {
                "description": "List the splash or RADIUS users configured under Meraki Authentication for a network",
                "operationId": "getNetworkMerakiAuthUsers",
                "parameters": [{
                    "name": "networkId",
                    "in": "path",
                    "type": "string",
                    "required": true
                }],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "object"
                        },
                        "examples": {
                            "application/json": [{
                                "merakiAuthUserId": "aGlAaGkuY29t",
                                "email": "miles@meraki.com",
                                "name": "Miles Meraki",
                                "createdAt": "2018-02-11T00:00:00.090210Z",
                                "accountType": "802.1X",
                                "authorizations": [{
                                    "authorizedZone": "Store WiFi",
                                    "expiresAt": "2018-03-13T00:00:00.090210Z",
                                    "authorizedByName": "Miles Meraki",
                                    "authorizedByEmail": "miles@meraki.com"
                                }]
                            }]
                        }
                    }
                },
                "summary": "List the splash or RADIUS users configured under Meraki Authentication for a network",
                "tags": [
                    "networks",
                    "configure",
                    "merakiAuthUsers"
                ]
            },
            "docUrl": "https://developer.cisco.com/meraki/api/#/rest/api-endpoints/networks/get-network-meraki-auth-users"
        },
        {
            "ruleId": "add-method",
            "message": "`/networks/{networkId}/merakiAuthUsers` - Added",
            "messageHtml": "Added endpoint method\n      <br>\n      <h4>Create a user configured with Meraki Authentication for a network (currently supports 802.1X and Splash Guest users, and currently, organizations have a 50,000 user cap)</h4>\n      <i>createNetworkMerakiAuthUser</i>\n      \n      <pre><code>{\n    &quot;merakiAuthUserId&quot;: &quot;aGlAaGkuY29t&quot;,\n    &quot;email&quot;: &quot;miles@meraki.com&quot;,\n    &quot;name&quot;: &quot;Miles Meraki&quot;,\n    &quot;createdAt&quot;: &quot;2018-02-11T00:00:00.090210Z&quot;,\n    &quot;accountType&quot;: &quot;802.1X&quot;,\n    &quot;authorizations&quot;: [\n        {\n            &quot;authorizedZone&quot;: &quot;Store WiFi&quot;,\n            &quot;expiresAt&quot;: &quot;2018-03-13T00:00:00.090210Z&quot;,\n            &quot;authorizedByName&quot;: &quot;Miles Meraki&quot;,\n            &quot;authorizedByEmail&quot;: &quot;miles@meraki.com&quot;\n        }\n    ]\n}</code></pre>\n      <hr>\n      ",
            "method": "post",
            "path": "/networks/{networkId}/merakiAuthUsers",
            "details": {
                "description": "Create a user configured with Meraki Authentication for a network (currently supports 802.1X and Splash Guest users, and currently, organizations have a 50,000 user cap)",
                "operationId": "createNetworkMerakiAuthUser",
                "parameters": {
                    "networkId": {
                        "name": "networkId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    "createNetworkMerakiAuthUser": {
                        "name": "createNetworkMerakiAuthUser",
                        "in": "body",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "email": {
                                    "type": "string",
                                    "description": "Email address of the user",
                                    "required": true
                                },
                                "name": {
                                    "type": "string",
                                    "description": "Name of the user",
                                    "required": true
                                },
                                "password": {
                                    "type": "string",
                                    "description": "The password for this user account",
                                    "required": true
                                },
                                "accountType": {
                                    "type": "string",
                                    "enum": [
                                        "Guest",
                                        "802.1X"
                                    ],
                                    "description": "Authorization type for user. Can be either 'Guest' or '802.1X'. Defaults to '802.1X'.",
                                    "default": "802.1X"
                                },
                                "emailPasswordToUser": {
                                    "type": "boolean",
                                    "description": "Whether or not Meraki should email the password to user. Default is false."
                                },
                                "authorizations": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "ssidNumber": {
                                                "type": "integer",
                                                "description": "SSID for which the user is being authorized. Must be configured for the user's given accountType. While users may ultimately be authorized for different types of SSIDs, currently, POST /merakiAuthUsers only supports authorizing a user for one type of SSID. Use PUT /merakiAuthUsers/{merakiAuthUserId} to add authorizations for other types of SSIDs.",
                                                "required": true
                                            },
                                            "expiresAt": {
                                                "type": "string",
                                                "description": "Date for authorization to expire. Set to 'Never' for the authorization to not expire, which is the default.",
                                                "default": "Never"
                                            }
                                        }
                                    },
                                    "description": "Authorization zones and expiration dates for the user.",
                                    "required": true
                                }
                            },
                            "example": {}
                        },
                        "required": true
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "object"
                        },
                        "examples": {
                            "application/json": {
                                "merakiAuthUserId": "aGlAaGkuY29t",
                                "email": "miles@meraki.com",
                                "name": "Miles Meraki",
                                "createdAt": "2018-02-11T00:00:00.090210Z",
                                "accountType": "802.1X",
                                "authorizations": [{
                                    "authorizedZone": "Store WiFi",
                                    "expiresAt": "2018-03-13T00:00:00.090210Z",
                                    "authorizedByName": "Miles Meraki",
                                    "authorizedByEmail": "miles@meraki.com"
                                }]
                            }
                        }
                    }
                },
                "summary": "Create a user configured with Meraki Authentication for a network (currently supports 802.1X and Splash Guest users, and currently, organizations have a 50,000 user cap)",
                "tags": [
                    "networks",
                    "configure",
                    "merakiAuthUsers"
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "schemes": [
                    "https"
                ],
                "security": [{
                    "meraki_api_key": []
                }]
            },
            "type": "infos",
            "name": "What's Updated",
            "group": "networks",
            "apiDetails": {
                "description": "Create a user configured with Meraki Authentication for a network (currently supports 802.1X and Splash Guest users, and currently, organizations have a 50,000 user cap)",
                "operationId": "createNetworkMerakiAuthUser",
                "parameters": [{
                        "name": "networkId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "createNetworkMerakiAuthUser",
                        "in": "body",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "email": {
                                    "type": "string",
                                    "description": "Email address of the user",
                                    "required": true
                                },
                                "name": {
                                    "type": "string",
                                    "description": "Name of the user",
                                    "required": true
                                },
                                "password": {
                                    "type": "string",
                                    "description": "The password for this user account",
                                    "required": true
                                },
                                "accountType": {
                                    "type": "string",
                                    "enum": [
                                        "Guest",
                                        "802.1X"
                                    ],
                                    "description": "Authorization type for user. Can be either 'Guest' or '802.1X'. Defaults to '802.1X'.",
                                    "default": "802.1X"
                                },
                                "emailPasswordToUser": {
                                    "type": "boolean",
                                    "description": "Whether or not Meraki should email the password to user. Default is false."
                                },
                                "authorizations": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "ssidNumber": {
                                                "type": "integer",
                                                "description": "SSID for which the user is being authorized. Must be configured for the user's given accountType. While users may ultimately be authorized for different types of SSIDs, currently, POST /merakiAuthUsers only supports authorizing a user for one type of SSID. Use PUT /merakiAuthUsers/{merakiAuthUserId} to add authorizations for other types of SSIDs.",
                                                "required": true
                                            },
                                            "expiresAt": {
                                                "type": "string",
                                                "description": "Date for authorization to expire. Set to 'Never' for the authorization to not expire, which is the default.",
                                                "default": "Never"
                                            }
                                        }
                                    },
                                    "description": "Authorization zones and expiration dates for the user.",
                                    "required": true
                                }
                            },
                            "example": {}
                        },
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "object"
                        },
                        "examples": {
                            "application/json": {
                                "merakiAuthUserId": "aGlAaGkuY29t",
                                "email": "miles@meraki.com",
                                "name": "Miles Meraki",
                                "createdAt": "2018-02-11T00:00:00.090210Z",
                                "accountType": "802.1X",
                                "authorizations": [{
                                    "authorizedZone": "Store WiFi",
                                    "expiresAt": "2018-03-13T00:00:00.090210Z",
                                    "authorizedByName": "Miles Meraki",
                                    "authorizedByEmail": "miles@meraki.com"
                                }]
                            }
                        }
                    }
                },
                "summary": "Create a user configured with Meraki Authentication for a network (currently supports 802.1X and Splash Guest users, and currently, organizations have a 50,000 user cap)",
                "tags": [
                    "networks",
                    "configure",
                    "merakiAuthUsers"
                ]
            },
            "docUrl": "https://developer.cisco.com/meraki/api/#/rest/api-endpoints/networks/create-network-meraki-auth-user"
        },
        {
            "ruleId": "add-response",
            "message": "`/networks/{networkId}/merakiAuthUsers/{merakiAuthUserId}` (get) - Response `200` added to (`aGlAaGkuY29t`)",
            "messageHtml": "Response property <code>merakiAuthUserId</code> value added",
            "path": "/networks/{networkId}/merakiAuthUsers/{merakiAuthUserId}",
            "method": "get",
            "responseId": "200",
            "type": "infos",
            "name": "What's Updated",
            "group": "networks",
            "apiDetails": {
                "description": "Return the Meraki Auth splash or RADIUS user",
                "operationId": "getNetworkMerakiAuthUser",
                "parameters": [{
                        "name": "networkId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "merakiAuthUserId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "object"
                        },
                        "examples": {
                            "application/json": {
                                "merakiAuthUserId": "aGlAaGkuY29t",
                                "email": "miles@meraki.com",
                                "name": "Miles Meraki",
                                "createdAt": "2018-02-11T00:00:00.090210Z",
                                "accountType": "802.1X",
                                "authorizations": [{
                                    "authorizedZone": "Store WiFi",
                                    "expiresAt": "2018-03-13T00:00:00.090210Z",
                                    "authorizedByName": "Miles Meraki",
                                    "authorizedByEmail": "miles@meraki.com"
                                }]
                            }
                        }
                    }
                },
                "summary": "Return the Meraki Auth splash or RADIUS user",
                "tags": [
                    "networks",
                    "configure",
                    "merakiAuthUsers"
                ]
            },
            "docUrl": "https://developer.cisco.com/meraki/api/#/rest/api-endpoints/networks/get-network-meraki-auth-user"
        },
        {
            "ruleId": "add-method",
            "message": "`/networks/{networkId}/merakiAuthUsers/{merakiAuthUserId}` - Added",
            "messageHtml": "Added endpoint method\n      <br>\n      <h4>Update a user configured with Meraki Authentication (currently only 802.1X RADIUS users can be updated)</h4>\n      <i>updateNetworkMerakiAuthUser</i>\n      \n      <pre><code>{\n    &quot;merakiAuthUserId&quot;: &quot;aGlAaGkuY29t&quot;,\n    &quot;email&quot;: &quot;miles@meraki.com&quot;,\n    &quot;name&quot;: &quot;Miles Meraki&quot;,\n    &quot;createdAt&quot;: &quot;2018-02-11T00:00:00.090210Z&quot;,\n    &quot;accountType&quot;: &quot;802.1X&quot;,\n    &quot;authorizations&quot;: [\n        {\n            &quot;authorizedZone&quot;: &quot;Store WiFi&quot;,\n            &quot;expiresAt&quot;: &quot;2018-03-13T00:00:00.090210Z&quot;,\n            &quot;authorizedByName&quot;: &quot;Miles Meraki&quot;,\n            &quot;authorizedByEmail&quot;: &quot;miles@meraki.com&quot;\n        }\n    ]\n}</code></pre>\n      <hr>\n      ",
            "method": "put",
            "path": "/networks/{networkId}/merakiAuthUsers/{merakiAuthUserId}",
            "details": {
                "description": "Update a user configured with Meraki Authentication (currently only 802.1X RADIUS users can be updated)",
                "operationId": "updateNetworkMerakiAuthUser",
                "parameters": {
                    "networkId": {
                        "name": "networkId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    "merakiAuthUserId": {
                        "name": "merakiAuthUserId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    "updateNetworkMerakiAuthUser": {
                        "name": "updateNetworkMerakiAuthUser",
                        "in": "body",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "description": "Name of the user"
                                },
                                "password": {
                                    "type": "string",
                                    "description": "The password for this user account"
                                },
                                "emailPasswordToUser": {
                                    "type": "boolean",
                                    "description": "Whether or not Meraki should email the password to user. Default is false."
                                },
                                "authorizations": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "ssidNumber": {
                                                "type": "integer",
                                                "description": "SSID for which the user is being authorized",
                                                "required": true
                                            },
                                            "expiresAt": {
                                                "type": "string",
                                                "description": "Date for authorization to expire. Default is for authorization to not expire.",
                                                "default": "Never"
                                            }
                                        }
                                    },
                                    "description": "Authorization zones and expiration dates for the user."
                                }
                            },
                            "example": {}
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "object"
                        },
                        "examples": {
                            "application/json": {
                                "merakiAuthUserId": "aGlAaGkuY29t",
                                "email": "miles@meraki.com",
                                "name": "Miles Meraki",
                                "createdAt": "2018-02-11T00:00:00.090210Z",
                                "accountType": "802.1X",
                                "authorizations": [{
                                    "authorizedZone": "Store WiFi",
                                    "expiresAt": "2018-03-13T00:00:00.090210Z",
                                    "authorizedByName": "Miles Meraki",
                                    "authorizedByEmail": "miles@meraki.com"
                                }]
                            }
                        }
                    }
                },
                "summary": "Update a user configured with Meraki Authentication (currently only 802.1X RADIUS users can be updated)",
                "tags": [
                    "networks",
                    "configure",
                    "merakiAuthUsers"
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "schemes": [
                    "https"
                ],
                "security": [{
                    "meraki_api_key": []
                }]
            },
            "type": "infos",
            "name": "What's Updated",
            "group": "networks",
            "apiDetails": {
                "description": "Update a user configured with Meraki Authentication (currently only 802.1X RADIUS users can be updated)",
                "operationId": "updateNetworkMerakiAuthUser",
                "parameters": [{
                        "name": "networkId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "merakiAuthUserId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "updateNetworkMerakiAuthUser",
                        "in": "body",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "description": "Name of the user"
                                },
                                "password": {
                                    "type": "string",
                                    "description": "The password for this user account"
                                },
                                "emailPasswordToUser": {
                                    "type": "boolean",
                                    "description": "Whether or not Meraki should email the password to user. Default is false."
                                },
                                "authorizations": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "ssidNumber": {
                                                "type": "integer",
                                                "description": "SSID for which the user is being authorized",
                                                "required": true
                                            },
                                            "expiresAt": {
                                                "type": "string",
                                                "description": "Date for authorization to expire. Default is for authorization to not expire.",
                                                "default": "Never"
                                            }
                                        }
                                    },
                                    "description": "Authorization zones and expiration dates for the user."
                                }
                            },
                            "example": {}
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "object"
                        },
                        "examples": {
                            "application/json": {
                                "merakiAuthUserId": "aGlAaGkuY29t",
                                "email": "miles@meraki.com",
                                "name": "Miles Meraki",
                                "createdAt": "2018-02-11T00:00:00.090210Z",
                                "accountType": "802.1X",
                                "authorizations": [{
                                    "authorizedZone": "Store WiFi",
                                    "expiresAt": "2018-03-13T00:00:00.090210Z",
                                    "authorizedByName": "Miles Meraki",
                                    "authorizedByEmail": "miles@meraki.com"
                                }]
                            }
                        }
                    }
                },
                "summary": "Update a user configured with Meraki Authentication (currently only 802.1X RADIUS users can be updated)",
                "tags": [
                    "networks",
                    "configure",
                    "merakiAuthUsers"
                ]
            },
            "docUrl": "https://developer.cisco.com/meraki/api/#/rest/api-endpoints/networks/update-network-meraki-auth-user"
        },
        {
            "ruleId": "add-method",
            "message": "`/networks/{networkId}/merakiAuthUsers/{merakiAuthUserId}` - Added",
            "messageHtml": "Added endpoint method\n      <br>\n      <h4>Delete a user configured with Meraki Authentication (currently only 802.1X RADIUS users can be deleted)</h4>\n      <i>deleteNetworkMerakiAuthUser</i>\n      \n      <pre><code></code></pre>\n      <hr>\n      ",
            "method": "delete",
            "path": "/networks/{networkId}/merakiAuthUsers/{merakiAuthUserId}",
            "details": {
                "description": "Delete a user configured with Meraki Authentication (currently only 802.1X RADIUS users can be deleted)",
                "operationId": "deleteNetworkMerakiAuthUser",
                "parameters": {
                    "networkId": {
                        "name": "networkId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    "merakiAuthUserId": {
                        "name": "merakiAuthUserId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                },
                "responses": {
                    "204": {
                        "description": "Successful operation"
                    }
                },
                "summary": "Delete a user configured with Meraki Authentication (currently only 802.1X RADIUS users can be deleted)",
                "tags": [
                    "networks",
                    "configure",
                    "merakiAuthUsers"
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "schemes": [
                    "https"
                ],
                "security": [{
                    "meraki_api_key": []
                }]
            },
            "type": "infos",
            "name": "What's Updated",
            "group": "networks",
            "apiDetails": {
                "description": "Delete a user configured with Meraki Authentication (currently only 802.1X RADIUS users can be deleted)",
                "operationId": "deleteNetworkMerakiAuthUser",
                "parameters": [{
                        "name": "networkId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "merakiAuthUserId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successful operation"
                    }
                },
                "summary": "Delete a user configured with Meraki Authentication (currently only 802.1X RADIUS users can be deleted)",
                "tags": [
                    "networks",
                    "configure",
                    "merakiAuthUsers"
                ]
            },
            "docUrl": "https://developer.cisco.com/meraki/api/#/rest/api-endpoints/networks/delete-network-meraki-auth-user"
        },
        {
            "ruleId": "edit-summary",
            "message": "`/networks/{networkId}/sm/profiles` (get) - Summary turned from `List all the profiles in the network` to `List all profiles in a network`",
            "messageHtml": "Summary changed from <code>List all the profiles in the network</code> to <code>List all profiles in a network</code>",
            "method": "get",
            "path": "/networks/{networkId}/sm/profiles",
            "previousSummary": "List all the profiles in the network",
            "currentSummary": "List all profiles in a network",
            "type": "infos",
            "name": "What's Updated",
            "group": "sm",
            "apiDetails": {
                "description": "List all profiles in a network",
                "operationId": "getNetworkSmProfiles",
                "parameters": [{
                    "name": "networkId",
                    "in": "path",
                    "type": "string",
                    "required": true
                }],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "object"
                        },
                        "examples": {
                            "application/json": [{
                                "id": "1284392014819",
                                "name": "WiFi/VPN Profile",
                                "description": "This contains WiFi and VPN settings for authorized users.",
                                "scope": "with",
                                "tags": [
                                    "tag1",
                                    "tag2",
                                    "tag3"
                                ],
                                "targetGroupId": null
                            }]
                        }
                    }
                },
                "summary": "List all profiles in a network",
                "tags": [
                    "sm",
                    "configure",
                    "profiles"
                ]
            },
            "docUrl": "https://developer.cisco.com/meraki/api/#/rest/api-endpoints/sm/get-network-sm-profiles"
        },
        {
            "ruleId": "add-response",
            "message": "`/networks/{networkId}/wireless/settings` (get) - Response `200` added to (`minimizeUpgradeTime`)",
            "messageHtml": "Response property <code>upgradeStrategy</code> value added",
            "path": "/networks/{networkId}/wireless/settings",
            "method": "get",
            "responseId": "200",
            "type": "infos",
            "name": "What's Updated",
            "group": "wireless",
            "apiDetails": {
                "description": "Return the wireless settings for a network",
                "operationId": "getNetworkWirelessSettings",
                "parameters": [{
                    "name": "networkId",
                    "in": "path",
                    "type": "string",
                    "required": true
                }],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "object"
                        },
                        "examples": {
                            "application/json": {
                                "meshingEnabled": true,
                                "ipv6BridgeEnabled": false,
                                "locationAnalyticsEnabled": false,
                                "upgradeStrategy": "minimizeUpgradeTime"
                            }
                        }
                    }
                },
                "summary": "Return the wireless settings for a network",
                "tags": [
                    "wireless",
                    "configure",
                    "settings"
                ]
            },
            "docUrl": "https://developer.cisco.com/meraki/api/#/rest/api-endpoints/wireless/get-network-wireless-settings"
        },
        {
            "ruleId": "add-optional-object-property",
            "message": "`paths//networks/{networkId}/wireless/settings/put/parameters/updateNetworkWirelessSettings/schema` - Optional property `upgradeStrategy` Added",
            "messageHtml": "Optional property <code>upgradeStrategy</code> Added",
            "path": "/networks/{networkId}/wireless/settings",
            "method": "put",
            "objectPath": "paths//networks/{networkId}/wireless/settings/put/parameters/updateNetworkWirelessSettings/schema",
            "property": "upgradeStrategy",
            "type": "infos",
            "name": "What's Updated",
            "group": "wireless",
            "apiDetails": {
                "description": "Update the wireless settings for a network",
                "operationId": "updateNetworkWirelessSettings",
                "parameters": [{
                        "name": "networkId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "updateNetworkWirelessSettings",
                        "in": "body",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "meshingEnabled": {
                                    "type": "boolean",
                                    "description": "Toggle for enabling or disabling meshing in a network"
                                },
                                "ipv6BridgeEnabled": {
                                    "type": "boolean",
                                    "description": "Toggle for enabling or disabling IPv6 bridging in a network (Note: if enabled, SSIDs must also be configured to use bridge mode)"
                                },
                                "locationAnalyticsEnabled": {
                                    "type": "boolean",
                                    "description": "Toggle for enabling or disabling location analytics for your network"
                                },
                                "upgradeStrategy": {
                                    "type": "string",
                                    "enum": [
                                        "minimizeUpgradeTime",
                                        "minimizeClientDowntime"
                                    ],
                                    "description": "The upgrade strategy to apply to the network. Must be one of 'minimizeUpgradeTime' or 'minimizeClientDowntime'. Requires firmware version MR 26.8 or higher'"
                                },
                                "ledLightsOn": {
                                    "type": "boolean",
                                    "description": "Toggle for enabling or disabling LED lights on all APs in the network (making them run dark)"
                                }
                            },
                            "example": {
                                "meshingEnabled": true,
                                "ipv6BridgeEnabled": false,
                                "locationAnalyticsEnabled": false,
                                "upgradeStrategy": "minimizeUpgradeTime"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "object"
                        },
                        "examples": {
                            "application/json": {
                                "meshingEnabled": true,
                                "ipv6BridgeEnabled": false,
                                "locationAnalyticsEnabled": false,
                                "upgradeStrategy": "minimizeUpgradeTime"
                            }
                        }
                    }
                },
                "summary": "Update the wireless settings for a network",
                "tags": [
                    "wireless",
                    "configure",
                    "settings"
                ]
            },
            "docUrl": "https://developer.cisco.com/meraki/api/#/rest/api-endpoints/wireless/update-network-wireless-settings"
        },
        {
            "ruleId": "add-optional-param",
            "message": "`/organizations/{organizationId}/actionBatches` (get) - Optional param `status` added",
            "messageHtml": "Optional param <code>status</code> added",
            "path": "/organizations/{organizationId}/actionBatches",
            "method": "get",
            "param": "status",
            "type": "infos",
            "name": "What's Updated",
            "group": "organizations",
            "apiDetails": {
                "description": "Return the list of action batches in the organization",
                "operationId": "getOrganizationActionBatches",
                "parameters": [{
                        "name": "organizationId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "type": "string",
                        "enum": [
                            "pending",
                            "completed",
                            "failed"
                        ],
                        "name": "status",
                        "in": "query",
                        "description": "Filter batches by status. Valid types are pending, completed, and failed."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "object"
                        },
                        "examples": {
                            "application/json": [{
                                "id": "123",
                                "organizationId": "2930418",
                                "confirmed": true,
                                "synchronous": false,
                                "status": {
                                    "completed": false,
                                    "failed": false,
                                    "errors": []
                                },
                                "actions": [{
                                    "resource": "/devices/QXXX-XXXX-XXXX/switchPorts/3",
                                    "operation": "update",
                                    "body": {
                                        "enabled": false
                                    }
                                }]
                            }]
                        }
                    }
                },
                "summary": "Return the list of action batches in the organization",
                "tags": [
                    "organizations",
                    "configure",
                    "actionBatches"
                ]
            },
            "docUrl": "https://developer.cisco.com/meraki/api/#/rest/api-endpoints/organizations/get-organization-action-batches"
        },
        {
            "ruleId": "add-response",
            "message": "`/organizations/{organizationId}/admins` (get) - Response `200` added to (`Email`)",
            "messageHtml": "Response property <code>authenticationMethod</code> value added",
            "path": "/organizations/{organizationId}/admins",
            "method": "get",
            "responseId": "200",
            "type": "infos",
            "name": "What's Updated",
            "group": "organizations",
            "apiDetails": {
                "description": "List the dashboard administrators in this organization",
                "operationId": "getOrganizationAdmins",
                "parameters": [{
                    "name": "organizationId",
                    "in": "path",
                    "type": "string",
                    "required": true
                }],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "object"
                        },
                        "examples": {
                            "application/json": [{
                                "id": "212406",
                                "name": "Miles Meraki",
                                "email": "miles@meraki.com",
                                "orgAccess": "none",
                                "accountStatus": "ok",
                                "twoFactorAuthEnabled": false,
                                "hasApiKey": true,
                                "lastActive": "2018-02-11T00:00:00Z",
                                "tags": [{
                                    "tag": "west",
                                    "access": "read-only"
                                }],
                                "networks": [{
                                    "id": "N_24329156",
                                    "access": "full"
                                }],
                                "authenticationMethod": "Email"
                            }]
                        }
                    }
                },
                "summary": "List the dashboard administrators in this organization",
                "tags": [
                    "organizations",
                    "configure",
                    "admins"
                ]
            },
            "docUrl": "https://developer.cisco.com/meraki/api/#/rest/api-endpoints/organizations/get-organization-admins"
        },
        {
            "ruleId": "add-optional-object-property",
            "message": "`paths//organizations/{organizationId}/admins/post/parameters/createOrganizationAdmin/schema` - Optional property `authenticationMethod` Added",
            "messageHtml": "Optional property <code>authenticationMethod</code> Added",
            "path": "/organizations/{organizationId}/admins",
            "method": "post",
            "objectPath": "paths//organizations/{organizationId}/admins/post/parameters/createOrganizationAdmin/schema",
            "property": "authenticationMethod",
            "type": "infos",
            "name": "What's Updated",
            "group": "organizations",
            "apiDetails": {
                "description": "Create a new dashboard administrator",
                "operationId": "createOrganizationAdmin",
                "parameters": [{
                        "name": "organizationId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "createOrganizationAdmin",
                        "in": "body",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "email": {
                                    "type": "string",
                                    "description": "The email of the dashboard administrator. This attribute can not be updated.",
                                    "required": true
                                },
                                "name": {
                                    "type": "string",
                                    "description": "The name of the dashboard administrator",
                                    "required": true
                                },
                                "orgAccess": {
                                    "type": "string",
                                    "enum": [
                                        "full",
                                        "read-only",
                                        "enterprise",
                                        "none"
                                    ],
                                    "description": "The privilege of the dashboard administrator on the organization. Can be one of 'full', 'read-only', 'enterprise' or 'none'",
                                    "required": true
                                },
                                "tags": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "tag": {
                                                "type": "string",
                                                "description": "The name of the tag",
                                                "required": true
                                            },
                                            "access": {
                                                "type": "string",
                                                "enum": [
                                                    "full",
                                                    "read-only",
                                                    "guest-ambassador",
                                                    "monitor-only"
                                                ],
                                                "description": "The privilege of the dashboard administrator on the tag. Can be one of 'full', 'read-only', 'guest-ambassador' or 'monitor-only'",
                                                "required": true
                                            }
                                        }
                                    },
                                    "description": "The list of tags that the dashboard administrator has privileges on"
                                },
                                "networks": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "string",
                                                "description": "The network ID",
                                                "required": true
                                            },
                                            "access": {
                                                "type": "string",
                                                "enum": [
                                                    "full",
                                                    "read-only",
                                                    "guest-ambassador",
                                                    "monitor-only"
                                                ],
                                                "description": "The privilege of the dashboard administrator on the network. Can be one of 'full', 'read-only', 'guest-ambassador' or 'monitor-only'",
                                                "required": true
                                            }
                                        }
                                    },
                                    "description": "The list of networks that the dashboard administrator has privileges on"
                                },
                                "authenticationMethod": {
                                    "type": "string",
                                    "enum": [
                                        "Email",
                                        "Cisco SecureX Sign-On"
                                    ],
                                    "description": "The method of authentication the user will use to sign in to the Meraki dashboard. Can be one of 'Email' or 'Cisco SecureX Sign-On'. The default is Email authentication"
                                }
                            },
                            "example": {
                                "name": "Miles Meraki",
                                "email": "miles@meraki.com",
                                "orgAccess": "none",
                                "tags": [{
                                    "tag": "west",
                                    "access": "read-only"
                                }]
                            }
                        },
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "object"
                        },
                        "examples": {
                            "application/json": {
                                "id": "212406",
                                "name": "Miles Meraki",
                                "email": "miles@meraki.com",
                                "orgAccess": "none",
                                "accountStatus": "ok",
                                "twoFactorAuthEnabled": false,
                                "hasApiKey": true,
                                "lastActive": "2018-02-11T00:00:00Z",
                                "tags": [{
                                    "tag": "west",
                                    "access": "read-only"
                                }],
                                "networks": [{
                                    "id": "N_24329156",
                                    "access": "full"
                                }],
                                "authenticationMethod": "Email"
                            }
                        }
                    }
                },
                "summary": "Create a new dashboard administrator",
                "tags": [
                    "organizations",
                    "configure",
                    "admins"
                ]
            },
            "docUrl": "https://developer.cisco.com/meraki/api/#/rest/api-endpoints/organizations/create-organization-admin"
        },
        {
            "ruleId": "add-method",
            "message": "`/organizations/{organizationId}/configTemplates` - Added",
            "messageHtml": "Added endpoint method\n      <br>\n      <h4>Create a new configuration template</h4>\n      <i>createOrganizationConfigTemplate</i>\n      \n      <pre><code>{\n    &quot;id&quot;: &quot;N_24329156&quot;,\n    &quot;name&quot;: &quot;My config template&quot;,\n    &quot;productTypes&quot;: [\n        &quot;appliance&quot;,\n        &quot;switch&quot;,\n        &quot;wireless&quot;\n    ],\n    &quot;timeZone&quot;: &quot;America/Los_Angeles&quot;\n}</code></pre>\n      <hr>\n      ",
            "method": "post",
            "path": "/organizations/{organizationId}/configTemplates",
            "details": {
                "description": "Create a new configuration template",
                "operationId": "createOrganizationConfigTemplate",
                "parameters": {
                    "organizationId": {
                        "name": "organizationId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    "createOrganizationConfigTemplate": {
                        "name": "createOrganizationConfigTemplate",
                        "in": "body",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "description": "The name of the configuration template",
                                    "required": true
                                },
                                "timeZone": {
                                    "type": "string",
                                    "description": "The timezone of the configuration template. For a list of allowed timezones, please see the 'TZ' column in the table in <a target='_blank' href='https://en.wikipedia.org/wiki/List_of_tz_database_time_zones'>this article</a>. Not applicable if copying from existing network or template"
                                },
                                "copyFromNetworkId": {
                                    "type": "string",
                                    "description": "The ID of the network or config template to copy configuration from"
                                }
                            },
                            "example": {
                                "name": "My config template",
                                "timeZone": "America/Los_Angeles"
                            }
                        },
                        "required": true
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "object"
                        },
                        "examples": {
                            "application/json": {
                                "id": "N_24329156",
                                "name": "My config template",
                                "productTypes": [
                                    "appliance",
                                    "switch",
                                    "wireless"
                                ],
                                "timeZone": "America/Los_Angeles"
                            }
                        }
                    }
                },
                "summary": "Create a new configuration template",
                "tags": [
                    "organizations",
                    "configure",
                    "configTemplates"
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "schemes": [
                    "https"
                ],
                "security": [{
                    "meraki_api_key": []
                }]
            },
            "type": "infos",
            "name": "What's Updated",
            "group": "organizations",
            "apiDetails": {
                "description": "Create a new configuration template",
                "operationId": "createOrganizationConfigTemplate",
                "parameters": [{
                        "name": "organizationId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "createOrganizationConfigTemplate",
                        "in": "body",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "description": "The name of the configuration template",
                                    "required": true
                                },
                                "timeZone": {
                                    "type": "string",
                                    "description": "The timezone of the configuration template. For a list of allowed timezones, please see the 'TZ' column in the table in <a target='_blank' href='https://en.wikipedia.org/wiki/List_of_tz_database_time_zones'>this article</a>. Not applicable if copying from existing network or template"
                                },
                                "copyFromNetworkId": {
                                    "type": "string",
                                    "description": "The ID of the network or config template to copy configuration from"
                                }
                            },
                            "example": {
                                "name": "My config template",
                                "timeZone": "America/Los_Angeles"
                            }
                        },
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "object"
                        },
                        "examples": {
                            "application/json": {
                                "id": "N_24329156",
                                "name": "My config template",
                                "productTypes": [
                                    "appliance",
                                    "switch",
                                    "wireless"
                                ],
                                "timeZone": "America/Los_Angeles"
                            }
                        }
                    }
                },
                "summary": "Create a new configuration template",
                "tags": [
                    "organizations",
                    "configure",
                    "configTemplates"
                ]
            },
            "docUrl": "https://developer.cisco.com/meraki/api/#/rest/api-endpoints/organizations/create-organization-config-template"
        },
        {
            "ruleId": "add-method",
            "message": "`/organizations/{organizationId}/configTemplates/{configTemplateId}` - Added",
            "messageHtml": "Added endpoint method\n      <br>\n      <h4>Return a single configuration template</h4>\n      <i>getOrganizationConfigTemplate</i>\n      \n      <pre><code>{\n    &quot;id&quot;: &quot;N_24329156&quot;,\n    &quot;name&quot;: &quot;My config template&quot;,\n    &quot;productTypes&quot;: [\n        &quot;appliance&quot;,\n        &quot;switch&quot;,\n        &quot;wireless&quot;\n    ],\n    &quot;timeZone&quot;: &quot;America/Los_Angeles&quot;\n}</code></pre>\n      <hr>\n      ",
            "method": "get",
            "path": "/organizations/{organizationId}/configTemplates/{configTemplateId}",
            "details": {
                "description": "Return a single configuration template",
                "operationId": "getOrganizationConfigTemplate",
                "parameters": {
                    "organizationId": {
                        "name": "organizationId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    "configTemplateId": {
                        "name": "configTemplateId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "object"
                        },
                        "examples": {
                            "application/json": {
                                "id": "N_24329156",
                                "name": "My config template",
                                "productTypes": [
                                    "appliance",
                                    "switch",
                                    "wireless"
                                ],
                                "timeZone": "America/Los_Angeles"
                            }
                        }
                    }
                },
                "summary": "Return a single configuration template",
                "tags": [
                    "organizations",
                    "configure",
                    "configTemplates"
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "schemes": [
                    "https"
                ],
                "security": [{
                    "meraki_api_key": []
                }]
            },
            "type": "infos",
            "name": "What's Updated",
            "group": "organizations",
            "apiDetails": {
                "description": "Return a single configuration template",
                "operationId": "getOrganizationConfigTemplate",
                "parameters": [{
                        "name": "organizationId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "configTemplateId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "object"
                        },
                        "examples": {
                            "application/json": {
                                "id": "N_24329156",
                                "name": "My config template",
                                "productTypes": [
                                    "appliance",
                                    "switch",
                                    "wireless"
                                ],
                                "timeZone": "America/Los_Angeles"
                            }
                        }
                    }
                },
                "summary": "Return a single configuration template",
                "tags": [
                    "organizations",
                    "configure",
                    "configTemplates"
                ]
            },
            "docUrl": "https://developer.cisco.com/meraki/api/#/rest/api-endpoints/organizations/get-organization-config-template"
        },
        {
            "ruleId": "add-method",
            "message": "`/organizations/{organizationId}/configTemplates/{configTemplateId}` - Added",
            "messageHtml": "Added endpoint method\n      <br>\n      <h4>Update a configuration template</h4>\n      <i>updateOrganizationConfigTemplate</i>\n      \n      <pre><code>{\n    &quot;id&quot;: &quot;N_24329156&quot;,\n    &quot;name&quot;: &quot;My config template&quot;,\n    &quot;productTypes&quot;: [\n        &quot;appliance&quot;,\n        &quot;switch&quot;,\n        &quot;wireless&quot;\n    ],\n    &quot;timeZone&quot;: &quot;America/Los_Angeles&quot;\n}</code></pre>\n      <hr>\n      ",
            "method": "put",
            "path": "/organizations/{organizationId}/configTemplates/{configTemplateId}",
            "details": {
                "description": "Update a configuration template",
                "operationId": "updateOrganizationConfigTemplate",
                "parameters": {
                    "organizationId": {
                        "name": "organizationId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    "configTemplateId": {
                        "name": "configTemplateId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    "updateOrganizationConfigTemplate": {
                        "name": "updateOrganizationConfigTemplate",
                        "in": "body",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "description": "The name of the configuration template"
                                },
                                "timeZone": {
                                    "type": "string",
                                    "description": "The timezone of the configuration template. For a list of allowed timezones, please see the 'TZ' column in the table in <a target='_blank' href='https://en.wikipedia.org/wiki/List_of_tz_database_time_zones'>this article.</a>"
                                }
                            },
                            "example": {
                                "name": "My config template",
                                "timeZone": "America/Los_Angeles"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "object"
                        },
                        "examples": {
                            "application/json": {
                                "id": "N_24329156",
                                "name": "My config template",
                                "productTypes": [
                                    "appliance",
                                    "switch",
                                    "wireless"
                                ],
                                "timeZone": "America/Los_Angeles"
                            }
                        }
                    }
                },
                "summary": "Update a configuration template",
                "tags": [
                    "organizations",
                    "configure",
                    "configTemplates"
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "schemes": [
                    "https"
                ],
                "security": [{
                    "meraki_api_key": []
                }]
            },
            "type": "infos",
            "name": "What's Updated",
            "group": "organizations",
            "apiDetails": {
                "description": "Update a configuration template",
                "operationId": "updateOrganizationConfigTemplate",
                "parameters": [{
                        "name": "organizationId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "configTemplateId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "updateOrganizationConfigTemplate",
                        "in": "body",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "description": "The name of the configuration template"
                                },
                                "timeZone": {
                                    "type": "string",
                                    "description": "The timezone of the configuration template. For a list of allowed timezones, please see the 'TZ' column in the table in <a target='_blank' href='https://en.wikipedia.org/wiki/List_of_tz_database_time_zones'>this article.</a>"
                                }
                            },
                            "example": {
                                "name": "My config template",
                                "timeZone": "America/Los_Angeles"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "object"
                        },
                        "examples": {
                            "application/json": {
                                "id": "N_24329156",
                                "name": "My config template",
                                "productTypes": [
                                    "appliance",
                                    "switch",
                                    "wireless"
                                ],
                                "timeZone": "America/Los_Angeles"
                            }
                        }
                    }
                },
                "summary": "Update a configuration template",
                "tags": [
                    "organizations",
                    "configure",
                    "configTemplates"
                ]
            },
            "docUrl": "https://developer.cisco.com/meraki/api/#/rest/api-endpoints/organizations/update-organization-config-template"
        },
        {
            "ruleId": "add-response",
            "message": "`/organizations/{organizationId}/insight/monitoredMediaServers` (get) - Response `200` added to (`true`)",
            "messageHtml": "Response property <code>bestEffortMonitoringEnabled</code> value added",
            "path": "/organizations/{organizationId}/insight/monitoredMediaServers",
            "method": "get",
            "responseId": "200",
            "type": "infos",
            "name": "What's Updated",
            "group": "insight",
            "apiDetails": {
                "description": "List the monitored media servers for this organization. Only valid for organizations with Meraki Insight.",
                "operationId": "getOrganizationInsightMonitoredMediaServers",
                "parameters": [{
                    "name": "organizationId",
                    "in": "path",
                    "type": "string",
                    "required": true
                }],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "object"
                        },
                        "examples": {
                            "application/json": [{
                                "id": "1284392014819",
                                "name": "Sample VoIP Provider",
                                "address": "123.123.123.1",
                                "bestEffortMonitoringEnabled": true
                            }]
                        }
                    }
                },
                "summary": "List the monitored media servers for this organization. Only valid for organizations with Meraki Insight.",
                "tags": [
                    "insight",
                    "configure",
                    "monitoredMediaServers"
                ]
            },
            "docUrl": "https://developer.cisco.com/meraki/api/#/rest/api-endpoints/insight/get-organization-insight-monitored-media-servers"
        },
        {
            "ruleId": "add-response",
            "message": "`/organizations/{organizationId}/insight/monitoredMediaServers/{monitoredMediaServerId}` (get) - Response `200` added to (`true`)",
            "messageHtml": "Response property <code>bestEffortMonitoringEnabled</code> value added",
            "path": "/organizations/{organizationId}/insight/monitoredMediaServers/{monitoredMediaServerId}",
            "method": "get",
            "responseId": "200",
            "type": "infos",
            "name": "What's Updated",
            "group": "insight",
            "apiDetails": {
                "description": "Return a monitored media server for this organization. Only valid for organizations with Meraki Insight.",
                "operationId": "getOrganizationInsightMonitoredMediaServer",
                "parameters": [{
                        "name": "organizationId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "monitoredMediaServerId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "object"
                        },
                        "examples": {
                            "application/json": {
                                "id": "1284392014819",
                                "name": "Sample VoIP Provider",
                                "address": "123.123.123.1",
                                "bestEffortMonitoringEnabled": true
                            }
                        }
                    }
                },
                "summary": "Return a monitored media server for this organization. Only valid for organizations with Meraki Insight.",
                "tags": [
                    "insight",
                    "configure",
                    "monitoredMediaServers"
                ]
            },
            "docUrl": "https://developer.cisco.com/meraki/api/#/rest/api-endpoints/insight/get-organization-insight-monitored-media-server"
        },
        {
            "ruleId": "add-optional-param",
            "message": "`/organizations/{organizationId}/networks` (get) - Optional param `tags` added",
            "messageHtml": "Optional param <code>tags</code> added",
            "path": "/organizations/{organizationId}/networks",
            "method": "get",
            "param": "tags",
            "type": "infos",
            "name": "What's Updated",
            "group": "organizations",
            "apiDetails": {
                "description": "List the networks that the user has privileges on in an organization",
                "operationId": "getOrganizationNetworks",
                "parameters": [{
                        "name": "organizationId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "type": "string",
                        "name": "configTemplateId",
                        "in": "query",
                        "description": "An optional parameter that is the ID of a config template. Will return all networks bound to that template."
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "name": "tags",
                        "in": "query",
                        "description": "An optional parameter to filter networks by tags. The filtering is case-sensitive. If tags are included, 'tagsFilterType' should also be included (see below)."
                    },
                    {
                        "type": "string",
                        "enum": [
                            "withAnyTags",
                            "withAllTags"
                        ],
                        "name": "tagsFilterType",
                        "in": "query",
                        "description": "An optional parameter of value 'withAnyTags' or 'withAllTags' to indicate whether to return networks which contain ANY or ALL of the included tags. If no type is included, 'withAnyTags' will be selected."
                    },
                    {
                        "type": "integer",
                        "name": "perPage",
                        "in": "query",
                        "description": "The number of entries per page returned. Acceptable range is 3 - 100000. Default is 1000."
                    },
                    {
                        "type": "string",
                        "name": "startingAfter",
                        "in": "query",
                        "description": "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
                    },
                    {
                        "type": "string",
                        "name": "endingBefore",
                        "in": "query",
                        "description": "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "object"
                        },
                        "headers": {
                            "Link": {
                                "type": "string",
                                "description": "A comma-separated list of first, last, prev, and next relative links used for subsequent paginated requests."
                            }
                        },
                        "examples": {
                            "application/json": [{
                                "id": "L_123456",
                                "organizationId": "2930418",
                                "name": "Long Island Office",
                                "timeZone": "America/Los_Angeles",
                                "tags": [
                                    "tag1",
                                    "tag2"
                                ],
                                "productTypes": [
                                    "appliance",
                                    "switch",
                                    "wireless"
                                ],
                                "enrollmentString": "long-island-office"
                            }]
                        }
                    }
                },
                "summary": "List the networks that the user has privileges on in an organization",
                "tags": [
                    "organizations",
                    "configure",
                    "networks"
                ]
            },
            "docUrl": "https://developer.cisco.com/meraki/api/#/rest/api-endpoints/organizations/get-organization-networks"
        },
        {
            "ruleId": "add-optional-param",
            "message": "`/organizations/{organizationId}/networks` (get) - Optional param `tagsFilterType` added",
            "messageHtml": "Optional param <code>tagsFilterType</code> added",
            "path": "/organizations/{organizationId}/networks",
            "method": "get",
            "param": "tagsFilterType",
            "type": "infos",
            "name": "What's Updated",
            "group": "organizations",
            "apiDetails": {
                "description": "List the networks that the user has privileges on in an organization",
                "operationId": "getOrganizationNetworks",
                "parameters": [{
                        "name": "organizationId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "type": "string",
                        "name": "configTemplateId",
                        "in": "query",
                        "description": "An optional parameter that is the ID of a config template. Will return all networks bound to that template."
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "name": "tags",
                        "in": "query",
                        "description": "An optional parameter to filter networks by tags. The filtering is case-sensitive. If tags are included, 'tagsFilterType' should also be included (see below)."
                    },
                    {
                        "type": "string",
                        "enum": [
                            "withAnyTags",
                            "withAllTags"
                        ],
                        "name": "tagsFilterType",
                        "in": "query",
                        "description": "An optional parameter of value 'withAnyTags' or 'withAllTags' to indicate whether to return networks which contain ANY or ALL of the included tags. If no type is included, 'withAnyTags' will be selected."
                    },
                    {
                        "type": "integer",
                        "name": "perPage",
                        "in": "query",
                        "description": "The number of entries per page returned. Acceptable range is 3 - 100000. Default is 1000."
                    },
                    {
                        "type": "string",
                        "name": "startingAfter",
                        "in": "query",
                        "description": "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
                    },
                    {
                        "type": "string",
                        "name": "endingBefore",
                        "in": "query",
                        "description": "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "object"
                        },
                        "headers": {
                            "Link": {
                                "type": "string",
                                "description": "A comma-separated list of first, last, prev, and next relative links used for subsequent paginated requests."
                            }
                        },
                        "examples": {
                            "application/json": [{
                                "id": "L_123456",
                                "organizationId": "2930418",
                                "name": "Long Island Office",
                                "timeZone": "America/Los_Angeles",
                                "tags": [
                                    "tag1",
                                    "tag2"
                                ],
                                "productTypes": [
                                    "appliance",
                                    "switch",
                                    "wireless"
                                ],
                                "enrollmentString": "long-island-office"
                            }]
                        }
                    }
                },
                "summary": "List the networks that the user has privileges on in an organization",
                "tags": [
                    "organizations",
                    "configure",
                    "networks"
                ]
            },
            "docUrl": "https://developer.cisco.com/meraki/api/#/rest/api-endpoints/organizations/get-organization-networks"
        },
        {
            "ruleId": "add-optional-param",
            "message": "`/organizations/{organizationId}/networks` (get) - Optional param `perPage` added",
            "messageHtml": "Optional param <code>perPage</code> added",
            "path": "/organizations/{organizationId}/networks",
            "method": "get",
            "param": "perPage",
            "type": "infos",
            "name": "What's Updated",
            "group": "organizations",
            "apiDetails": {
                "description": "List the networks that the user has privileges on in an organization",
                "operationId": "getOrganizationNetworks",
                "parameters": [{
                        "name": "organizationId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "type": "string",
                        "name": "configTemplateId",
                        "in": "query",
                        "description": "An optional parameter that is the ID of a config template. Will return all networks bound to that template."
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "name": "tags",
                        "in": "query",
                        "description": "An optional parameter to filter networks by tags. The filtering is case-sensitive. If tags are included, 'tagsFilterType' should also be included (see below)."
                    },
                    {
                        "type": "string",
                        "enum": [
                            "withAnyTags",
                            "withAllTags"
                        ],
                        "name": "tagsFilterType",
                        "in": "query",
                        "description": "An optional parameter of value 'withAnyTags' or 'withAllTags' to indicate whether to return networks which contain ANY or ALL of the included tags. If no type is included, 'withAnyTags' will be selected."
                    },
                    {
                        "type": "integer",
                        "name": "perPage",
                        "in": "query",
                        "description": "The number of entries per page returned. Acceptable range is 3 - 100000. Default is 1000."
                    },
                    {
                        "type": "string",
                        "name": "startingAfter",
                        "in": "query",
                        "description": "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
                    },
                    {
                        "type": "string",
                        "name": "endingBefore",
                        "in": "query",
                        "description": "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "object"
                        },
                        "headers": {
                            "Link": {
                                "type": "string",
                                "description": "A comma-separated list of first, last, prev, and next relative links used for subsequent paginated requests."
                            }
                        },
                        "examples": {
                            "application/json": [{
                                "id": "L_123456",
                                "organizationId": "2930418",
                                "name": "Long Island Office",
                                "timeZone": "America/Los_Angeles",
                                "tags": [
                                    "tag1",
                                    "tag2"
                                ],
                                "productTypes": [
                                    "appliance",
                                    "switch",
                                    "wireless"
                                ],
                                "enrollmentString": "long-island-office"
                            }]
                        }
                    }
                },
                "summary": "List the networks that the user has privileges on in an organization",
                "tags": [
                    "organizations",
                    "configure",
                    "networks"
                ]
            },
            "docUrl": "https://developer.cisco.com/meraki/api/#/rest/api-endpoints/organizations/get-organization-networks"
        },
        {
            "ruleId": "add-optional-param",
            "message": "`/organizations/{organizationId}/networks` (get) - Optional param `startingAfter` added",
            "messageHtml": "Optional param <code>startingAfter</code> added",
            "path": "/organizations/{organizationId}/networks",
            "method": "get",
            "param": "startingAfter",
            "type": "infos",
            "name": "What's Updated",
            "group": "organizations",
            "apiDetails": {
                "description": "List the networks that the user has privileges on in an organization",
                "operationId": "getOrganizationNetworks",
                "parameters": [{
                        "name": "organizationId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "type": "string",
                        "name": "configTemplateId",
                        "in": "query",
                        "description": "An optional parameter that is the ID of a config template. Will return all networks bound to that template."
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "name": "tags",
                        "in": "query",
                        "description": "An optional parameter to filter networks by tags. The filtering is case-sensitive. If tags are included, 'tagsFilterType' should also be included (see below)."
                    },
                    {
                        "type": "string",
                        "enum": [
                            "withAnyTags",
                            "withAllTags"
                        ],
                        "name": "tagsFilterType",
                        "in": "query",
                        "description": "An optional parameter of value 'withAnyTags' or 'withAllTags' to indicate whether to return networks which contain ANY or ALL of the included tags. If no type is included, 'withAnyTags' will be selected."
                    },
                    {
                        "type": "integer",
                        "name": "perPage",
                        "in": "query",
                        "description": "The number of entries per page returned. Acceptable range is 3 - 100000. Default is 1000."
                    },
                    {
                        "type": "string",
                        "name": "startingAfter",
                        "in": "query",
                        "description": "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
                    },
                    {
                        "type": "string",
                        "name": "endingBefore",
                        "in": "query",
                        "description": "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "object"
                        },
                        "headers": {
                            "Link": {
                                "type": "string",
                                "description": "A comma-separated list of first, last, prev, and next relative links used for subsequent paginated requests."
                            }
                        },
                        "examples": {
                            "application/json": [{
                                "id": "L_123456",
                                "organizationId": "2930418",
                                "name": "Long Island Office",
                                "timeZone": "America/Los_Angeles",
                                "tags": [
                                    "tag1",
                                    "tag2"
                                ],
                                "productTypes": [
                                    "appliance",
                                    "switch",
                                    "wireless"
                                ],
                                "enrollmentString": "long-island-office"
                            }]
                        }
                    }
                },
                "summary": "List the networks that the user has privileges on in an organization",
                "tags": [
                    "organizations",
                    "configure",
                    "networks"
                ]
            },
            "docUrl": "https://developer.cisco.com/meraki/api/#/rest/api-endpoints/organizations/get-organization-networks"
        },
        {
            "ruleId": "add-optional-param",
            "message": "`/organizations/{organizationId}/networks` (get) - Optional param `endingBefore` added",
            "messageHtml": "Optional param <code>endingBefore</code> added",
            "path": "/organizations/{organizationId}/networks",
            "method": "get",
            "param": "endingBefore",
            "type": "infos",
            "name": "What's Updated",
            "group": "organizations",
            "apiDetails": {
                "description": "List the networks that the user has privileges on in an organization",
                "operationId": "getOrganizationNetworks",
                "parameters": [{
                        "name": "organizationId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "type": "string",
                        "name": "configTemplateId",
                        "in": "query",
                        "description": "An optional parameter that is the ID of a config template. Will return all networks bound to that template."
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "name": "tags",
                        "in": "query",
                        "description": "An optional parameter to filter networks by tags. The filtering is case-sensitive. If tags are included, 'tagsFilterType' should also be included (see below)."
                    },
                    {
                        "type": "string",
                        "enum": [
                            "withAnyTags",
                            "withAllTags"
                        ],
                        "name": "tagsFilterType",
                        "in": "query",
                        "description": "An optional parameter of value 'withAnyTags' or 'withAllTags' to indicate whether to return networks which contain ANY or ALL of the included tags. If no type is included, 'withAnyTags' will be selected."
                    },
                    {
                        "type": "integer",
                        "name": "perPage",
                        "in": "query",
                        "description": "The number of entries per page returned. Acceptable range is 3 - 100000. Default is 1000."
                    },
                    {
                        "type": "string",
                        "name": "startingAfter",
                        "in": "query",
                        "description": "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
                    },
                    {
                        "type": "string",
                        "name": "endingBefore",
                        "in": "query",
                        "description": "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "object"
                        },
                        "headers": {
                            "Link": {
                                "type": "string",
                                "description": "A comma-separated list of first, last, prev, and next relative links used for subsequent paginated requests."
                            }
                        },
                        "examples": {
                            "application/json": [{
                                "id": "L_123456",
                                "organizationId": "2930418",
                                "name": "Long Island Office",
                                "timeZone": "America/Los_Angeles",
                                "tags": [
                                    "tag1",
                                    "tag2"
                                ],
                                "productTypes": [
                                    "appliance",
                                    "switch",
                                    "wireless"
                                ],
                                "enrollmentString": "long-island-office"
                            }]
                        }
                    }
                },
                "summary": "List the networks that the user has privileges on in an organization",
                "tags": [
                    "organizations",
                    "configure",
                    "networks"
                ]
            },
            "docUrl": "https://developer.cisco.com/meraki/api/#/rest/api-endpoints/organizations/get-organization-networks"
        },
        {
            "ruleId": "add-response",
            "message": "`/organizations/{organizationId}/networks` (get) - Response `200` added to (`[object Object]`)",
            "messageHtml": "Response property <code>headers</code> value added",
            "path": "/organizations/{organizationId}/networks",
            "method": "get",
            "responseId": "200",
            "type": "infos",
            "name": "What's Updated",
            "group": "organizations",
            "apiDetails": {
                "description": "List the networks that the user has privileges on in an organization",
                "operationId": "getOrganizationNetworks",
                "parameters": [{
                        "name": "organizationId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "type": "string",
                        "name": "configTemplateId",
                        "in": "query",
                        "description": "An optional parameter that is the ID of a config template. Will return all networks bound to that template."
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "name": "tags",
                        "in": "query",
                        "description": "An optional parameter to filter networks by tags. The filtering is case-sensitive. If tags are included, 'tagsFilterType' should also be included (see below)."
                    },
                    {
                        "type": "string",
                        "enum": [
                            "withAnyTags",
                            "withAllTags"
                        ],
                        "name": "tagsFilterType",
                        "in": "query",
                        "description": "An optional parameter of value 'withAnyTags' or 'withAllTags' to indicate whether to return networks which contain ANY or ALL of the included tags. If no type is included, 'withAnyTags' will be selected."
                    },
                    {
                        "type": "integer",
                        "name": "perPage",
                        "in": "query",
                        "description": "The number of entries per page returned. Acceptable range is 3 - 100000. Default is 1000."
                    },
                    {
                        "type": "string",
                        "name": "startingAfter",
                        "in": "query",
                        "description": "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
                    },
                    {
                        "type": "string",
                        "name": "endingBefore",
                        "in": "query",
                        "description": "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "object"
                        },
                        "headers": {
                            "Link": {
                                "type": "string",
                                "description": "A comma-separated list of first, last, prev, and next relative links used for subsequent paginated requests."
                            }
                        },
                        "examples": {
                            "application/json": [{
                                "id": "L_123456",
                                "organizationId": "2930418",
                                "name": "Long Island Office",
                                "timeZone": "America/Los_Angeles",
                                "tags": [
                                    "tag1",
                                    "tag2"
                                ],
                                "productTypes": [
                                    "appliance",
                                    "switch",
                                    "wireless"
                                ],
                                "enrollmentString": "long-island-office"
                            }]
                        }
                    }
                },
                "summary": "List the networks that the user has privileges on in an organization",
                "tags": [
                    "organizations",
                    "configure",
                    "networks"
                ]
            },
            "docUrl": "https://developer.cisco.com/meraki/api/#/rest/api-endpoints/organizations/get-organization-networks"
        },
        {
            "ruleId": "edit-summary",
            "message": "`/organizations/{organizationId}/networks` (get) - Summary turned from `List the networks in an organization` to `List the networks that the user has privileges on in an organization`",
            "messageHtml": "Summary changed from <code>List the networks in an organization</code> to <code>List the networks that the user has privileges on in an organization</code>",
            "method": "get",
            "path": "/organizations/{organizationId}/networks",
            "previousSummary": "List the networks in an organization",
            "currentSummary": "List the networks that the user has privileges on in an organization",
            "type": "infos",
            "name": "What's Updated",
            "group": "organizations",
            "apiDetails": {
                "description": "List the networks that the user has privileges on in an organization",
                "operationId": "getOrganizationNetworks",
                "parameters": [{
                        "name": "organizationId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "type": "string",
                        "name": "configTemplateId",
                        "in": "query",
                        "description": "An optional parameter that is the ID of a config template. Will return all networks bound to that template."
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "name": "tags",
                        "in": "query",
                        "description": "An optional parameter to filter networks by tags. The filtering is case-sensitive. If tags are included, 'tagsFilterType' should also be included (see below)."
                    },
                    {
                        "type": "string",
                        "enum": [
                            "withAnyTags",
                            "withAllTags"
                        ],
                        "name": "tagsFilterType",
                        "in": "query",
                        "description": "An optional parameter of value 'withAnyTags' or 'withAllTags' to indicate whether to return networks which contain ANY or ALL of the included tags. If no type is included, 'withAnyTags' will be selected."
                    },
                    {
                        "type": "integer",
                        "name": "perPage",
                        "in": "query",
                        "description": "The number of entries per page returned. Acceptable range is 3 - 100000. Default is 1000."
                    },
                    {
                        "type": "string",
                        "name": "startingAfter",
                        "in": "query",
                        "description": "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
                    },
                    {
                        "type": "string",
                        "name": "endingBefore",
                        "in": "query",
                        "description": "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "object"
                        },
                        "headers": {
                            "Link": {
                                "type": "string",
                                "description": "A comma-separated list of first, last, prev, and next relative links used for subsequent paginated requests."
                            }
                        },
                        "examples": {
                            "application/json": [{
                                "id": "L_123456",
                                "organizationId": "2930418",
                                "name": "Long Island Office",
                                "timeZone": "America/Los_Angeles",
                                "tags": [
                                    "tag1",
                                    "tag2"
                                ],
                                "productTypes": [
                                    "appliance",
                                    "switch",
                                    "wireless"
                                ],
                                "enrollmentString": "long-island-office"
                            }]
                        }
                    }
                },
                "summary": "List the networks that the user has privileges on in an organization",
                "tags": [
                    "organizations",
                    "configure",
                    "networks"
                ]
            },
            "docUrl": "https://developer.cisco.com/meraki/api/#/rest/api-endpoints/organizations/get-organization-networks"
        },
        {
            "ruleId": "delete-object-property",
            "message": "`paths//organizations/{organizationId}/networks/post/parameters/createOrganizationNetwork/schema` - Property `type` Deleted",
            "messageHtml": "Property <code>type</code> Deleted",
            "path": "/organizations/{organizationId}/networks",
            "method": "post",
            "objectPath": "paths//organizations/{organizationId}/networks/post/parameters/createOrganizationNetwork/schema",
            "property": "type",
            "type": "infos",
            "name": "What's Updated",
            "group": "organizations",
            "apiDetails": {
                "description": "Create a network",
                "operationId": "createOrganizationNetwork",
                "parameters": [{
                        "name": "organizationId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "createOrganizationNetwork",
                        "in": "body",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "description": "The name of the new network",
                                    "required": true
                                },
                                "productTypes": {
                                    "type": "array",
                                    "items": {
                                        "type": "string",
                                        "enum": [
                                            "wireless",
                                            "appliance",
                                            "switch",
                                            "systemsManager",
                                            "camera",
                                            "cellularGateway"
                                        ]
                                    },
                                    "description": "The product type(s) of the new network. Valid types are wireless, appliance, switch, systemsManager, camera, cellularGateway. If more than one type is included, the network will be a combined network.",
                                    "required": true
                                },
                                "tags": {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    },
                                    "description": "A list of tags to be applied to the network"
                                },
                                "timeZone": {
                                    "type": "string",
                                    "description": "The timezone of the network. For a list of allowed timezones, please see the 'TZ' column in the table in <a target='_blank' href='https://en.wikipedia.org/wiki/List_of_tz_database_time_zones'>this article.</a>"
                                },
                                "copyFromNetworkId": {
                                    "type": "string",
                                    "description": "The ID of the network to copy configuration from. Other provided parameters will override the copied configuration, except type which must match this network's type exactly."
                                }
                            },
                            "example": {
                                "name": "Long Island Office",
                                "timeZone": "America/Los_Angeles",
                                "tags": [
                                    "tag1",
                                    "tag2"
                                ],
                                "productTypes": [
                                    "appliance",
                                    "switch",
                                    "camera"
                                ]
                            }
                        },
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "object"
                        },
                        "examples": {
                            "application/json": {
                                "id": "L_123456",
                                "organizationId": "2930418",
                                "name": "Long Island Office",
                                "timeZone": "America/Los_Angeles",
                                "tags": [
                                    "tag1",
                                    "tag2"
                                ],
                                "productTypes": [
                                    "appliance",
                                    "switch",
                                    "wireless"
                                ],
                                "enrollmentString": "long-island-office"
                            }
                        }
                    }
                },
                "summary": "Create a network",
                "tags": [
                    "organizations",
                    "configure",
                    "networks"
                ]
            },
            "docUrl": "https://developer.cisco.com/meraki/api/#/rest/api-endpoints/organizations/create-organization-network"
        },
        {
            "ruleId": "delete-object-property",
            "message": "`paths//organizations/{organizationId}/networks/post/parameters/createOrganizationNetwork/schema` - Property `disableMyMerakiCom` Deleted",
            "messageHtml": "Property <code>disableMyMerakiCom</code> Deleted",
            "path": "/organizations/{organizationId}/networks",
            "method": "post",
            "objectPath": "paths//organizations/{organizationId}/networks/post/parameters/createOrganizationNetwork/schema",
            "property": "disableMyMerakiCom",
            "type": "infos",
            "name": "What's Updated",
            "group": "organizations",
            "apiDetails": {
                "description": "Create a network",
                "operationId": "createOrganizationNetwork",
                "parameters": [{
                        "name": "organizationId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "createOrganizationNetwork",
                        "in": "body",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "description": "The name of the new network",
                                    "required": true
                                },
                                "productTypes": {
                                    "type": "array",
                                    "items": {
                                        "type": "string",
                                        "enum": [
                                            "wireless",
                                            "appliance",
                                            "switch",
                                            "systemsManager",
                                            "camera",
                                            "cellularGateway"
                                        ]
                                    },
                                    "description": "The product type(s) of the new network. Valid types are wireless, appliance, switch, systemsManager, camera, cellularGateway. If more than one type is included, the network will be a combined network.",
                                    "required": true
                                },
                                "tags": {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    },
                                    "description": "A list of tags to be applied to the network"
                                },
                                "timeZone": {
                                    "type": "string",
                                    "description": "The timezone of the network. For a list of allowed timezones, please see the 'TZ' column in the table in <a target='_blank' href='https://en.wikipedia.org/wiki/List_of_tz_database_time_zones'>this article.</a>"
                                },
                                "copyFromNetworkId": {
                                    "type": "string",
                                    "description": "The ID of the network to copy configuration from. Other provided parameters will override the copied configuration, except type which must match this network's type exactly."
                                }
                            },
                            "example": {
                                "name": "Long Island Office",
                                "timeZone": "America/Los_Angeles",
                                "tags": [
                                    "tag1",
                                    "tag2"
                                ],
                                "productTypes": [
                                    "appliance",
                                    "switch",
                                    "camera"
                                ]
                            }
                        },
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "object"
                        },
                        "examples": {
                            "application/json": {
                                "id": "L_123456",
                                "organizationId": "2930418",
                                "name": "Long Island Office",
                                "timeZone": "America/Los_Angeles",
                                "tags": [
                                    "tag1",
                                    "tag2"
                                ],
                                "productTypes": [
                                    "appliance",
                                    "switch",
                                    "wireless"
                                ],
                                "enrollmentString": "long-island-office"
                            }
                        }
                    }
                },
                "summary": "Create a network",
                "tags": [
                    "organizations",
                    "configure",
                    "networks"
                ]
            },
            "docUrl": "https://developer.cisco.com/meraki/api/#/rest/api-endpoints/organizations/create-organization-network"
        },
        {
            "ruleId": "delete-object-property",
            "message": "`paths//organizations/{organizationId}/networks/post/parameters/createOrganizationNetwork/schema` - Property `disableRemoteStatusPage` Deleted",
            "messageHtml": "Property <code>disableRemoteStatusPage</code> Deleted",
            "path": "/organizations/{organizationId}/networks",
            "method": "post",
            "objectPath": "paths//organizations/{organizationId}/networks/post/parameters/createOrganizationNetwork/schema",
            "property": "disableRemoteStatusPage",
            "type": "infos",
            "name": "What's Updated",
            "group": "organizations",
            "apiDetails": {
                "description": "Create a network",
                "operationId": "createOrganizationNetwork",
                "parameters": [{
                        "name": "organizationId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "createOrganizationNetwork",
                        "in": "body",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "description": "The name of the new network",
                                    "required": true
                                },
                                "productTypes": {
                                    "type": "array",
                                    "items": {
                                        "type": "string",
                                        "enum": [
                                            "wireless",
                                            "appliance",
                                            "switch",
                                            "systemsManager",
                                            "camera",
                                            "cellularGateway"
                                        ]
                                    },
                                    "description": "The product type(s) of the new network. Valid types are wireless, appliance, switch, systemsManager, camera, cellularGateway. If more than one type is included, the network will be a combined network.",
                                    "required": true
                                },
                                "tags": {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    },
                                    "description": "A list of tags to be applied to the network"
                                },
                                "timeZone": {
                                    "type": "string",
                                    "description": "The timezone of the network. For a list of allowed timezones, please see the 'TZ' column in the table in <a target='_blank' href='https://en.wikipedia.org/wiki/List_of_tz_database_time_zones'>this article.</a>"
                                },
                                "copyFromNetworkId": {
                                    "type": "string",
                                    "description": "The ID of the network to copy configuration from. Other provided parameters will override the copied configuration, except type which must match this network's type exactly."
                                }
                            },
                            "example": {
                                "name": "Long Island Office",
                                "timeZone": "America/Los_Angeles",
                                "tags": [
                                    "tag1",
                                    "tag2"
                                ],
                                "productTypes": [
                                    "appliance",
                                    "switch",
                                    "camera"
                                ]
                            }
                        },
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "object"
                        },
                        "examples": {
                            "application/json": {
                                "id": "L_123456",
                                "organizationId": "2930418",
                                "name": "Long Island Office",
                                "timeZone": "America/Los_Angeles",
                                "tags": [
                                    "tag1",
                                    "tag2"
                                ],
                                "productTypes": [
                                    "appliance",
                                    "switch",
                                    "wireless"
                                ],
                                "enrollmentString": "long-island-office"
                            }
                        }
                    }
                },
                "summary": "Create a network",
                "tags": [
                    "organizations",
                    "configure",
                    "networks"
                ]
            },
            "docUrl": "https://developer.cisco.com/meraki/api/#/rest/api-endpoints/organizations/create-organization-network"
        },
        {
            "ruleId": "add-path",
            "message": "`/devices/{serial}/appliance/dhcp/subnets` - Added",
            "messageHtml": "Path added   <br>\n      <br>\n      - New endpoint\n      <h4>Return the DHCP subnet information for an appliance</h4>\n      <p>   \n      <b class=\"mr-4 badge get\">GET</b>  <code>/devices/{serial}/appliance/dhcp/subnets</code>\n      <br>  \n      <pre><code>[\n    {\n        &quot;subnet&quot;: &quot;192.168.1.0/24&quot;,\n        &quot;vlanId&quot;: 100,\n        &quot;usedCount&quot;: 2,\n        &quot;freeCount&quot;: 251\n    }\n]</code></pre>\n      </p>\n      <hr>\n      ",
            "path": "/devices/{serial}/appliance/dhcp/subnets",
            "details": {
                "get": {
                    "description": "Return the DHCP subnet information for an appliance",
                    "operationId": "getDeviceApplianceDhcpSubnets",
                    "parameters": {
                        "serial": {
                            "name": "serial",
                            "in": "path",
                            "type": "string",
                            "required": true
                        }
                    },
                    "responses": {
                        "200": {
                            "description": "Successful operation",
                            "examples": {
                                "application/json": [{
                                    "subnet": "192.168.1.0/24",
                                    "vlanId": 100,
                                    "usedCount": 2,
                                    "freeCount": 251
                                }]
                            }
                        }
                    },
                    "summary": "Return the DHCP subnet information for an appliance",
                    "tags": [
                        "appliance",
                        "monitor",
                        "dhcp",
                        "subnets"
                    ],
                    "consumes": [
                        "application/json"
                    ],
                    "produces": [
                        "application/json"
                    ],
                    "schemes": [
                        "https"
                    ],
                    "security": [{
                        "meraki_api_key": []
                    }]
                }
            },
            "type": "infos",
            "name": "What's Updated",
            "group": "appliance",
            "apiDetails": {
                "get": {
                    "description": "Return the DHCP subnet information for an appliance",
                    "operationId": "getDeviceApplianceDhcpSubnets",
                    "parameters": [{
                        "name": "serial",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }],
                    "responses": {
                        "200": {
                            "description": "Successful operation",
                            "examples": {
                                "application/json": [{
                                    "subnet": "192.168.1.0/24",
                                    "vlanId": 100,
                                    "usedCount": 2,
                                    "freeCount": 251
                                }]
                            }
                        }
                    },
                    "summary": "Return the DHCP subnet information for an appliance",
                    "tags": [
                        "appliance",
                        "monitor",
                        "dhcp",
                        "subnets"
                    ]
                }
            }
        },
        {
            "ruleId": "add-path",
            "message": "`/devices/{serial}/camera/sense` - Added",
            "messageHtml": "Path added   <br>\n      <br>\n      - New endpoint\n      <h4>Returns sense settings for a given camera</h4>\n      <p>   \n      <b class=\"mr-4 badge get\">GET</b>  <code>/devices/{serial}/camera/sense</code>\n      <br>  \n      <pre><code>{\n    &quot;senseEnabled&quot;: true,\n    &quot;mqttBrokerId&quot;: &quot;1234&quot;,\n    &quot;mqttTopics&quot;: [\n        &quot;/merakimv/Q2AA-AAAA-1111/raw_detections&quot;,\n        &quot;/merakimv/Q2AA-AAAA-1111/light&quot;\n    ]\n}</code></pre>\n      </p>\n      <hr>\n      \n      <br>\n      - New endpoint\n      <h4>Update sense settings for the given camera</h4>\n      <p>   \n      <b class=\"mr-4 badge put\">PUT</b>  <code>/devices/{serial}/camera/sense</code>\n      <br>  \n      <pre><code>{\n    &quot;senseEnabled&quot;: true,\n    &quot;mqttBrokerId&quot;: &quot;1234&quot;,\n    &quot;mqttTopics&quot;: [\n        &quot;/merakimv/Q2AA-AAAA-1111/raw_detections&quot;,\n        &quot;/merakimv/Q2AA-AAAA-1111/light&quot;\n    ]\n}</code></pre>\n      </p>\n      <hr>\n      ",
            "path": "/devices/{serial}/camera/sense",
            "details": {
                "get": {
                    "description": "Returns sense settings for a given camera",
                    "operationId": "getDeviceCameraSense",
                    "parameters": {
                        "serial": {
                            "name": "serial",
                            "in": "path",
                            "type": "string",
                            "required": true
                        }
                    },
                    "responses": {
                        "200": {
                            "description": "Successful operation",
                            "examples": {
                                "application/json": {
                                    "senseEnabled": true,
                                    "mqttBrokerId": "1234",
                                    "mqttTopics": [
                                        "/merakimv/Q2AA-AAAA-1111/raw_detections",
                                        "/merakimv/Q2AA-AAAA-1111/light"
                                    ]
                                }
                            }
                        }
                    },
                    "summary": "Returns sense settings for a given camera",
                    "tags": [
                        "camera",
                        "configure",
                        "sense"
                    ],
                    "consumes": [
                        "application/json"
                    ],
                    "produces": [
                        "application/json"
                    ],
                    "schemes": [
                        "https"
                    ],
                    "security": [{
                        "meraki_api_key": []
                    }]
                },
                "put": {
                    "description": "Update sense settings for the given camera",
                    "operationId": "updateDeviceCameraSense",
                    "parameters": {
                        "serial": {
                            "name": "serial",
                            "in": "path",
                            "type": "string",
                            "required": true
                        },
                        "updateDeviceCameraSense": {
                            "name": "updateDeviceCameraSense",
                            "in": "body",
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "senseEnabled": {
                                        "type": "boolean",
                                        "description": "Boolean indicating if sense(license) is enabled(true) or disabled(false) on the camera"
                                    },
                                    "mqttBrokerId": {
                                        "type": "string",
                                        "description": "The ID of the MQTT broker to be enabled on the camera. A value of null will disable MQTT on the camera"
                                    },
                                    "detectionModelId": {
                                        "type": "string",
                                        "description": "The ID of the object detection model"
                                    }
                                },
                                "example": {
                                    "senseEnabled": true,
                                    "mqttBrokerId": "1234"
                                }
                            }
                        }
                    },
                    "responses": {
                        "200": {
                            "description": "Successful operation",
                            "examples": {
                                "application/json": {
                                    "senseEnabled": true,
                                    "mqttBrokerId": "1234",
                                    "mqttTopics": [
                                        "/merakimv/Q2AA-AAAA-1111/raw_detections",
                                        "/merakimv/Q2AA-AAAA-1111/light"
                                    ]
                                }
                            }
                        }
                    },
                    "summary": "Update sense settings for the given camera",
                    "tags": [
                        "camera",
                        "configure",
                        "sense"
                    ],
                    "consumes": [
                        "application/json"
                    ],
                    "produces": [
                        "application/json"
                    ],
                    "schemes": [
                        "https"
                    ],
                    "security": [{
                        "meraki_api_key": []
                    }]
                }
            },
            "type": "infos",
            "name": "What's Updated",
            "group": "camera",
            "apiDetails": {
                "get": {
                    "description": "Returns sense settings for a given camera",
                    "operationId": "getDeviceCameraSense",
                    "parameters": [{
                        "name": "serial",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }],
                    "responses": {
                        "200": {
                            "description": "Successful operation",
                            "examples": {
                                "application/json": {
                                    "senseEnabled": true,
                                    "mqttBrokerId": "1234",
                                    "mqttTopics": [
                                        "/merakimv/Q2AA-AAAA-1111/raw_detections",
                                        "/merakimv/Q2AA-AAAA-1111/light"
                                    ]
                                }
                            }
                        }
                    },
                    "summary": "Returns sense settings for a given camera",
                    "tags": [
                        "camera",
                        "configure",
                        "sense"
                    ]
                },
                "put": {
                    "description": "Update sense settings for the given camera",
                    "operationId": "updateDeviceCameraSense",
                    "parameters": [{
                            "name": "serial",
                            "in": "path",
                            "type": "string",
                            "required": true
                        },
                        {
                            "name": "updateDeviceCameraSense",
                            "in": "body",
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "senseEnabled": {
                                        "type": "boolean",
                                        "description": "Boolean indicating if sense(license) is enabled(true) or disabled(false) on the camera"
                                    },
                                    "mqttBrokerId": {
                                        "type": "string",
                                        "description": "The ID of the MQTT broker to be enabled on the camera. A value of null will disable MQTT on the camera"
                                    },
                                    "detectionModelId": {
                                        "type": "string",
                                        "description": "The ID of the object detection model"
                                    }
                                },
                                "example": {
                                    "senseEnabled": true,
                                    "mqttBrokerId": "1234"
                                }
                            }
                        }
                    ],
                    "responses": {
                        "200": {
                            "description": "Successful operation",
                            "examples": {
                                "application/json": {
                                    "senseEnabled": true,
                                    "mqttBrokerId": "1234",
                                    "mqttTopics": [
                                        "/merakimv/Q2AA-AAAA-1111/raw_detections",
                                        "/merakimv/Q2AA-AAAA-1111/light"
                                    ]
                                }
                            }
                        }
                    },
                    "summary": "Update sense settings for the given camera",
                    "tags": [
                        "camera",
                        "configure",
                        "sense"
                    ]
                }
            }
        },
        {
            "ruleId": "add-path",
            "message": "`/devices/{serial}/camera/sense/objectDetectionModels` - Added",
            "messageHtml": "Path added   <br>\n      <br>\n      - New endpoint\n      <h4>Returns the MV Sense object detection model list for the given camera</h4>\n      <p>   \n      <b class=\"mr-4 badge get\">GET</b>  <code>/devices/{serial}/camera/sense/objectDetectionModels</code>\n      <br>  \n      <pre><code>[\n    {\n        &quot;id&quot;: &quot;0&quot;,\n        &quot;description&quot;: &quot;Model A&quot;\n    }\n]</code></pre>\n      </p>\n      <hr>\n      ",
            "path": "/devices/{serial}/camera/sense/objectDetectionModels",
            "details": {
                "get": {
                    "description": "Returns the MV Sense object detection model list for the given camera",
                    "operationId": "getDeviceCameraSenseObjectDetectionModels",
                    "parameters": {
                        "serial": {
                            "name": "serial",
                            "in": "path",
                            "type": "string",
                            "required": true
                        }
                    },
                    "responses": {
                        "200": {
                            "description": "Successful operation",
                            "examples": {
                                "application/json": [{
                                    "id": "0",
                                    "description": "Model A"
                                }]
                            }
                        }
                    },
                    "summary": "Returns the MV Sense object detection model list for the given camera",
                    "tags": [
                        "camera",
                        "configure",
                        "sense",
                        "objectDetectionModels"
                    ],
                    "consumes": [
                        "application/json"
                    ],
                    "produces": [
                        "application/json"
                    ],
                    "schemes": [
                        "https"
                    ],
                    "security": [{
                        "meraki_api_key": []
                    }]
                }
            },
            "type": "infos",
            "name": "What's Updated",
            "group": "camera",
            "apiDetails": {
                "get": {
                    "description": "Returns the MV Sense object detection model list for the given camera",
                    "operationId": "getDeviceCameraSenseObjectDetectionModels",
                    "parameters": [{
                        "name": "serial",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }],
                    "responses": {
                        "200": {
                            "description": "Successful operation",
                            "examples": {
                                "application/json": [{
                                    "id": "0",
                                    "description": "Model A"
                                }]
                            }
                        }
                    },
                    "summary": "Returns the MV Sense object detection model list for the given camera",
                    "tags": [
                        "camera",
                        "configure",
                        "sense",
                        "objectDetectionModels"
                    ]
                }
            }
        },
        {
            "ruleId": "add-path",
            "message": "`/devices/{serial}/switch/routing/interfaces` - Added",
            "messageHtml": "Path added   <br>\n      <br>\n      - New endpoint\n      <h4>List layer 3 interfaces for a switch</h4>\n      <p>   \n      <b class=\"mr-4 badge get\">GET</b>  <code>/devices/{serial}/switch/routing/interfaces</code>\n      <br>  \n      <pre><code>[\n    {\n        &quot;interfaceId&quot;: &quot;1234&quot;,\n        &quot;name&quot;: &quot;L3 interface&quot;,\n        &quot;subnet&quot;: &quot;192.168.1.0/24&quot;,\n        &quot;interfaceIp&quot;: &quot;192.168.1.2&quot;,\n        &quot;multicastRouting&quot;: &quot;disabled&quot;,\n        &quot;vlanId&quot;: 100,\n        &quot;defaultGateway&quot;: &quot;192.168.1.1&quot;,\n        &quot;ospfSettings&quot;: {\n            &quot;area&quot;: &quot;0&quot;,\n            &quot;cost&quot;: 1,\n            &quot;isPassiveEnabled&quot;: true\n        }\n    }\n]</code></pre>\n      </p>\n      <hr>\n      \n      <br>\n      - New endpoint\n      <h4>Create a layer 3 interface for a switch</h4>\n      <p>   \n      <b class=\"mr-4 badge post\">POST</b>  <code>/devices/{serial}/switch/routing/interfaces</code>\n      <br>  \n      <pre><code>{\n    &quot;interfaceId&quot;: &quot;1234&quot;,\n    &quot;name&quot;: &quot;L3 interface&quot;,\n    &quot;subnet&quot;: &quot;192.168.1.0/24&quot;,\n    &quot;interfaceIp&quot;: &quot;192.168.1.2&quot;,\n    &quot;multicastRouting&quot;: &quot;disabled&quot;,\n    &quot;vlanId&quot;: 100,\n    &quot;defaultGateway&quot;: &quot;192.168.1.1&quot;,\n    &quot;ospfSettings&quot;: {\n        &quot;area&quot;: &quot;0&quot;,\n        &quot;cost&quot;: 1,\n        &quot;isPassiveEnabled&quot;: true\n    }\n}</code></pre>\n      </p>\n      <hr>\n      ",
            "path": "/devices/{serial}/switch/routing/interfaces",
            "details": {
                "get": {
                    "description": "List layer 3 interfaces for a switch",
                    "operationId": "getDeviceSwitchRoutingInterfaces",
                    "parameters": {
                        "serial": {
                            "name": "serial",
                            "in": "path",
                            "type": "string",
                            "required": true
                        }
                    },
                    "responses": {
                        "200": {
                            "description": "Successful operation",
                            "examples": {
                                "application/json": [{
                                    "interfaceId": "1234",
                                    "name": "L3 interface",
                                    "subnet": "192.168.1.0/24",
                                    "interfaceIp": "192.168.1.2",
                                    "multicastRouting": "disabled",
                                    "vlanId": 100,
                                    "defaultGateway": "192.168.1.1",
                                    "ospfSettings": {
                                        "area": "0",
                                        "cost": 1,
                                        "isPassiveEnabled": true
                                    }
                                }]
                            }
                        }
                    },
                    "summary": "List layer 3 interfaces for a switch",
                    "tags": [
                        "switch",
                        "configure",
                        "routing",
                        "interfaces"
                    ],
                    "consumes": [
                        "application/json"
                    ],
                    "produces": [
                        "application/json"
                    ],
                    "schemes": [
                        "https"
                    ],
                    "security": [{
                        "meraki_api_key": []
                    }]
                },
                "post": {
                    "description": "Create a layer 3 interface for a switch",
                    "operationId": "createDeviceSwitchRoutingInterface",
                    "parameters": {
                        "serial": {
                            "name": "serial",
                            "in": "path",
                            "type": "string",
                            "required": true
                        },
                        "createDeviceSwitchRoutingInterface": {
                            "name": "createDeviceSwitchRoutingInterface",
                            "in": "body",
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "description": "A friendly name or description for the interface or VLAN.",
                                        "required": true
                                    },
                                    "subnet": {
                                        "type": "string",
                                        "description": "The network that this routed interface is on, in CIDR notation (ex. 10.1.1.0/24)."
                                    },
                                    "interfaceIp": {
                                        "type": "string",
                                        "description": "The IP address this switch will use for layer 3 routing on this VLAN or subnet. This cannot be the same as the switch's management IP.",
                                        "required": true
                                    },
                                    "multicastRouting": {
                                        "type": "string",
                                        "enum": [
                                            "disabled",
                                            "enabled",
                                            "IGMP snooping querier"
                                        ],
                                        "description": "Enable multicast support if, multicast routing between VLANs is required. Options are, 'disabled', 'enabled' or 'IGMP snooping querier'. Default is 'disabled'."
                                    },
                                    "vlanId": {
                                        "type": "integer",
                                        "description": "The VLAN this routed interface is on. VLAN must be between 1 and 4094.",
                                        "required": true
                                    },
                                    "defaultGateway": {
                                        "type": "string",
                                        "description": "The next hop for any traffic that isn't going to a directly connected subnet or over a static route. This IP address must exist in a subnet with a routed interface."
                                    },
                                    "ospfSettings": {
                                        "type": "object",
                                        "properties": {
                                            "area": {
                                                "type": "string",
                                                "description": "The OSPF area to which this interface should belong. Can be either 'disabled' or the identifier of an existing OSPF area. Defaults to 'disabled'."
                                            },
                                            "cost": {
                                                "type": "integer",
                                                "description": "The path cost for this interface. Defaults to 1, but can be increased up to 65535 to give lower priority."
                                            },
                                            "isPassiveEnabled": {
                                                "type": "boolean",
                                                "description": "When enabled, OSPF will not run on the interface, but the subnet will still be advertised."
                                            }
                                        },
                                        "description": "The OSPF routing settings of the interface."
                                    }
                                },
                                "example": {
                                    "name": "L3 interface",
                                    "subnet": "192.168.1.0/24",
                                    "interfaceIp": "192.168.1.2",
                                    "multicastRouting": "disabled",
                                    "vlanId": 100,
                                    "defaultGateway": "192.168.1.1",
                                    "ospfSettings": {
                                        "area": "0",
                                        "cost": 1,
                                        "isPassiveEnabled": true
                                    }
                                }
                            },
                            "required": true
                        }
                    },
                    "responses": {
                        "201": {
                            "description": "Successful operation",
                            "examples": {
                                "application/json": {
                                    "interfaceId": "1234",
                                    "name": "L3 interface",
                                    "subnet": "192.168.1.0/24",
                                    "interfaceIp": "192.168.1.2",
                                    "multicastRouting": "disabled",
                                    "vlanId": 100,
                                    "defaultGateway": "192.168.1.1",
                                    "ospfSettings": {
                                        "area": "0",
                                        "cost": 1,
                                        "isPassiveEnabled": true
                                    }
                                }
                            }
                        }
                    },
                    "summary": "Create a layer 3 interface for a switch",
                    "tags": [
                        "switch",
                        "configure",
                        "routing",
                        "interfaces"
                    ],
                    "consumes": [
                        "application/json"
                    ],
                    "produces": [
                        "application/json"
                    ],
                    "schemes": [
                        "https"
                    ],
                    "security": [{
                        "meraki_api_key": []
                    }]
                }
            },
            "type": "infos",
            "name": "What's Updated",
            "group": "switch",
            "apiDetails": {
                "get": {
                    "description": "List layer 3 interfaces for a switch",
                    "operationId": "getDeviceSwitchRoutingInterfaces",
                    "parameters": [{
                        "name": "serial",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }],
                    "responses": {
                        "200": {
                            "description": "Successful operation",
                            "examples": {
                                "application/json": [{
                                    "interfaceId": "1234",
                                    "name": "L3 interface",
                                    "subnet": "192.168.1.0/24",
                                    "interfaceIp": "192.168.1.2",
                                    "multicastRouting": "disabled",
                                    "vlanId": 100,
                                    "defaultGateway": "192.168.1.1",
                                    "ospfSettings": {
                                        "area": "0",
                                        "cost": 1,
                                        "isPassiveEnabled": true
                                    }
                                }]
                            }
                        }
                    },
                    "summary": "List layer 3 interfaces for a switch",
                    "tags": [
                        "switch",
                        "configure",
                        "routing",
                        "interfaces"
                    ]
                },
                "post": {
                    "description": "Create a layer 3 interface for a switch",
                    "operationId": "createDeviceSwitchRoutingInterface",
                    "parameters": [{
                            "name": "serial",
                            "in": "path",
                            "type": "string",
                            "required": true
                        },
                        {
                            "name": "createDeviceSwitchRoutingInterface",
                            "in": "body",
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "description": "A friendly name or description for the interface or VLAN.",
                                        "required": true
                                    },
                                    "subnet": {
                                        "type": "string",
                                        "description": "The network that this routed interface is on, in CIDR notation (ex. 10.1.1.0/24)."
                                    },
                                    "interfaceIp": {
                                        "type": "string",
                                        "description": "The IP address this switch will use for layer 3 routing on this VLAN or subnet. This cannot be the same as the switch's management IP.",
                                        "required": true
                                    },
                                    "multicastRouting": {
                                        "type": "string",
                                        "enum": [
                                            "disabled",
                                            "enabled",
                                            "IGMP snooping querier"
                                        ],
                                        "description": "Enable multicast support if, multicast routing between VLANs is required. Options are, 'disabled', 'enabled' or 'IGMP snooping querier'. Default is 'disabled'."
                                    },
                                    "vlanId": {
                                        "type": "integer",
                                        "description": "The VLAN this routed interface is on. VLAN must be between 1 and 4094.",
                                        "required": true
                                    },
                                    "defaultGateway": {
                                        "type": "string",
                                        "description": "The next hop for any traffic that isn't going to a directly connected subnet or over a static route. This IP address must exist in a subnet with a routed interface."
                                    },
                                    "ospfSettings": {
                                        "type": "object",
                                        "properties": {
                                            "area": {
                                                "type": "string",
                                                "description": "The OSPF area to which this interface should belong. Can be either 'disabled' or the identifier of an existing OSPF area. Defaults to 'disabled'."
                                            },
                                            "cost": {
                                                "type": "integer",
                                                "description": "The path cost for this interface. Defaults to 1, but can be increased up to 65535 to give lower priority."
                                            },
                                            "isPassiveEnabled": {
                                                "type": "boolean",
                                                "description": "When enabled, OSPF will not run on the interface, but the subnet will still be advertised."
                                            }
                                        },
                                        "description": "The OSPF routing settings of the interface."
                                    }
                                },
                                "example": {
                                    "name": "L3 interface",
                                    "subnet": "192.168.1.0/24",
                                    "interfaceIp": "192.168.1.2",
                                    "multicastRouting": "disabled",
                                    "vlanId": 100,
                                    "defaultGateway": "192.168.1.1",
                                    "ospfSettings": {
                                        "area": "0",
                                        "cost": 1,
                                        "isPassiveEnabled": true
                                    }
                                }
                            },
                            "required": true
                        }
                    ],
                    "responses": {
                        "201": {
                            "description": "Successful operation",
                            "examples": {
                                "application/json": {
                                    "interfaceId": "1234",
                                    "name": "L3 interface",
                                    "subnet": "192.168.1.0/24",
                                    "interfaceIp": "192.168.1.2",
                                    "multicastRouting": "disabled",
                                    "vlanId": 100,
                                    "defaultGateway": "192.168.1.1",
                                    "ospfSettings": {
                                        "area": "0",
                                        "cost": 1,
                                        "isPassiveEnabled": true
                                    }
                                }
                            }
                        }
                    },
                    "summary": "Create a layer 3 interface for a switch",
                    "tags": [
                        "switch",
                        "configure",
                        "routing",
                        "interfaces"
                    ]
                }
            }
        },
        {
            "ruleId": "add-path",
            "message": "`/devices/{serial}/switch/routing/interfaces/{interfaceId}` - Added",
            "messageHtml": "Path added   <br>\n      <br>\n      - New endpoint\n      <h4>Return a layer 3 interface for a switch</h4>\n      <p>   \n      <b class=\"mr-4 badge get\">GET</b>  <code>/devices/{serial}/switch/routing/interfaces/{interfaceId}</code>\n      <br>  \n      <pre><code>{\n    &quot;interfaceId&quot;: &quot;1234&quot;,\n    &quot;name&quot;: &quot;L3 interface&quot;,\n    &quot;subnet&quot;: &quot;192.168.1.0/24&quot;,\n    &quot;interfaceIp&quot;: &quot;192.168.1.2&quot;,\n    &quot;multicastRouting&quot;: &quot;disabled&quot;,\n    &quot;vlanId&quot;: 100,\n    &quot;defaultGateway&quot;: &quot;192.168.1.1&quot;,\n    &quot;ospfSettings&quot;: {\n        &quot;area&quot;: &quot;0&quot;,\n        &quot;cost&quot;: 1,\n        &quot;isPassiveEnabled&quot;: true\n    }\n}</code></pre>\n      </p>\n      <hr>\n      \n      <br>\n      - New endpoint\n      <h4>Update a layer 3 interface for a switch</h4>\n      <p>   \n      <b class=\"mr-4 badge put\">PUT</b>  <code>/devices/{serial}/switch/routing/interfaces/{interfaceId}</code>\n      <br>  \n      <pre><code>{\n    &quot;interfaceId&quot;: &quot;1234&quot;,\n    &quot;name&quot;: &quot;L3 interface&quot;,\n    &quot;subnet&quot;: &quot;192.168.1.0/24&quot;,\n    &quot;interfaceIp&quot;: &quot;192.168.1.2&quot;,\n    &quot;multicastRouting&quot;: &quot;disabled&quot;,\n    &quot;vlanId&quot;: 100,\n    &quot;ospfSettings&quot;: {\n        &quot;area&quot;: &quot;0&quot;,\n        &quot;cost&quot;: 1,\n        &quot;isPassiveEnabled&quot;: true\n    }\n}</code></pre>\n      </p>\n      <hr>\n      \n      <br>\n      - New endpoint\n      <h4>Delete a layer 3 interface from the switch</h4>\n      <p>   \n      <b class=\"mr-4 badge delete\">DELETE</b>  <code>/devices/{serial}/switch/routing/interfaces/{interfaceId}</code>\n      <br>  \n      <pre><code></code></pre>\n      </p>\n      <hr>\n      ",
            "path": "/devices/{serial}/switch/routing/interfaces/{interfaceId}",
            "details": {
                "get": {
                    "description": "Return a layer 3 interface for a switch",
                    "operationId": "getDeviceSwitchRoutingInterface",
                    "parameters": {
                        "serial": {
                            "name": "serial",
                            "in": "path",
                            "type": "string",
                            "required": true
                        },
                        "interfaceId": {
                            "name": "interfaceId",
                            "in": "path",
                            "type": "string",
                            "required": true
                        }
                    },
                    "responses": {
                        "200": {
                            "description": "Successful operation",
                            "examples": {
                                "application/json": {
                                    "interfaceId": "1234",
                                    "name": "L3 interface",
                                    "subnet": "192.168.1.0/24",
                                    "interfaceIp": "192.168.1.2",
                                    "multicastRouting": "disabled",
                                    "vlanId": 100,
                                    "defaultGateway": "192.168.1.1",
                                    "ospfSettings": {
                                        "area": "0",
                                        "cost": 1,
                                        "isPassiveEnabled": true
                                    }
                                }
                            }
                        }
                    },
                    "summary": "Return a layer 3 interface for a switch",
                    "tags": [
                        "switch",
                        "configure",
                        "routing",
                        "interfaces"
                    ],
                    "consumes": [
                        "application/json"
                    ],
                    "produces": [
                        "application/json"
                    ],
                    "schemes": [
                        "https"
                    ],
                    "security": [{
                        "meraki_api_key": []
                    }]
                },
                "put": {
                    "description": "Update a layer 3 interface for a switch",
                    "operationId": "updateDeviceSwitchRoutingInterface",
                    "parameters": {
                        "serial": {
                            "name": "serial",
                            "in": "path",
                            "type": "string",
                            "required": true
                        },
                        "interfaceId": {
                            "name": "interfaceId",
                            "in": "path",
                            "type": "string",
                            "required": true
                        },
                        "updateDeviceSwitchRoutingInterface": {
                            "name": "updateDeviceSwitchRoutingInterface",
                            "in": "body",
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "description": "A friendly name or description for the interface or VLAN."
                                    },
                                    "subnet": {
                                        "type": "string",
                                        "description": "The network that this routed interface is on, in CIDR notation (ex. 10.1.1.0/24)."
                                    },
                                    "interfaceIp": {
                                        "type": "string",
                                        "description": "The IP address this switch will use for layer 3 routing on this VLAN or subnet. This cannot be the same as the switch's management IP."
                                    },
                                    "multicastRouting": {
                                        "type": "string",
                                        "enum": [
                                            "disabled",
                                            "enabled",
                                            "IGMP snooping querier"
                                        ],
                                        "description": "Enable multicast support if, multicast routing between VLANs is required. Options are, 'disabled', 'enabled' or 'IGMP snooping querier'."
                                    },
                                    "vlanId": {
                                        "type": "integer",
                                        "description": "The VLAN this routed interface is on. VLAN must be between 1 and 4094."
                                    },
                                    "ospfSettings": {
                                        "type": "object",
                                        "properties": {
                                            "area": {
                                                "type": "string",
                                                "description": "The OSPF area to which this interface should belong. Can be either 'disabled' or the identifier of an existing OSPF area."
                                            },
                                            "cost": {
                                                "type": "integer",
                                                "description": "The path cost for this interface. Defaults to 1, but can be increased up to 65535 to give lower priority."
                                            },
                                            "isPassiveEnabled": {
                                                "type": "boolean",
                                                "description": "When enabled, OSPF will not run on the interface, but the subnet will still be advertised."
                                            }
                                        },
                                        "description": "The OSPF routing settings of the interface."
                                    }
                                },
                                "example": {
                                    "name": "L3 interface",
                                    "subnet": "192.168.1.0/24",
                                    "interfaceIp": "192.168.1.2",
                                    "multicastRouting": "disabled",
                                    "vlanId": 100,
                                    "ospfSettings": {
                                        "area": "0",
                                        "cost": 1,
                                        "isPassiveEnabled": true
                                    }
                                }
                            }
                        }
                    },
                    "responses": {
                        "200": {
                            "description": "Successful operation",
                            "examples": {
                                "application/json": {
                                    "interfaceId": "1234",
                                    "name": "L3 interface",
                                    "subnet": "192.168.1.0/24",
                                    "interfaceIp": "192.168.1.2",
                                    "multicastRouting": "disabled",
                                    "vlanId": 100,
                                    "ospfSettings": {
                                        "area": "0",
                                        "cost": 1,
                                        "isPassiveEnabled": true
                                    }
                                }
                            }
                        }
                    },
                    "summary": "Update a layer 3 interface for a switch",
                    "tags": [
                        "switch",
                        "configure",
                        "routing",
                        "interfaces"
                    ],
                    "consumes": [
                        "application/json"
                    ],
                    "produces": [
                        "application/json"
                    ],
                    "schemes": [
                        "https"
                    ],
                    "security": [{
                        "meraki_api_key": []
                    }]
                },
                "delete": {
                    "description": "Delete a layer 3 interface from the switch",
                    "operationId": "deleteDeviceSwitchRoutingInterface",
                    "parameters": {
                        "serial": {
                            "name": "serial",
                            "in": "path",
                            "type": "string",
                            "required": true
                        },
                        "interfaceId": {
                            "name": "interfaceId",
                            "in": "path",
                            "type": "string",
                            "required": true
                        }
                    },
                    "responses": {
                        "204": {
                            "description": "Successful operation"
                        }
                    },
                    "summary": "Delete a layer 3 interface from the switch",
                    "tags": [
                        "switch",
                        "configure",
                        "routing",
                        "interfaces"
                    ],
                    "consumes": [
                        "application/json"
                    ],
                    "produces": [
                        "application/json"
                    ],
                    "schemes": [
                        "https"
                    ],
                    "security": [{
                        "meraki_api_key": []
                    }]
                }
            },
            "type": "infos",
            "name": "What's Updated",
            "group": "switch",
            "apiDetails": {
                "get": {
                    "description": "Return a layer 3 interface for a switch",
                    "operationId": "getDeviceSwitchRoutingInterface",
                    "parameters": [{
                            "name": "serial",
                            "in": "path",
                            "type": "string",
                            "required": true
                        },
                        {
                            "name": "interfaceId",
                            "in": "path",
                            "type": "string",
                            "required": true
                        }
                    ],
                    "responses": {
                        "200": {
                            "description": "Successful operation",
                            "examples": {
                                "application/json": {
                                    "interfaceId": "1234",
                                    "name": "L3 interface",
                                    "subnet": "192.168.1.0/24",
                                    "interfaceIp": "192.168.1.2",
                                    "multicastRouting": "disabled",
                                    "vlanId": 100,
                                    "defaultGateway": "192.168.1.1",
                                    "ospfSettings": {
                                        "area": "0",
                                        "cost": 1,
                                        "isPassiveEnabled": true
                                    }
                                }
                            }
                        }
                    },
                    "summary": "Return a layer 3 interface for a switch",
                    "tags": [
                        "switch",
                        "configure",
                        "routing",
                        "interfaces"
                    ]
                },
                "put": {
                    "description": "Update a layer 3 interface for a switch",
                    "operationId": "updateDeviceSwitchRoutingInterface",
                    "parameters": [{
                            "name": "serial",
                            "in": "path",
                            "type": "string",
                            "required": true
                        },
                        {
                            "name": "interfaceId",
                            "in": "path",
                            "type": "string",
                            "required": true
                        },
                        {
                            "name": "updateDeviceSwitchRoutingInterface",
                            "in": "body",
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "description": "A friendly name or description for the interface or VLAN."
                                    },
                                    "subnet": {
                                        "type": "string",
                                        "description": "The network that this routed interface is on, in CIDR notation (ex. 10.1.1.0/24)."
                                    },
                                    "interfaceIp": {
                                        "type": "string",
                                        "description": "The IP address this switch will use for layer 3 routing on this VLAN or subnet. This cannot be the same as the switch's management IP."
                                    },
                                    "multicastRouting": {
                                        "type": "string",
                                        "enum": [
                                            "disabled",
                                            "enabled",
                                            "IGMP snooping querier"
                                        ],
                                        "description": "Enable multicast support if, multicast routing between VLANs is required. Options are, 'disabled', 'enabled' or 'IGMP snooping querier'."
                                    },
                                    "vlanId": {
                                        "type": "integer",
                                        "description": "The VLAN this routed interface is on. VLAN must be between 1 and 4094."
                                    },
                                    "ospfSettings": {
                                        "type": "object",
                                        "properties": {
                                            "area": {
                                                "type": "string",
                                                "description": "The OSPF area to which this interface should belong. Can be either 'disabled' or the identifier of an existing OSPF area."
                                            },
                                            "cost": {
                                                "type": "integer",
                                                "description": "The path cost for this interface. Defaults to 1, but can be increased up to 65535 to give lower priority."
                                            },
                                            "isPassiveEnabled": {
                                                "type": "boolean",
                                                "description": "When enabled, OSPF will not run on the interface, but the subnet will still be advertised."
                                            }
                                        },
                                        "description": "The OSPF routing settings of the interface."
                                    }
                                },
                                "example": {
                                    "name": "L3 interface",
                                    "subnet": "192.168.1.0/24",
                                    "interfaceIp": "192.168.1.2",
                                    "multicastRouting": "disabled",
                                    "vlanId": 100,
                                    "ospfSettings": {
                                        "area": "0",
                                        "cost": 1,
                                        "isPassiveEnabled": true
                                    }
                                }
                            }
                        }
                    ],
                    "responses": {
                        "200": {
                            "description": "Successful operation",
                            "examples": {
                                "application/json": {
                                    "interfaceId": "1234",
                                    "name": "L3 interface",
                                    "subnet": "192.168.1.0/24",
                                    "interfaceIp": "192.168.1.2",
                                    "multicastRouting": "disabled",
                                    "vlanId": 100,
                                    "ospfSettings": {
                                        "area": "0",
                                        "cost": 1,
                                        "isPassiveEnabled": true
                                    }
                                }
                            }
                        }
                    },
                    "summary": "Update a layer 3 interface for a switch",
                    "tags": [
                        "switch",
                        "configure",
                        "routing",
                        "interfaces"
                    ]
                },
                "delete": {
                    "description": "Delete a layer 3 interface from the switch",
                    "operationId": "deleteDeviceSwitchRoutingInterface",
                    "parameters": [{
                            "name": "serial",
                            "in": "path",
                            "type": "string",
                            "required": true
                        },
                        {
                            "name": "interfaceId",
                            "in": "path",
                            "type": "string",
                            "required": true
                        }
                    ],
                    "responses": {
                        "204": {
                            "description": "Successful operation"
                        }
                    },
                    "summary": "Delete a layer 3 interface from the switch",
                    "tags": [
                        "switch",
                        "configure",
                        "routing",
                        "interfaces"
                    ]
                }
            }
        },
        {
            "ruleId": "add-path",
            "message": "`/devices/{serial}/switch/routing/interfaces/{interfaceId}/dhcp` - Added",
            "messageHtml": "Path added   <br>\n      <br>\n      - New endpoint\n      <h4>Return a layer 3 interface DHCP configuration for a switch</h4>\n      <p>   \n      <b class=\"mr-4 badge get\">GET</b>  <code>/devices/{serial}/switch/routing/interfaces/{interfaceId}/dhcp</code>\n      <br>  \n      <pre><code>{\n    &quot;dhcpMode&quot;: &quot;dhcpServer&quot;,\n    &quot;dhcpLeaseTime&quot;: &quot;1 day&quot;,\n    &quot;dnsNameserversOption&quot;: &quot;custom&quot;,\n    &quot;dnsCustomNameservers&quot;: [\n        &quot;8.8.8.8, 8.8.4.4&quot;\n    ],\n    &quot;bootOptionsEnabled&quot;: true,\n    &quot;bootNextServer&quot;: &quot;1.2.3.4&quot;,\n    &quot;bootFileName&quot;: &quot;home_boot_file&quot;,\n    &quot;dhcpOptions&quot;: [\n        {\n            &quot;code&quot;: &quot;5&quot;,\n            &quot;type&quot;: &quot;text&quot;,\n            &quot;value&quot;: &quot;five&quot;\n        }\n    ],\n    &quot;reservedIpRanges&quot;: [\n        {\n            &quot;start&quot;: &quot;192.168.1.1&quot;,\n            &quot;end&quot;: &quot;192.168.1.10&quot;,\n            &quot;comment&quot;: &quot;A reserved IP range&quot;\n        }\n    ],\n    &quot;fixedIpAssignments&quot;: [\n        {\n            &quot;mac&quot;: &quot;22:33:44:55:66:77&quot;,\n            &quot;name&quot;: &quot;Cisco Meraki valued client&quot;,\n            &quot;ip&quot;: &quot;192.168.1.12&quot;\n        }\n    ]\n}</code></pre>\n      </p>\n      <hr>\n      \n      <br>\n      - New endpoint\n      <h4>Update a layer 3 interface DHCP configuration for a switch</h4>\n      <p>   \n      <b class=\"mr-4 badge put\">PUT</b>  <code>/devices/{serial}/switch/routing/interfaces/{interfaceId}/dhcp</code>\n      <br>  \n      <pre><code>{\n    &quot;dhcpMode&quot;: &quot;dhcpServer&quot;,\n    &quot;dhcpLeaseTime&quot;: &quot;1 day&quot;,\n    &quot;dnsNameserversOption&quot;: &quot;custom&quot;,\n    &quot;dnsCustomNameservers&quot;: [\n        &quot;8.8.8.8, 8.8.4.4&quot;\n    ],\n    &quot;bootOptionsEnabled&quot;: true,\n    &quot;bootNextServer&quot;: &quot;1.2.3.4&quot;,\n    &quot;bootFileName&quot;: &quot;home_boot_file&quot;,\n    &quot;dhcpOptions&quot;: [\n        {\n            &quot;code&quot;: &quot;5&quot;,\n            &quot;type&quot;: &quot;text&quot;,\n            &quot;value&quot;: &quot;five&quot;\n        }\n    ],\n    &quot;reservedIpRanges&quot;: [\n        {\n            &quot;start&quot;: &quot;192.168.1.1&quot;,\n            &quot;end&quot;: &quot;192.168.1.10&quot;,\n            &quot;comment&quot;: &quot;A reserved IP range&quot;\n        }\n    ],\n    &quot;fixedIpAssignments&quot;: [\n        {\n            &quot;mac&quot;: &quot;22:33:44:55:66:77&quot;,\n            &quot;name&quot;: &quot;Cisco Meraki valued client&quot;,\n            &quot;ip&quot;: &quot;192.168.1.12&quot;\n        }\n    ]\n}</code></pre>\n      </p>\n      <hr>\n      ",
            "path": "/devices/{serial}/switch/routing/interfaces/{interfaceId}/dhcp",
            "details": {
                "get": {
                    "description": "Return a layer 3 interface DHCP configuration for a switch",
                    "operationId": "getDeviceSwitchRoutingInterfaceDhcp",
                    "parameters": {
                        "serial": {
                            "name": "serial",
                            "in": "path",
                            "type": "string",
                            "required": true
                        },
                        "interfaceId": {
                            "name": "interfaceId",
                            "in": "path",
                            "type": "string",
                            "required": true
                        }
                    },
                    "responses": {
                        "200": {
                            "description": "Successful operation",
                            "examples": {
                                "application/json": {
                                    "dhcpMode": "dhcpServer",
                                    "dhcpLeaseTime": "1 day",
                                    "dnsNameserversOption": "custom",
                                    "dnsCustomNameservers": [
                                        "8.8.8.8, 8.8.4.4"
                                    ],
                                    "bootOptionsEnabled": true,
                                    "bootNextServer": "1.2.3.4",
                                    "bootFileName": "home_boot_file",
                                    "dhcpOptions": [{
                                        "code": "5",
                                        "type": "text",
                                        "value": "five"
                                    }],
                                    "reservedIpRanges": [{
                                        "start": "192.168.1.1",
                                        "end": "192.168.1.10",
                                        "comment": "A reserved IP range"
                                    }],
                                    "fixedIpAssignments": [{
                                        "mac": "22:33:44:55:66:77",
                                        "name": "Cisco Meraki valued client",
                                        "ip": "192.168.1.12"
                                    }]
                                }
                            }
                        }
                    },
                    "summary": "Return a layer 3 interface DHCP configuration for a switch",
                    "tags": [
                        "switch",
                        "configure",
                        "routing",
                        "interfaces",
                        "dhcp"
                    ],
                    "consumes": [
                        "application/json"
                    ],
                    "produces": [
                        "application/json"
                    ],
                    "schemes": [
                        "https"
                    ],
                    "security": [{
                        "meraki_api_key": []
                    }]
                },
                "put": {
                    "description": "Update a layer 3 interface DHCP configuration for a switch",
                    "operationId": "updateDeviceSwitchRoutingInterfaceDhcp",
                    "parameters": {
                        "serial": {
                            "name": "serial",
                            "in": "path",
                            "type": "string",
                            "required": true
                        },
                        "interfaceId": {
                            "name": "interfaceId",
                            "in": "path",
                            "type": "string",
                            "required": true
                        },
                        "updateDeviceSwitchRoutingInterfaceDhcp": {
                            "name": "updateDeviceSwitchRoutingInterfaceDhcp",
                            "in": "body",
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "dhcpMode": {
                                        "type": "string",
                                        "enum": [
                                            "dhcpDisabled",
                                            "dhcpRelay",
                                            "dhcpServer"
                                        ],
                                        "description": "The DHCP mode options for the switch interface ('dhcpDisabled', 'dhcpRelay' or 'dhcpServer')"
                                    },
                                    "dhcpRelayServerIps": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        },
                                        "description": "The DHCP relay server IPs to which DHCP packets would get relayed for the switch interface"
                                    },
                                    "dhcpLeaseTime": {
                                        "type": "string",
                                        "enum": [
                                            "30 minutes",
                                            "1 hour",
                                            "4 hours",
                                            "12 hours",
                                            "1 day",
                                            "1 week"
                                        ],
                                        "description": "The DHCP lease time config for the dhcp server running on switch interface ('30 minutes', '1 hour', '4 hours', '12 hours', '1 day' or '1 week')"
                                    },
                                    "dnsNameserversOption": {
                                        "type": "string",
                                        "enum": [
                                            "googlePublicDns",
                                            "openDns",
                                            "custom"
                                        ],
                                        "description": "The DHCP name server option for the dhcp server running on the switch interface ('googlePublicDns', 'openDns' or 'custom')"
                                    },
                                    "dnsCustomNameservers": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        },
                                        "description": "The DHCP name server IPs when DHCP name server option is 'custom'"
                                    },
                                    "bootOptionsEnabled": {
                                        "type": "boolean",
                                        "description": "Enable DHCP boot options to provide PXE boot options configs for the dhcp server running on the switch interface"
                                    },
                                    "bootNextServer": {
                                        "type": "string",
                                        "description": "The PXE boot server IP for the DHCP server running on the switch interface"
                                    },
                                    "bootFileName": {
                                        "type": "string",
                                        "description": "The PXE boot server filename for the DHCP server running on the switch interface"
                                    },
                                    "dhcpOptions": {
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "code": {
                                                    "type": "string",
                                                    "description": "The code for DHCP option which should be from 2 to 254",
                                                    "required": true
                                                },
                                                "type": {
                                                    "type": "string",
                                                    "enum": [
                                                        "text",
                                                        "ip",
                                                        "integer",
                                                        "hex"
                                                    ],
                                                    "description": "The type of the DHCP option which should be one of ('text', 'ip', 'integer' or 'hex')",
                                                    "required": true
                                                },
                                                "value": {
                                                    "type": "string",
                                                    "description": "The value of the DHCP option",
                                                    "required": true
                                                }
                                            }
                                        },
                                        "description": "Array of DHCP options consisting of code, type and value for the DHCP server running on the switch interface"
                                    },
                                    "reservedIpRanges": {
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "start": {
                                                    "type": "string",
                                                    "description": "The starting IP address of the reserved IP range",
                                                    "required": true
                                                },
                                                "end": {
                                                    "type": "string",
                                                    "description": "The ending IP address of the reserved IP range",
                                                    "required": true
                                                },
                                                "comment": {
                                                    "type": "string",
                                                    "description": "The comment for the reserved IP range"
                                                }
                                            }
                                        },
                                        "description": "Array of DHCP reserved IP assignments for the DHCP server running on the switch interface"
                                    },
                                    "fixedIpAssignments": {
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "name": {
                                                    "type": "string",
                                                    "description": "The name of the client which has fixed IP address",
                                                    "required": true
                                                },
                                                "mac": {
                                                    "type": "string",
                                                    "description": "The MAC address of the client which has fixed IP address",
                                                    "required": true
                                                },
                                                "ip": {
                                                    "type": "string",
                                                    "description": "The IP address of the client which has fixed IP address assigned to it",
                                                    "required": true
                                                }
                                            }
                                        },
                                        "description": "Array of DHCP fixed IP assignments for the DHCP server running on the switch interface"
                                    }
                                },
                                "example": {
                                    "dhcpMode": "dhcpServer",
                                    "dhcpLeaseTime": "1 day",
                                    "dnsNameserversOption": "custom",
                                    "dnsCustomNameservers": [
                                        "8.8.8.8, 8.8.4.4"
                                    ],
                                    "bootOptionsEnabled": true,
                                    "bootNextServer": "1.2.3.4",
                                    "bootFileName": "home_boot_file",
                                    "dhcpOptions": [{
                                        "code": "5",
                                        "type": "text",
                                        "value": "five"
                                    }],
                                    "reservedIpRanges": [{
                                        "start": "192.168.1.1",
                                        "end": "192.168.1.10",
                                        "comment": "A reserved IP range"
                                    }],
                                    "fixedIpAssignments": [{
                                        "mac": "22:33:44:55:66:77",
                                        "name": "Cisco Meraki valued client",
                                        "ip": "192.168.1.12"
                                    }]
                                }
                            }
                        }
                    },
                    "responses": {
                        "200": {
                            "description": "Successful operation",
                            "examples": {
                                "application/json": {
                                    "dhcpMode": "dhcpServer",
                                    "dhcpLeaseTime": "1 day",
                                    "dnsNameserversOption": "custom",
                                    "dnsCustomNameservers": [
                                        "8.8.8.8, 8.8.4.4"
                                    ],
                                    "bootOptionsEnabled": true,
                                    "bootNextServer": "1.2.3.4",
                                    "bootFileName": "home_boot_file",
                                    "dhcpOptions": [{
                                        "code": "5",
                                        "type": "text",
                                        "value": "five"
                                    }],
                                    "reservedIpRanges": [{
                                        "start": "192.168.1.1",
                                        "end": "192.168.1.10",
                                        "comment": "A reserved IP range"
                                    }],
                                    "fixedIpAssignments": [{
                                        "mac": "22:33:44:55:66:77",
                                        "name": "Cisco Meraki valued client",
                                        "ip": "192.168.1.12"
                                    }]
                                }
                            }
                        }
                    },
                    "summary": "Update a layer 3 interface DHCP configuration for a switch",
                    "tags": [
                        "switch",
                        "configure",
                        "routing",
                        "interfaces",
                        "dhcp"
                    ],
                    "consumes": [
                        "application/json"
                    ],
                    "produces": [
                        "application/json"
                    ],
                    "schemes": [
                        "https"
                    ],
                    "security": [{
                        "meraki_api_key": []
                    }]
                }
            },
            "type": "infos",
            "name": "What's Updated",
            "group": "switch",
            "apiDetails": {
                "get": {
                    "description": "Return a layer 3 interface DHCP configuration for a switch",
                    "operationId": "getDeviceSwitchRoutingInterfaceDhcp",
                    "parameters": [{
                            "name": "serial",
                            "in": "path",
                            "type": "string",
                            "required": true
                        },
                        {
                            "name": "interfaceId",
                            "in": "path",
                            "type": "string",
                            "required": true
                        }
                    ],
                    "responses": {
                        "200": {
                            "description": "Successful operation",
                            "examples": {
                                "application/json": {
                                    "dhcpMode": "dhcpServer",
                                    "dhcpLeaseTime": "1 day",
                                    "dnsNameserversOption": "custom",
                                    "dnsCustomNameservers": [
                                        "8.8.8.8, 8.8.4.4"
                                    ],
                                    "bootOptionsEnabled": true,
                                    "bootNextServer": "1.2.3.4",
                                    "bootFileName": "home_boot_file",
                                    "dhcpOptions": [{
                                        "code": "5",
                                        "type": "text",
                                        "value": "five"
                                    }],
                                    "reservedIpRanges": [{
                                        "start": "192.168.1.1",
                                        "end": "192.168.1.10",
                                        "comment": "A reserved IP range"
                                    }],
                                    "fixedIpAssignments": [{
                                        "mac": "22:33:44:55:66:77",
                                        "name": "Cisco Meraki valued client",
                                        "ip": "192.168.1.12"
                                    }]
                                }
                            }
                        }
                    },
                    "summary": "Return a layer 3 interface DHCP configuration for a switch",
                    "tags": [
                        "switch",
                        "configure",
                        "routing",
                        "interfaces",
                        "dhcp"
                    ]
                },
                "put": {
                    "description": "Update a layer 3 interface DHCP configuration for a switch",
                    "operationId": "updateDeviceSwitchRoutingInterfaceDhcp",
                    "parameters": [{
                            "name": "serial",
                            "in": "path",
                            "type": "string",
                            "required": true
                        },
                        {
                            "name": "interfaceId",
                            "in": "path",
                            "type": "string",
                            "required": true
                        },
                        {
                            "name": "updateDeviceSwitchRoutingInterfaceDhcp",
                            "in": "body",
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "dhcpMode": {
                                        "type": "string",
                                        "enum": [
                                            "dhcpDisabled",
                                            "dhcpRelay",
                                            "dhcpServer"
                                        ],
                                        "description": "The DHCP mode options for the switch interface ('dhcpDisabled', 'dhcpRelay' or 'dhcpServer')"
                                    },
                                    "dhcpRelayServerIps": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        },
                                        "description": "The DHCP relay server IPs to which DHCP packets would get relayed for the switch interface"
                                    },
                                    "dhcpLeaseTime": {
                                        "type": "string",
                                        "enum": [
                                            "30 minutes",
                                            "1 hour",
                                            "4 hours",
                                            "12 hours",
                                            "1 day",
                                            "1 week"
                                        ],
                                        "description": "The DHCP lease time config for the dhcp server running on switch interface ('30 minutes', '1 hour', '4 hours', '12 hours', '1 day' or '1 week')"
                                    },
                                    "dnsNameserversOption": {
                                        "type": "string",
                                        "enum": [
                                            "googlePublicDns",
                                            "openDns",
                                            "custom"
                                        ],
                                        "description": "The DHCP name server option for the dhcp server running on the switch interface ('googlePublicDns', 'openDns' or 'custom')"
                                    },
                                    "dnsCustomNameservers": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        },
                                        "description": "The DHCP name server IPs when DHCP name server option is 'custom'"
                                    },
                                    "bootOptionsEnabled": {
                                        "type": "boolean",
                                        "description": "Enable DHCP boot options to provide PXE boot options configs for the dhcp server running on the switch interface"
                                    },
                                    "bootNextServer": {
                                        "type": "string",
                                        "description": "The PXE boot server IP for the DHCP server running on the switch interface"
                                    },
                                    "bootFileName": {
                                        "type": "string",
                                        "description": "The PXE boot server filename for the DHCP server running on the switch interface"
                                    },
                                    "dhcpOptions": {
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "code": {
                                                    "type": "string",
                                                    "description": "The code for DHCP option which should be from 2 to 254",
                                                    "required": true
                                                },
                                                "type": {
                                                    "type": "string",
                                                    "enum": [
                                                        "text",
                                                        "ip",
                                                        "integer",
                                                        "hex"
                                                    ],
                                                    "description": "The type of the DHCP option which should be one of ('text', 'ip', 'integer' or 'hex')",
                                                    "required": true
                                                },
                                                "value": {
                                                    "type": "string",
                                                    "description": "The value of the DHCP option",
                                                    "required": true
                                                }
                                            }
                                        },
                                        "description": "Array of DHCP options consisting of code, type and value for the DHCP server running on the switch interface"
                                    },
                                    "reservedIpRanges": {
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "start": {
                                                    "type": "string",
                                                    "description": "The starting IP address of the reserved IP range",
                                                    "required": true
                                                },
                                                "end": {
                                                    "type": "string",
                                                    "description": "The ending IP address of the reserved IP range",
                                                    "required": true
                                                },
                                                "comment": {
                                                    "type": "string",
                                                    "description": "The comment for the reserved IP range"
                                                }
                                            }
                                        },
                                        "description": "Array of DHCP reserved IP assignments for the DHCP server running on the switch interface"
                                    },
                                    "fixedIpAssignments": {
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "name": {
                                                    "type": "string",
                                                    "description": "The name of the client which has fixed IP address",
                                                    "required": true
                                                },
                                                "mac": {
                                                    "type": "string",
                                                    "description": "The MAC address of the client which has fixed IP address",
                                                    "required": true
                                                },
                                                "ip": {
                                                    "type": "string",
                                                    "description": "The IP address of the client which has fixed IP address assigned to it",
                                                    "required": true
                                                }
                                            }
                                        },
                                        "description": "Array of DHCP fixed IP assignments for the DHCP server running on the switch interface"
                                    }
                                },
                                "example": {
                                    "dhcpMode": "dhcpServer",
                                    "dhcpLeaseTime": "1 day",
                                    "dnsNameserversOption": "custom",
                                    "dnsCustomNameservers": [
                                        "8.8.8.8, 8.8.4.4"
                                    ],
                                    "bootOptionsEnabled": true,
                                    "bootNextServer": "1.2.3.4",
                                    "bootFileName": "home_boot_file",
                                    "dhcpOptions": [{
                                        "code": "5",
                                        "type": "text",
                                        "value": "five"
                                    }],
                                    "reservedIpRanges": [{
                                        "start": "192.168.1.1",
                                        "end": "192.168.1.10",
                                        "comment": "A reserved IP range"
                                    }],
                                    "fixedIpAssignments": [{
                                        "mac": "22:33:44:55:66:77",
                                        "name": "Cisco Meraki valued client",
                                        "ip": "192.168.1.12"
                                    }]
                                }
                            }
                        }
                    ],
                    "responses": {
                        "200": {
                            "description": "Successful operation",
                            "examples": {
                                "application/json": {
                                    "dhcpMode": "dhcpServer",
                                    "dhcpLeaseTime": "1 day",
                                    "dnsNameserversOption": "custom",
                                    "dnsCustomNameservers": [
                                        "8.8.8.8, 8.8.4.4"
                                    ],
                                    "bootOptionsEnabled": true,
                                    "bootNextServer": "1.2.3.4",
                                    "bootFileName": "home_boot_file",
                                    "dhcpOptions": [{
                                        "code": "5",
                                        "type": "text",
                                        "value": "five"
                                    }],
                                    "reservedIpRanges": [{
                                        "start": "192.168.1.1",
                                        "end": "192.168.1.10",
                                        "comment": "A reserved IP range"
                                    }],
                                    "fixedIpAssignments": [{
                                        "mac": "22:33:44:55:66:77",
                                        "name": "Cisco Meraki valued client",
                                        "ip": "192.168.1.12"
                                    }]
                                }
                            }
                        }
                    },
                    "summary": "Update a layer 3 interface DHCP configuration for a switch",
                    "tags": [
                        "switch",
                        "configure",
                        "routing",
                        "interfaces",
                        "dhcp"
                    ]
                }
            }
        },
        {
            "ruleId": "add-path",
            "message": "`/devices/{serial}/switch/routing/staticRoutes` - Added",
            "messageHtml": "Path added   <br>\n      <br>\n      - New endpoint\n      <h4>List layer 3 static routes for a switch</h4>\n      <p>   \n      <b class=\"mr-4 badge get\">GET</b>  <code>/devices/{serial}/switch/routing/staticRoutes</code>\n      <br>  \n      <pre><code>[\n    {\n        &quot;staticRouteId&quot;: &quot;1234&quot;,\n        &quot;name&quot;: &quot;My route&quot;,\n        &quot;subnet&quot;: &quot;192.168.1.0/24&quot;,\n        &quot;nextHopIp&quot;: &quot;1.2.3.4&quot;,\n        &quot;advertiseViaOspfEnabled&quot;: false,\n        &quot;preferOverOspfRoutesEnabled&quot;: false\n    }\n]</code></pre>\n      </p>\n      <hr>\n      \n      <br>\n      - New endpoint\n      <h4>Create a layer 3 static route for a switch</h4>\n      <p>   \n      <b class=\"mr-4 badge post\">POST</b>  <code>/devices/{serial}/switch/routing/staticRoutes</code>\n      <br>  \n      <pre><code>{\n    &quot;staticRouteId&quot;: &quot;1234&quot;,\n    &quot;name&quot;: &quot;My route&quot;,\n    &quot;subnet&quot;: &quot;192.168.1.0/24&quot;,\n    &quot;nextHopIp&quot;: &quot;1.2.3.4&quot;,\n    &quot;advertiseViaOspfEnabled&quot;: false,\n    &quot;preferOverOspfRoutesEnabled&quot;: false\n}</code></pre>\n      </p>\n      <hr>\n      ",
            "path": "/devices/{serial}/switch/routing/staticRoutes",
            "details": {
                "get": {
                    "description": "List layer 3 static routes for a switch",
                    "operationId": "getDeviceSwitchRoutingStaticRoutes",
                    "parameters": {
                        "serial": {
                            "name": "serial",
                            "in": "path",
                            "type": "string",
                            "required": true
                        }
                    },
                    "responses": {
                        "200": {
                            "description": "Successful operation",
                            "examples": {
                                "application/json": [{
                                    "staticRouteId": "1234",
                                    "name": "My route",
                                    "subnet": "192.168.1.0/24",
                                    "nextHopIp": "1.2.3.4",
                                    "advertiseViaOspfEnabled": false,
                                    "preferOverOspfRoutesEnabled": false
                                }]
                            }
                        }
                    },
                    "summary": "List layer 3 static routes for a switch",
                    "tags": [
                        "switch",
                        "configure",
                        "routing",
                        "staticRoutes"
                    ],
                    "consumes": [
                        "application/json"
                    ],
                    "produces": [
                        "application/json"
                    ],
                    "schemes": [
                        "https"
                    ],
                    "security": [{
                        "meraki_api_key": []
                    }]
                },
                "post": {
                    "description": "Create a layer 3 static route for a switch",
                    "operationId": "createDeviceSwitchRoutingStaticRoute",
                    "parameters": {
                        "serial": {
                            "name": "serial",
                            "in": "path",
                            "type": "string",
                            "required": true
                        },
                        "createDeviceSwitchRoutingStaticRoute": {
                            "name": "createDeviceSwitchRoutingStaticRoute",
                            "in": "body",
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "description": "Name or description for layer 3 static route"
                                    },
                                    "subnet": {
                                        "type": "string",
                                        "description": "The subnet which is routed via this static route and should be specified in CIDR notation (ex. 1.2.3.0/24)",
                                        "required": true
                                    },
                                    "nextHopIp": {
                                        "type": "string",
                                        "description": "IP address of the next hop device to which the device sends its traffic for the subnet",
                                        "required": true
                                    },
                                    "advertiseViaOspfEnabled": {
                                        "type": "boolean",
                                        "description": "Option to advertise static route via OSPF"
                                    },
                                    "preferOverOspfRoutesEnabled": {
                                        "type": "boolean",
                                        "description": "Option to prefer static route over OSPF routes"
                                    }
                                },
                                "example": {
                                    "name": "My route",
                                    "subnet": "192.168.1.0/24",
                                    "nextHopIp": "1.2.3.4",
                                    "advertiseViaOspfEnabled": false,
                                    "preferOverOspfRoutesEnabled": false
                                }
                            },
                            "required": true
                        }
                    },
                    "responses": {
                        "201": {
                            "description": "Successful operation",
                            "examples": {
                                "application/json": {
                                    "staticRouteId": "1234",
                                    "name": "My route",
                                    "subnet": "192.168.1.0/24",
                                    "nextHopIp": "1.2.3.4",
                                    "advertiseViaOspfEnabled": false,
                                    "preferOverOspfRoutesEnabled": false
                                }
                            }
                        }
                    },
                    "summary": "Create a layer 3 static route for a switch",
                    "tags": [
                        "switch",
                        "configure",
                        "routing",
                        "staticRoutes"
                    ],
                    "consumes": [
                        "application/json"
                    ],
                    "produces": [
                        "application/json"
                    ],
                    "schemes": [
                        "https"
                    ],
                    "security": [{
                        "meraki_api_key": []
                    }]
                }
            },
            "type": "infos",
            "name": "What's Updated",
            "group": "switch",
            "apiDetails": {
                "get": {
                    "description": "List layer 3 static routes for a switch",
                    "operationId": "getDeviceSwitchRoutingStaticRoutes",
                    "parameters": [{
                        "name": "serial",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }],
                    "responses": {
                        "200": {
                            "description": "Successful operation",
                            "examples": {
                                "application/json": [{
                                    "staticRouteId": "1234",
                                    "name": "My route",
                                    "subnet": "192.168.1.0/24",
                                    "nextHopIp": "1.2.3.4",
                                    "advertiseViaOspfEnabled": false,
                                    "preferOverOspfRoutesEnabled": false
                                }]
                            }
                        }
                    },
                    "summary": "List layer 3 static routes for a switch",
                    "tags": [
                        "switch",
                        "configure",
                        "routing",
                        "staticRoutes"
                    ]
                },
                "post": {
                    "description": "Create a layer 3 static route for a switch",
                    "operationId": "createDeviceSwitchRoutingStaticRoute",
                    "parameters": [{
                            "name": "serial",
                            "in": "path",
                            "type": "string",
                            "required": true
                        },
                        {
                            "name": "createDeviceSwitchRoutingStaticRoute",
                            "in": "body",
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "description": "Name or description for layer 3 static route"
                                    },
                                    "subnet": {
                                        "type": "string",
                                        "description": "The subnet which is routed via this static route and should be specified in CIDR notation (ex. 1.2.3.0/24)",
                                        "required": true
                                    },
                                    "nextHopIp": {
                                        "type": "string",
                                        "description": "IP address of the next hop device to which the device sends its traffic for the subnet",
                                        "required": true
                                    },
                                    "advertiseViaOspfEnabled": {
                                        "type": "boolean",
                                        "description": "Option to advertise static route via OSPF"
                                    },
                                    "preferOverOspfRoutesEnabled": {
                                        "type": "boolean",
                                        "description": "Option to prefer static route over OSPF routes"
                                    }
                                },
                                "example": {
                                    "name": "My route",
                                    "subnet": "192.168.1.0/24",
                                    "nextHopIp": "1.2.3.4",
                                    "advertiseViaOspfEnabled": false,
                                    "preferOverOspfRoutesEnabled": false
                                }
                            },
                            "required": true
                        }
                    ],
                    "responses": {
                        "201": {
                            "description": "Successful operation",
                            "examples": {
                                "application/json": {
                                    "staticRouteId": "1234",
                                    "name": "My route",
                                    "subnet": "192.168.1.0/24",
                                    "nextHopIp": "1.2.3.4",
                                    "advertiseViaOspfEnabled": false,
                                    "preferOverOspfRoutesEnabled": false
                                }
                            }
                        }
                    },
                    "summary": "Create a layer 3 static route for a switch",
                    "tags": [
                        "switch",
                        "configure",
                        "routing",
                        "staticRoutes"
                    ]
                }
            }
        },
        {
            "ruleId": "add-path",
            "message": "`/devices/{serial}/switch/routing/staticRoutes/{staticRouteId}` - Added",
            "messageHtml": "Path added   <br>\n      <br>\n      - New endpoint\n      <h4>Return a layer 3 static route for a switch</h4>\n      <p>   \n      <b class=\"mr-4 badge get\">GET</b>  <code>/devices/{serial}/switch/routing/staticRoutes/{staticRouteId}</code>\n      <br>  \n      <pre><code>{\n    &quot;staticRouteId&quot;: &quot;1234&quot;,\n    &quot;name&quot;: &quot;My route&quot;,\n    &quot;subnet&quot;: &quot;192.168.1.0/24&quot;,\n    &quot;nextHopIp&quot;: &quot;1.2.3.4&quot;,\n    &quot;advertiseViaOspfEnabled&quot;: false,\n    &quot;preferOverOspfRoutesEnabled&quot;: false\n}</code></pre>\n      </p>\n      <hr>\n      \n      <br>\n      - New endpoint\n      <h4>Update a layer 3 static route for a switch</h4>\n      <p>   \n      <b class=\"mr-4 badge put\">PUT</b>  <code>/devices/{serial}/switch/routing/staticRoutes/{staticRouteId}</code>\n      <br>  \n      <pre><code>{\n    &quot;staticRouteId&quot;: &quot;1234&quot;,\n    &quot;name&quot;: &quot;My route&quot;,\n    &quot;subnet&quot;: &quot;192.168.1.0/24&quot;,\n    &quot;nextHopIp&quot;: &quot;1.2.3.4&quot;,\n    &quot;advertiseViaOspfEnabled&quot;: false,\n    &quot;preferOverOspfRoutesEnabled&quot;: false\n}</code></pre>\n      </p>\n      <hr>\n      \n      <br>\n      - New endpoint\n      <h4>Delete a layer 3 static route for a switch</h4>\n      <p>   \n      <b class=\"mr-4 badge delete\">DELETE</b>  <code>/devices/{serial}/switch/routing/staticRoutes/{staticRouteId}</code>\n      <br>  \n      <pre><code></code></pre>\n      </p>\n      <hr>\n      ",
            "path": "/devices/{serial}/switch/routing/staticRoutes/{staticRouteId}",
            "details": {
                "get": {
                    "description": "Return a layer 3 static route for a switch",
                    "operationId": "getDeviceSwitchRoutingStaticRoute",
                    "parameters": {
                        "serial": {
                            "name": "serial",
                            "in": "path",
                            "type": "string",
                            "required": true
                        },
                        "staticRouteId": {
                            "name": "staticRouteId",
                            "in": "path",
                            "type": "string",
                            "required": true
                        }
                    },
                    "responses": {
                        "200": {
                            "description": "Successful operation",
                            "examples": {
                                "application/json": {
                                    "staticRouteId": "1234",
                                    "name": "My route",
                                    "subnet": "192.168.1.0/24",
                                    "nextHopIp": "1.2.3.4",
                                    "advertiseViaOspfEnabled": false,
                                    "preferOverOspfRoutesEnabled": false
                                }
                            }
                        }
                    },
                    "summary": "Return a layer 3 static route for a switch",
                    "tags": [
                        "switch",
                        "configure",
                        "routing",
                        "staticRoutes"
                    ],
                    "consumes": [
                        "application/json"
                    ],
                    "produces": [
                        "application/json"
                    ],
                    "schemes": [
                        "https"
                    ],
                    "security": [{
                        "meraki_api_key": []
                    }]
                },
                "put": {
                    "description": "Update a layer 3 static route for a switch",
                    "operationId": "updateDeviceSwitchRoutingStaticRoute",
                    "parameters": {
                        "serial": {
                            "name": "serial",
                            "in": "path",
                            "type": "string",
                            "required": true
                        },
                        "staticRouteId": {
                            "name": "staticRouteId",
                            "in": "path",
                            "type": "string",
                            "required": true
                        },
                        "updateDeviceSwitchRoutingStaticRoute": {
                            "name": "updateDeviceSwitchRoutingStaticRoute",
                            "in": "body",
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "description": "Name or description for layer 3 static route"
                                    },
                                    "subnet": {
                                        "type": "string",
                                        "description": "The subnet which is routed via this static route and should be specified in CIDR notation (ex. 1.2.3.0/24)"
                                    },
                                    "nextHopIp": {
                                        "type": "string",
                                        "description": "IP address of the next hop device to which the device sends its traffic for the subnet"
                                    },
                                    "advertiseViaOspfEnabled": {
                                        "type": "boolean",
                                        "description": "Option to advertise static route via OSPF"
                                    },
                                    "preferOverOspfRoutesEnabled": {
                                        "type": "boolean",
                                        "description": "Option to prefer static route over OSPF routes"
                                    }
                                },
                                "example": {
                                    "name": "My route",
                                    "subnet": "192.168.1.0/24",
                                    "nextHopIp": "1.2.3.4",
                                    "advertiseViaOspfEnabled": false,
                                    "preferOverOspfRoutesEnabled": false
                                }
                            }
                        }
                    },
                    "responses": {
                        "200": {
                            "description": "Successful operation",
                            "examples": {
                                "application/json": {
                                    "staticRouteId": "1234",
                                    "name": "My route",
                                    "subnet": "192.168.1.0/24",
                                    "nextHopIp": "1.2.3.4",
                                    "advertiseViaOspfEnabled": false,
                                    "preferOverOspfRoutesEnabled": false
                                }
                            }
                        }
                    },
                    "summary": "Update a layer 3 static route for a switch",
                    "tags": [
                        "switch",
                        "configure",
                        "routing",
                        "staticRoutes"
                    ],
                    "consumes": [
                        "application/json"
                    ],
                    "produces": [
                        "application/json"
                    ],
                    "schemes": [
                        "https"
                    ],
                    "security": [{
                        "meraki_api_key": []
                    }]
                },
                "delete": {
                    "description": "Delete a layer 3 static route for a switch",
                    "operationId": "deleteDeviceSwitchRoutingStaticRoute",
                    "parameters": {
                        "serial": {
                            "name": "serial",
                            "in": "path",
                            "type": "string",
                            "required": true
                        },
                        "staticRouteId": {
                            "name": "staticRouteId",
                            "in": "path",
                            "type": "string",
                            "required": true
                        }
                    },
                    "responses": {
                        "204": {
                            "description": "Successful operation"
                        }
                    },
                    "summary": "Delete a layer 3 static route for a switch",
                    "tags": [
                        "switch",
                        "configure",
                        "routing",
                        "staticRoutes"
                    ],
                    "consumes": [
                        "application/json"
                    ],
                    "produces": [
                        "application/json"
                    ],
                    "schemes": [
                        "https"
                    ],
                    "security": [{
                        "meraki_api_key": []
                    }]
                }
            },
            "type": "infos",
            "name": "What's Updated",
            "group": "switch",
            "apiDetails": {
                "get": {
                    "description": "Return a layer 3 static route for a switch",
                    "operationId": "getDeviceSwitchRoutingStaticRoute",
                    "parameters": [{
                            "name": "serial",
                            "in": "path",
                            "type": "string",
                            "required": true
                        },
                        {
                            "name": "staticRouteId",
                            "in": "path",
                            "type": "string",
                            "required": true
                        }
                    ],
                    "responses": {
                        "200": {
                            "description": "Successful operation",
                            "examples": {
                                "application/json": {
                                    "staticRouteId": "1234",
                                    "name": "My route",
                                    "subnet": "192.168.1.0/24",
                                    "nextHopIp": "1.2.3.4",
                                    "advertiseViaOspfEnabled": false,
                                    "preferOverOspfRoutesEnabled": false
                                }
                            }
                        }
                    },
                    "summary": "Return a layer 3 static route for a switch",
                    "tags": [
                        "switch",
                        "configure",
                        "routing",
                        "staticRoutes"
                    ]
                },
                "put": {
                    "description": "Update a layer 3 static route for a switch",
                    "operationId": "updateDeviceSwitchRoutingStaticRoute",
                    "parameters": [{
                            "name": "serial",
                            "in": "path",
                            "type": "string",
                            "required": true
                        },
                        {
                            "name": "staticRouteId",
                            "in": "path",
                            "type": "string",
                            "required": true
                        },
                        {
                            "name": "updateDeviceSwitchRoutingStaticRoute",
                            "in": "body",
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "description": "Name or description for layer 3 static route"
                                    },
                                    "subnet": {
                                        "type": "string",
                                        "description": "The subnet which is routed via this static route and should be specified in CIDR notation (ex. 1.2.3.0/24)"
                                    },
                                    "nextHopIp": {
                                        "type": "string",
                                        "description": "IP address of the next hop device to which the device sends its traffic for the subnet"
                                    },
                                    "advertiseViaOspfEnabled": {
                                        "type": "boolean",
                                        "description": "Option to advertise static route via OSPF"
                                    },
                                    "preferOverOspfRoutesEnabled": {
                                        "type": "boolean",
                                        "description": "Option to prefer static route over OSPF routes"
                                    }
                                },
                                "example": {
                                    "name": "My route",
                                    "subnet": "192.168.1.0/24",
                                    "nextHopIp": "1.2.3.4",
                                    "advertiseViaOspfEnabled": false,
                                    "preferOverOspfRoutesEnabled": false
                                }
                            }
                        }
                    ],
                    "responses": {
                        "200": {
                            "description": "Successful operation",
                            "examples": {
                                "application/json": {
                                    "staticRouteId": "1234",
                                    "name": "My route",
                                    "subnet": "192.168.1.0/24",
                                    "nextHopIp": "1.2.3.4",
                                    "advertiseViaOspfEnabled": false,
                                    "preferOverOspfRoutesEnabled": false
                                }
                            }
                        }
                    },
                    "summary": "Update a layer 3 static route for a switch",
                    "tags": [
                        "switch",
                        "configure",
                        "routing",
                        "staticRoutes"
                    ]
                },
                "delete": {
                    "description": "Delete a layer 3 static route for a switch",
                    "operationId": "deleteDeviceSwitchRoutingStaticRoute",
                    "parameters": [{
                            "name": "serial",
                            "in": "path",
                            "type": "string",
                            "required": true
                        },
                        {
                            "name": "staticRouteId",
                            "in": "path",
                            "type": "string",
                            "required": true
                        }
                    ],
                    "responses": {
                        "204": {
                            "description": "Successful operation"
                        }
                    },
                    "summary": "Delete a layer 3 static route for a switch",
                    "tags": [
                        "switch",
                        "configure",
                        "routing",
                        "staticRoutes"
                    ]
                }
            }
        },
        {
            "ruleId": "add-path",
            "message": "`/devices/{serial}/switch/warmSpare` - Added",
            "messageHtml": "Path added   <br>\n      <br>\n      - New endpoint\n      <h4>Return warm spare configuration for a switch</h4>\n      <p>   \n      <b class=\"mr-4 badge get\">GET</b>  <code>/devices/{serial}/switch/warmSpare</code>\n      <br>  \n      <pre><code>{\n    &quot;enabled&quot;: true,\n    &quot;primarySerial&quot;: &quot;Q234-ABCD-0001&quot;,\n    &quot;spareSerial&quot;: &quot;Q234-ABCD-0002&quot;\n}</code></pre>\n      </p>\n      <hr>\n      \n      <br>\n      - New endpoint\n      <h4>Update warm spare configuration for a switch. The spare will use the same L3 configuration as the primary. Note that this will irreversibly destroy any existing L3 configuration on the spare.</h4>\n      <p>   \n      <b class=\"mr-4 badge put\">PUT</b>  <code>/devices/{serial}/switch/warmSpare</code>\n      <br>  \n      <pre><code>{\n    &quot;enabled&quot;: true,\n    &quot;primarySerial&quot;: &quot;Q234-ABCD-0001&quot;,\n    &quot;spareSerial&quot;: &quot;Q234-ABCD-0002&quot;\n}</code></pre>\n      </p>\n      <hr>\n      ",
            "path": "/devices/{serial}/switch/warmSpare",
            "details": {
                "get": {
                    "description": "Return warm spare configuration for a switch",
                    "operationId": "getDeviceSwitchWarmSpare",
                    "parameters": {
                        "serial": {
                            "name": "serial",
                            "in": "path",
                            "type": "string",
                            "required": true
                        }
                    },
                    "responses": {
                        "200": {
                            "description": "Successful operation",
                            "examples": {
                                "application/json": {
                                    "enabled": true,
                                    "primarySerial": "Q234-ABCD-0001",
                                    "spareSerial": "Q234-ABCD-0002"
                                }
                            }
                        }
                    },
                    "summary": "Return warm spare configuration for a switch",
                    "tags": [
                        "switch",
                        "configure",
                        "warmSpare"
                    ],
                    "consumes": [
                        "application/json"
                    ],
                    "produces": [
                        "application/json"
                    ],
                    "schemes": [
                        "https"
                    ],
                    "security": [{
                        "meraki_api_key": []
                    }]
                },
                "put": {
                    "description": "Update warm spare configuration for a switch. The spare will use the same L3 configuration as the primary. Note that this will irreversibly destroy any existing L3 configuration on the spare.",
                    "operationId": "updateDeviceSwitchWarmSpare",
                    "parameters": {
                        "serial": {
                            "name": "serial",
                            "in": "path",
                            "type": "string",
                            "required": true
                        },
                        "updateDeviceSwitchWarmSpare": {
                            "name": "updateDeviceSwitchWarmSpare",
                            "in": "body",
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "enabled": {
                                        "type": "boolean",
                                        "description": "Enable or disable warm spare for a switch",
                                        "required": true
                                    },
                                    "spareSerial": {
                                        "type": "string",
                                        "description": "Serial number of the warm spare switch"
                                    }
                                },
                                "example": {
                                    "enabled": true,
                                    "spareSerial": "Q234-ABCD-0002"
                                }
                            },
                            "required": true
                        }
                    },
                    "responses": {
                        "200": {
                            "description": "Successful operation",
                            "examples": {
                                "application/json": {
                                    "enabled": true,
                                    "primarySerial": "Q234-ABCD-0001",
                                    "spareSerial": "Q234-ABCD-0002"
                                }
                            }
                        }
                    },
                    "summary": "Update warm spare configuration for a switch. The spare will use the same L3 configuration as the primary. Note that this will irreversibly destroy any existing L3 configuration on the spare.",
                    "tags": [
                        "switch",
                        "configure",
                        "warmSpare"
                    ],
                    "consumes": [
                        "application/json"
                    ],
                    "produces": [
                        "application/json"
                    ],
                    "schemes": [
                        "https"
                    ],
                    "security": [{
                        "meraki_api_key": []
                    }]
                }
            },
            "type": "infos",
            "name": "What's Updated",
            "group": "switch",
            "apiDetails": {
                "get": {
                    "description": "Return warm spare configuration for a switch",
                    "operationId": "getDeviceSwitchWarmSpare",
                    "parameters": [{
                        "name": "serial",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }],
                    "responses": {
                        "200": {
                            "description": "Successful operation",
                            "examples": {
                                "application/json": {
                                    "enabled": true,
                                    "primarySerial": "Q234-ABCD-0001",
                                    "spareSerial": "Q234-ABCD-0002"
                                }
                            }
                        }
                    },
                    "summary": "Return warm spare configuration for a switch",
                    "tags": [
                        "switch",
                        "configure",
                        "warmSpare"
                    ]
                },
                "put": {
                    "description": "Update warm spare configuration for a switch. The spare will use the same L3 configuration as the primary. Note that this will irreversibly destroy any existing L3 configuration on the spare.",
                    "operationId": "updateDeviceSwitchWarmSpare",
                    "parameters": [{
                            "name": "serial",
                            "in": "path",
                            "type": "string",
                            "required": true
                        },
                        {
                            "name": "updateDeviceSwitchWarmSpare",
                            "in": "body",
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "enabled": {
                                        "type": "boolean",
                                        "description": "Enable or disable warm spare for a switch",
                                        "required": true
                                    },
                                    "spareSerial": {
                                        "type": "string",
                                        "description": "Serial number of the warm spare switch"
                                    }
                                },
                                "example": {
                                    "enabled": true,
                                    "spareSerial": "Q234-ABCD-0002"
                                }
                            },
                            "required": true
                        }
                    ],
                    "responses": {
                        "200": {
                            "description": "Successful operation",
                            "examples": {
                                "application/json": {
                                    "enabled": true,
                                    "primarySerial": "Q234-ABCD-0001",
                                    "spareSerial": "Q234-ABCD-0002"
                                }
                            }
                        }
                    },
                    "summary": "Update warm spare configuration for a switch. The spare will use the same L3 configuration as the primary. Note that this will irreversibly destroy any existing L3 configuration on the spare.",
                    "tags": [
                        "switch",
                        "configure",
                        "warmSpare"
                    ]
                }
            }
        },
        {
            "ruleId": "add-path",
            "message": "`/networks/{networkId}/appliance/singleLan` - Added",
            "messageHtml": "Path added   <br>\n      <br>\n      - New endpoint\n      <h4>Return single LAN configuration</h4>\n      <p>   \n      <b class=\"mr-4 badge get\">GET</b>  <code>/networks/{networkId}/appliance/singleLan</code>\n      <br>  \n      <pre><code>{\n    &quot;subnet&quot;: &quot;192.168.1.0/24&quot;,\n    &quot;applianceIp&quot;: &quot;192.168.1.2&quot;\n}</code></pre>\n      </p>\n      <hr>\n      \n      <br>\n      - New endpoint\n      <h4>Update single LAN configuration</h4>\n      <p>   \n      <b class=\"mr-4 badge put\">PUT</b>  <code>/networks/{networkId}/appliance/singleLan</code>\n      <br>  \n      <pre><code>{\n    &quot;subnet&quot;: &quot;192.168.1.0/24&quot;,\n    &quot;applianceIp&quot;: &quot;192.168.1.2&quot;\n}</code></pre>\n      </p>\n      <hr>\n      ",
            "path": "/networks/{networkId}/appliance/singleLan",
            "details": {
                "get": {
                    "description": "Return single LAN configuration",
                    "operationId": "getNetworkApplianceSingleLan",
                    "parameters": {
                        "networkId": {
                            "name": "networkId",
                            "in": "path",
                            "type": "string",
                            "required": true
                        }
                    },
                    "responses": {
                        "200": {
                            "description": "Successful operation",
                            "examples": {
                                "application/json": {
                                    "subnet": "192.168.1.0/24",
                                    "applianceIp": "192.168.1.2"
                                }
                            }
                        }
                    },
                    "summary": "Return single LAN configuration",
                    "tags": [
                        "appliance",
                        "configure",
                        "singleLan"
                    ],
                    "consumes": [
                        "application/json"
                    ],
                    "produces": [
                        "application/json"
                    ],
                    "schemes": [
                        "https"
                    ],
                    "security": [{
                        "meraki_api_key": []
                    }]
                },
                "put": {
                    "description": "Update single LAN configuration",
                    "operationId": "updateNetworkApplianceSingleLan",
                    "parameters": {
                        "networkId": {
                            "name": "networkId",
                            "in": "path",
                            "type": "string",
                            "required": true
                        },
                        "updateNetworkApplianceSingleLan": {
                            "name": "updateNetworkApplianceSingleLan",
                            "in": "body",
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "subnet": {
                                        "type": "string",
                                        "description": "The subnet of the single LAN configuration"
                                    },
                                    "applianceIp": {
                                        "type": "string",
                                        "description": "The appliance IP address of the single LAN"
                                    }
                                },
                                "example": {}
                            }
                        }
                    },
                    "responses": {
                        "200": {
                            "description": "Successful operation",
                            "examples": {
                                "application/json": {
                                    "subnet": "192.168.1.0/24",
                                    "applianceIp": "192.168.1.2"
                                }
                            }
                        }
                    },
                    "summary": "Update single LAN configuration",
                    "tags": [
                        "appliance",
                        "configure",
                        "singleLan"
                    ],
                    "consumes": [
                        "application/json"
                    ],
                    "produces": [
                        "application/json"
                    ],
                    "schemes": [
                        "https"
                    ],
                    "security": [{
                        "meraki_api_key": []
                    }]
                }
            },
            "type": "infos",
            "name": "What's Updated",
            "group": "appliance",
            "apiDetails": {
                "get": {
                    "description": "Return single LAN configuration",
                    "operationId": "getNetworkApplianceSingleLan",
                    "parameters": [{
                        "name": "networkId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }],
                    "responses": {
                        "200": {
                            "description": "Successful operation",
                            "examples": {
                                "application/json": {
                                    "subnet": "192.168.1.0/24",
                                    "applianceIp": "192.168.1.2"
                                }
                            }
                        }
                    },
                    "summary": "Return single LAN configuration",
                    "tags": [
                        "appliance",
                        "configure",
                        "singleLan"
                    ]
                },
                "put": {
                    "description": "Update single LAN configuration",
                    "operationId": "updateNetworkApplianceSingleLan",
                    "parameters": [{
                            "name": "networkId",
                            "in": "path",
                            "type": "string",
                            "required": true
                        },
                        {
                            "name": "updateNetworkApplianceSingleLan",
                            "in": "body",
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "subnet": {
                                        "type": "string",
                                        "description": "The subnet of the single LAN configuration"
                                    },
                                    "applianceIp": {
                                        "type": "string",
                                        "description": "The appliance IP address of the single LAN"
                                    }
                                },
                                "example": {}
                            }
                        }
                    ],
                    "responses": {
                        "200": {
                            "description": "Successful operation",
                            "examples": {
                                "application/json": {
                                    "subnet": "192.168.1.0/24",
                                    "applianceIp": "192.168.1.2"
                                }
                            }
                        }
                    },
                    "summary": "Update single LAN configuration",
                    "tags": [
                        "appliance",
                        "configure",
                        "singleLan"
                    ]
                }
            }
        },
        {
            "ruleId": "add-path",
            "message": "`/networks/{networkId}/appliance/trafficShaping/customPerformanceClasses` - Added",
            "messageHtml": "Path added   <br>\n      <br>\n      - New endpoint\n      <h4>List all custom performance classes for an MX network</h4>\n      <p>   \n      <b class=\"mr-4 badge get\">GET</b>  <code>/networks/{networkId}/appliance/trafficShaping/customPerformanceClasses</code>\n      <br>  \n      <pre><code>[\n    {\n        &quot;customPerformanceClassId&quot;: &quot;123&quot;,\n        &quot;name&quot;: &quot;myCustomPerformanceClass&quot;,\n        &quot;maxLatency&quot;: 100,\n        &quot;maxJitter&quot;: 100,\n        &quot;maxLossPercentage&quot;: 5\n    }\n]</code></pre>\n      </p>\n      <hr>\n      \n      <br>\n      - New endpoint\n      <h4>Add a custom performance class for an MX network</h4>\n      <p>   \n      <b class=\"mr-4 badge post\">POST</b>  <code>/networks/{networkId}/appliance/trafficShaping/customPerformanceClasses</code>\n      <br>  \n      <pre><code>{\n    &quot;customPerformanceClassId&quot;: &quot;123&quot;,\n    &quot;name&quot;: &quot;myCustomPerformanceClass&quot;,\n    &quot;maxLatency&quot;: 100,\n    &quot;maxJitter&quot;: 100,\n    &quot;maxLossPercentage&quot;: 5\n}</code></pre>\n      </p>\n      <hr>\n      ",
            "path": "/networks/{networkId}/appliance/trafficShaping/customPerformanceClasses",
            "details": {
                "get": {
                    "description": "List all custom performance classes for an MX network",
                    "operationId": "getNetworkApplianceTrafficShapingCustomPerformanceClasses",
                    "parameters": {
                        "networkId": {
                            "name": "networkId",
                            "in": "path",
                            "type": "string",
                            "required": true
                        }
                    },
                    "responses": {
                        "200": {
                            "description": "Successful operation",
                            "examples": {
                                "application/json": [{
                                    "customPerformanceClassId": "123",
                                    "name": "myCustomPerformanceClass",
                                    "maxLatency": 100,
                                    "maxJitter": 100,
                                    "maxLossPercentage": 5
                                }]
                            }
                        }
                    },
                    "summary": "List all custom performance classes for an MX network",
                    "tags": [
                        "appliance",
                        "configure",
                        "trafficShaping",
                        "customPerformanceClasses"
                    ],
                    "consumes": [
                        "application/json"
                    ],
                    "produces": [
                        "application/json"
                    ],
                    "schemes": [
                        "https"
                    ],
                    "security": [{
                        "meraki_api_key": []
                    }]
                },
                "post": {
                    "description": "Add a custom performance class for an MX network",
                    "operationId": "createNetworkApplianceTrafficShapingCustomPerformanceClass",
                    "parameters": {
                        "networkId": {
                            "name": "networkId",
                            "in": "path",
                            "type": "string",
                            "required": true
                        },
                        "createNetworkApplianceTrafficShapingCustomPerformanceClass": {
                            "name": "createNetworkApplianceTrafficShapingCustomPerformanceClass",
                            "in": "body",
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "description": "Name of the custom performance class",
                                        "required": true
                                    },
                                    "maxLatency": {
                                        "type": "integer",
                                        "description": "Maximum latency in milliseconds"
                                    },
                                    "maxJitter": {
                                        "type": "integer",
                                        "description": "Maximum jitter in milliseconds"
                                    },
                                    "maxLossPercentage": {
                                        "type": "integer",
                                        "description": "Maximum percentage of packet loss"
                                    }
                                },
                                "example": {
                                    "name": "myCustomPerformanceClass",
                                    "maxLatency": 100,
                                    "maxJitter": 100,
                                    "maxLossPercentage": 5
                                }
                            },
                            "required": true
                        }
                    },
                    "responses": {
                        "201": {
                            "description": "Successful operation",
                            "examples": {
                                "application/json": {
                                    "customPerformanceClassId": "123",
                                    "name": "myCustomPerformanceClass",
                                    "maxLatency": 100,
                                    "maxJitter": 100,
                                    "maxLossPercentage": 5
                                }
                            }
                        }
                    },
                    "summary": "Add a custom performance class for an MX network",
                    "tags": [
                        "appliance",
                        "configure",
                        "trafficShaping",
                        "customPerformanceClasses"
                    ],
                    "consumes": [
                        "application/json"
                    ],
                    "produces": [
                        "application/json"
                    ],
                    "schemes": [
                        "https"
                    ],
                    "security": [{
                        "meraki_api_key": []
                    }]
                }
            },
            "type": "infos",
            "name": "What's Updated",
            "group": "appliance",
            "apiDetails": {
                "get": {
                    "description": "List all custom performance classes for an MX network",
                    "operationId": "getNetworkApplianceTrafficShapingCustomPerformanceClasses",
                    "parameters": [{
                        "name": "networkId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }],
                    "responses": {
                        "200": {
                            "description": "Successful operation",
                            "examples": {
                                "application/json": [{
                                    "customPerformanceClassId": "123",
                                    "name": "myCustomPerformanceClass",
                                    "maxLatency": 100,
                                    "maxJitter": 100,
                                    "maxLossPercentage": 5
                                }]
                            }
                        }
                    },
                    "summary": "List all custom performance classes for an MX network",
                    "tags": [
                        "appliance",
                        "configure",
                        "trafficShaping",
                        "customPerformanceClasses"
                    ]
                },
                "post": {
                    "description": "Add a custom performance class for an MX network",
                    "operationId": "createNetworkApplianceTrafficShapingCustomPerformanceClass",
                    "parameters": [{
                            "name": "networkId",
                            "in": "path",
                            "type": "string",
                            "required": true
                        },
                        {
                            "name": "createNetworkApplianceTrafficShapingCustomPerformanceClass",
                            "in": "body",
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "description": "Name of the custom performance class",
                                        "required": true
                                    },
                                    "maxLatency": {
                                        "type": "integer",
                                        "description": "Maximum latency in milliseconds"
                                    },
                                    "maxJitter": {
                                        "type": "integer",
                                        "description": "Maximum jitter in milliseconds"
                                    },
                                    "maxLossPercentage": {
                                        "type": "integer",
                                        "description": "Maximum percentage of packet loss"
                                    }
                                },
                                "example": {
                                    "name": "myCustomPerformanceClass",
                                    "maxLatency": 100,
                                    "maxJitter": 100,
                                    "maxLossPercentage": 5
                                }
                            },
                            "required": true
                        }
                    ],
                    "responses": {
                        "201": {
                            "description": "Successful operation",
                            "examples": {
                                "application/json": {
                                    "customPerformanceClassId": "123",
                                    "name": "myCustomPerformanceClass",
                                    "maxLatency": 100,
                                    "maxJitter": 100,
                                    "maxLossPercentage": 5
                                }
                            }
                        }
                    },
                    "summary": "Add a custom performance class for an MX network",
                    "tags": [
                        "appliance",
                        "configure",
                        "trafficShaping",
                        "customPerformanceClasses"
                    ]
                }
            }
        },
        {
            "ruleId": "add-path",
            "message": "`/networks/{networkId}/appliance/trafficShaping/customPerformanceClasses/{customPerformanceClassId}` - Added",
            "messageHtml": "Path added   <br>\n      <br>\n      - New endpoint\n      <h4>Return a custom performance class for an MX network</h4>\n      <p>   \n      <b class=\"mr-4 badge get\">GET</b>  <code>/networks/{networkId}/appliance/trafficShaping/customPerformanceClasses/{customPerformanceClassId}</code>\n      <br>  \n      <pre><code>{\n    &quot;customPerformanceClassId&quot;: &quot;123&quot;,\n    &quot;name&quot;: &quot;myCustomPerformanceClass&quot;,\n    &quot;maxLatency&quot;: 100,\n    &quot;maxJitter&quot;: 100,\n    &quot;maxLossPercentage&quot;: 5\n}</code></pre>\n      </p>\n      <hr>\n      \n      <br>\n      - New endpoint\n      <h4>Update a custom performance class for an MX network</h4>\n      <p>   \n      <b class=\"mr-4 badge put\">PUT</b>  <code>/networks/{networkId}/appliance/trafficShaping/customPerformanceClasses/{customPerformanceClassId}</code>\n      <br>  \n      <pre><code>{\n    &quot;customPerformanceClassId&quot;: &quot;123&quot;,\n    &quot;name&quot;: &quot;myCustomPerformanceClass&quot;,\n    &quot;maxLatency&quot;: 100,\n    &quot;maxJitter&quot;: 100,\n    &quot;maxLossPercentage&quot;: 5\n}</code></pre>\n      </p>\n      <hr>\n      \n      <br>\n      - New endpoint\n      <h4>Delete a custom performance class from an MX network</h4>\n      <p>   \n      <b class=\"mr-4 badge delete\">DELETE</b>  <code>/networks/{networkId}/appliance/trafficShaping/customPerformanceClasses/{customPerformanceClassId}</code>\n      <br>  \n      <pre><code></code></pre>\n      </p>\n      <hr>\n      ",
            "path": "/networks/{networkId}/appliance/trafficShaping/customPerformanceClasses/{customPerformanceClassId}",
            "details": {
                "get": {
                    "description": "Return a custom performance class for an MX network",
                    "operationId": "getNetworkApplianceTrafficShapingCustomPerformanceClass",
                    "parameters": {
                        "networkId": {
                            "name": "networkId",
                            "in": "path",
                            "type": "string",
                            "required": true
                        },
                        "customPerformanceClassId": {
                            "name": "customPerformanceClassId",
                            "in": "path",
                            "type": "string",
                            "required": true
                        }
                    },
                    "responses": {
                        "200": {
                            "description": "Successful operation",
                            "examples": {
                                "application/json": {
                                    "customPerformanceClassId": "123",
                                    "name": "myCustomPerformanceClass",
                                    "maxLatency": 100,
                                    "maxJitter": 100,
                                    "maxLossPercentage": 5
                                }
                            }
                        }
                    },
                    "summary": "Return a custom performance class for an MX network",
                    "tags": [
                        "appliance",
                        "configure",
                        "trafficShaping",
                        "customPerformanceClasses"
                    ],
                    "consumes": [
                        "application/json"
                    ],
                    "produces": [
                        "application/json"
                    ],
                    "schemes": [
                        "https"
                    ],
                    "security": [{
                        "meraki_api_key": []
                    }]
                },
                "put": {
                    "description": "Update a custom performance class for an MX network",
                    "operationId": "updateNetworkApplianceTrafficShapingCustomPerformanceClass",
                    "parameters": {
                        "networkId": {
                            "name": "networkId",
                            "in": "path",
                            "type": "string",
                            "required": true
                        },
                        "customPerformanceClassId": {
                            "name": "customPerformanceClassId",
                            "in": "path",
                            "type": "string",
                            "required": true
                        },
                        "updateNetworkApplianceTrafficShapingCustomPerformanceClass": {
                            "name": "updateNetworkApplianceTrafficShapingCustomPerformanceClass",
                            "in": "body",
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "description": "Name of the custom performance class"
                                    },
                                    "maxLatency": {
                                        "type": "integer",
                                        "description": "Maximum latency in milliseconds"
                                    },
                                    "maxJitter": {
                                        "type": "integer",
                                        "description": "Maximum jitter in milliseconds"
                                    },
                                    "maxLossPercentage": {
                                        "type": "integer",
                                        "description": "Maximum percentage of packet loss"
                                    }
                                },
                                "example": {
                                    "name": "myCustomPerformanceClass",
                                    "maxLatency": 100,
                                    "maxJitter": 100,
                                    "maxLossPercentage": 5
                                }
                            }
                        }
                    },
                    "responses": {
                        "200": {
                            "description": "Successful operation",
                            "examples": {
                                "application/json": {
                                    "customPerformanceClassId": "123",
                                    "name": "myCustomPerformanceClass",
                                    "maxLatency": 100,
                                    "maxJitter": 100,
                                    "maxLossPercentage": 5
                                }
                            }
                        }
                    },
                    "summary": "Update a custom performance class for an MX network",
                    "tags": [
                        "appliance",
                        "configure",
                        "trafficShaping",
                        "customPerformanceClasses"
                    ],
                    "consumes": [
                        "application/json"
                    ],
                    "produces": [
                        "application/json"
                    ],
                    "schemes": [
                        "https"
                    ],
                    "security": [{
                        "meraki_api_key": []
                    }]
                },
                "delete": {
                    "description": "Delete a custom performance class from an MX network",
                    "operationId": "deleteNetworkApplianceTrafficShapingCustomPerformanceClass",
                    "parameters": {
                        "networkId": {
                            "name": "networkId",
                            "in": "path",
                            "type": "string",
                            "required": true
                        },
                        "customPerformanceClassId": {
                            "name": "customPerformanceClassId",
                            "in": "path",
                            "type": "string",
                            "required": true
                        }
                    },
                    "responses": {
                        "204": {
                            "description": "Successful operation"
                        }
                    },
                    "summary": "Delete a custom performance class from an MX network",
                    "tags": [
                        "appliance",
                        "configure",
                        "trafficShaping",
                        "customPerformanceClasses"
                    ],
                    "consumes": [
                        "application/json"
                    ],
                    "produces": [
                        "application/json"
                    ],
                    "schemes": [
                        "https"
                    ],
                    "security": [{
                        "meraki_api_key": []
                    }]
                }
            },
            "type": "infos",
            "name": "What's Updated",
            "group": "appliance",
            "apiDetails": {
                "get": {
                    "description": "Return a custom performance class for an MX network",
                    "operationId": "getNetworkApplianceTrafficShapingCustomPerformanceClass",
                    "parameters": [{
                            "name": "networkId",
                            "in": "path",
                            "type": "string",
                            "required": true
                        },
                        {
                            "name": "customPerformanceClassId",
                            "in": "path",
                            "type": "string",
                            "required": true
                        }
                    ],
                    "responses": {
                        "200": {
                            "description": "Successful operation",
                            "examples": {
                                "application/json": {
                                    "customPerformanceClassId": "123",
                                    "name": "myCustomPerformanceClass",
                                    "maxLatency": 100,
                                    "maxJitter": 100,
                                    "maxLossPercentage": 5
                                }
                            }
                        }
                    },
                    "summary": "Return a custom performance class for an MX network",
                    "tags": [
                        "appliance",
                        "configure",
                        "trafficShaping",
                        "customPerformanceClasses"
                    ]
                },
                "put": {
                    "description": "Update a custom performance class for an MX network",
                    "operationId": "updateNetworkApplianceTrafficShapingCustomPerformanceClass",
                    "parameters": [{
                            "name": "networkId",
                            "in": "path",
                            "type": "string",
                            "required": true
                        },
                        {
                            "name": "customPerformanceClassId",
                            "in": "path",
                            "type": "string",
                            "required": true
                        },
                        {
                            "name": "updateNetworkApplianceTrafficShapingCustomPerformanceClass",
                            "in": "body",
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "description": "Name of the custom performance class"
                                    },
                                    "maxLatency": {
                                        "type": "integer",
                                        "description": "Maximum latency in milliseconds"
                                    },
                                    "maxJitter": {
                                        "type": "integer",
                                        "description": "Maximum jitter in milliseconds"
                                    },
                                    "maxLossPercentage": {
                                        "type": "integer",
                                        "description": "Maximum percentage of packet loss"
                                    }
                                },
                                "example": {
                                    "name": "myCustomPerformanceClass",
                                    "maxLatency": 100,
                                    "maxJitter": 100,
                                    "maxLossPercentage": 5
                                }
                            }
                        }
                    ],
                    "responses": {
                        "200": {
                            "description": "Successful operation",
                            "examples": {
                                "application/json": {
                                    "customPerformanceClassId": "123",
                                    "name": "myCustomPerformanceClass",
                                    "maxLatency": 100,
                                    "maxJitter": 100,
                                    "maxLossPercentage": 5
                                }
                            }
                        }
                    },
                    "summary": "Update a custom performance class for an MX network",
                    "tags": [
                        "appliance",
                        "configure",
                        "trafficShaping",
                        "customPerformanceClasses"
                    ]
                },
                "delete": {
                    "description": "Delete a custom performance class from an MX network",
                    "operationId": "deleteNetworkApplianceTrafficShapingCustomPerformanceClass",
                    "parameters": [{
                            "name": "networkId",
                            "in": "path",
                            "type": "string",
                            "required": true
                        },
                        {
                            "name": "customPerformanceClassId",
                            "in": "path",
                            "type": "string",
                            "required": true
                        }
                    ],
                    "responses": {
                        "204": {
                            "description": "Successful operation"
                        }
                    },
                    "summary": "Delete a custom performance class from an MX network",
                    "tags": [
                        "appliance",
                        "configure",
                        "trafficShaping",
                        "customPerformanceClasses"
                    ]
                }
            }
        },
        {
            "ruleId": "add-path",
            "message": "`/networks/{networkId}/appliance/trafficShaping/rules` - Added",
            "messageHtml": "Path added   <br>\n      <br>\n      - New endpoint\n      <h4>Display the traffic shaping settings rules for an MX network</h4>\n      <p>   \n      <b class=\"mr-4 badge get\">GET</b>  <code>/networks/{networkId}/appliance/trafficShaping/rules</code>\n      <br>  \n      <pre><code>{\n    &quot;defaultRulesEnabled&quot;: true,\n    &quot;rules&quot;: [\n        {\n            &quot;definitions&quot;: [\n                {\n                    &quot;type&quot;: &quot;host&quot;,\n                    &quot;value&quot;: &quot;google.com&quot;\n                },\n                {\n                    &quot;type&quot;: &quot;port&quot;,\n                    &quot;value&quot;: &quot;9090&quot;\n                },\n                {\n                    &quot;type&quot;: &quot;ipRange&quot;,\n                    &quot;value&quot;: &quot;192.1.0.0&quot;\n                },\n                {\n                    &quot;type&quot;: &quot;ipRange&quot;,\n                    &quot;value&quot;: &quot;192.1.0.0/16&quot;\n                },\n                {\n                    &quot;type&quot;: &quot;ipRange&quot;,\n                    &quot;value&quot;: &quot;10.1.0.0/16:80&quot;\n                },\n                {\n                    &quot;type&quot;: &quot;localNet&quot;,\n                    &quot;value&quot;: &quot;192.168.0.0/16&quot;\n                },\n                {\n                    &quot;type&quot;: &quot;applicationCategory&quot;,\n                    &quot;value&quot;: {\n                        &quot;id&quot;: &quot;meraki:layer7/category/2&quot;,\n                        &quot;name&quot;: &quot;Blogging&quot;\n                    }\n                },\n                {\n                    &quot;type&quot;: &quot;application&quot;,\n                    &quot;value&quot;: {\n                        &quot;id&quot;: &quot;meraki:layer7/application/133&quot;,\n                        &quot;name&quot;: &quot;Battle.net&quot;\n                    }\n                }\n            ],\n            &quot;perClientBandwidthLimits&quot;: {\n                &quot;settings&quot;: &quot;custom&quot;,\n                &quot;bandwidthLimits&quot;: {\n                    &quot;limitUp&quot;: 1000000,\n                    &quot;limitDown&quot;: 1000000\n                }\n            },\n            &quot;dscpTagValue&quot;: null,\n            &quot;priority&quot;: &quot;normal&quot;\n        }\n    ]\n}</code></pre>\n      </p>\n      <hr>\n      \n      <br>\n      - New endpoint\n      <h4>Update the traffic shaping settings rules for an MX network</h4>\n      <p>   \n      <b class=\"mr-4 badge put\">PUT</b>  <code>/networks/{networkId}/appliance/trafficShaping/rules</code>\n      <br>  \n      <pre><code>{\n    &quot;defaultRulesEnabled&quot;: true,\n    &quot;rules&quot;: [\n        {\n            &quot;definitions&quot;: [\n                {\n                    &quot;type&quot;: &quot;host&quot;,\n                    &quot;value&quot;: &quot;google.com&quot;\n                },\n                {\n                    &quot;type&quot;: &quot;port&quot;,\n                    &quot;value&quot;: &quot;9090&quot;\n                },\n                {\n                    &quot;type&quot;: &quot;ipRange&quot;,\n                    &quot;value&quot;: &quot;192.1.0.0&quot;\n                },\n                {\n                    &quot;type&quot;: &quot;ipRange&quot;,\n                    &quot;value&quot;: &quot;192.1.0.0/16&quot;\n                },\n                {\n                    &quot;type&quot;: &quot;ipRange&quot;,\n                    &quot;value&quot;: &quot;10.1.0.0/16:80&quot;\n                },\n                {\n                    &quot;type&quot;: &quot;localNet&quot;,\n                    &quot;value&quot;: &quot;192.168.0.0/16&quot;\n                },\n                {\n                    &quot;type&quot;: &quot;applicationCategory&quot;,\n                    &quot;value&quot;: {\n                        &quot;id&quot;: &quot;meraki:layer7/category/2&quot;,\n                        &quot;name&quot;: &quot;Blogging&quot;\n                    }\n                },\n                {\n                    &quot;type&quot;: &quot;application&quot;,\n                    &quot;value&quot;: {\n                        &quot;id&quot;: &quot;meraki:layer7/application/133&quot;,\n                        &quot;name&quot;: &quot;Battle.net&quot;\n                    }\n                }\n            ],\n            &quot;perClientBandwidthLimits&quot;: {\n                &quot;settings&quot;: &quot;custom&quot;,\n                &quot;bandwidthLimits&quot;: {\n                    &quot;limitUp&quot;: 1000000,\n                    &quot;limitDown&quot;: 1000000\n                }\n            },\n            &quot;dscpTagValue&quot;: null,\n            &quot;priority&quot;: &quot;normal&quot;\n        }\n    ]\n}</code></pre>\n      </p>\n      <hr>\n      ",
            "path": "/networks/{networkId}/appliance/trafficShaping/rules",
            "details": {
                "get": {
                    "description": "Display the traffic shaping settings rules for an MX network",
                    "operationId": "getNetworkApplianceTrafficShapingRules",
                    "parameters": {
                        "networkId": {
                            "name": "networkId",
                            "in": "path",
                            "type": "string",
                            "required": true
                        }
                    },
                    "responses": {
                        "200": {
                            "description": "Successful operation",
                            "examples": {
                                "application/json": {
                                    "defaultRulesEnabled": true,
                                    "rules": [{
                                        "definitions": [{
                                                "type": "host",
                                                "value": "google.com"
                                            },
                                            {
                                                "type": "port",
                                                "value": "9090"
                                            },
                                            {
                                                "type": "ipRange",
                                                "value": "192.1.0.0"
                                            },
                                            {
                                                "type": "ipRange",
                                                "value": "192.1.0.0/16"
                                            },
                                            {
                                                "type": "ipRange",
                                                "value": "10.1.0.0/16:80"
                                            },
                                            {
                                                "type": "localNet",
                                                "value": "192.168.0.0/16"
                                            },
                                            {
                                                "type": "applicationCategory",
                                                "value": {
                                                    "id": "meraki:layer7/category/2",
                                                    "name": "Blogging"
                                                }
                                            },
                                            {
                                                "type": "application",
                                                "value": {
                                                    "id": "meraki:layer7/application/133",
                                                    "name": "Battle.net"
                                                }
                                            }
                                        ],
                                        "perClientBandwidthLimits": {
                                            "settings": "custom",
                                            "bandwidthLimits": {
                                                "limitUp": 1000000,
                                                "limitDown": 1000000
                                            }
                                        },
                                        "dscpTagValue": null,
                                        "priority": "normal"
                                    }]
                                }
                            }
                        }
                    },
                    "summary": "Display the traffic shaping settings rules for an MX network",
                    "tags": [
                        "appliance",
                        "configure",
                        "trafficShaping",
                        "rules"
                    ],
                    "consumes": [
                        "application/json"
                    ],
                    "produces": [
                        "application/json"
                    ],
                    "schemes": [
                        "https"
                    ],
                    "security": [{
                        "meraki_api_key": []
                    }]
                },
                "put": {
                    "description": "Update the traffic shaping settings rules for an MX network",
                    "operationId": "updateNetworkApplianceTrafficShapingRules",
                    "parameters": {
                        "networkId": {
                            "name": "networkId",
                            "in": "path",
                            "type": "string",
                            "required": true
                        },
                        "updateNetworkApplianceTrafficShapingRules": {
                            "name": "updateNetworkApplianceTrafficShapingRules",
                            "in": "body",
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "defaultRulesEnabled": {
                                        "type": "boolean",
                                        "description": "    Whether default traffic shaping rules are enabled (true) or disabled (false).\n    There are 4 default rules, which can\n    be seen on your network's traffic shaping page. Note that default rules\n    count against the rule limit of 8.\n"
                                    },
                                    "rules": {
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "definitions": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "type": {
                                                                "type": "string",
                                                                "enum": [
                                                                    "application",
                                                                    "applicationCategory",
                                                                    "host",
                                                                    "port",
                                                                    "ipRange",
                                                                    "localNet"
                                                                ],
                                                                "description": "The type of definition. Can be one of 'application', 'applicationCategory', 'host', 'port', 'ipRange' or 'localNet'.",
                                                                "required": true
                                                            },
                                                            "value": {
                                                                "type": "string",
                                                                "description": "    If \"type\" is 'host', 'port', 'ipRange' or 'localNet', then \"value\" must be a string, matching either\n    a hostname (e.g. \"somesite.com\"), a port (e.g. 8080), or an IP range (\"192.1.0.0\",\n    \"192.1.0.0/16\", or \"10.1.0.0/16:80\"). 'localNet' also supports CIDR notation, excluding\n    custom ports.\n     If \"type\" is 'application' or 'applicationCategory', then \"value\" must be an object\n    with the structure { \"id\": \"meraki:layer7/...\" }, where \"id\" is the application category or\n    application ID (for a list of IDs for your network, use the trafficShaping/applicationCategories\n    endpoint).\n",
                                                                "required": true
                                                            }
                                                        }
                                                    },
                                                    "description": "    A list of objects describing the definitions of your traffic shaping rule. At least one definition is required.\n",
                                                    "required": true
                                                },
                                                "perClientBandwidthLimits": {
                                                    "type": "object",
                                                    "properties": {
                                                        "settings": {
                                                            "type": "string",
                                                            "description": "How bandwidth limits are applied by your rule. Can be one of 'network default', 'ignore' or 'custom'."
                                                        },
                                                        "bandwidthLimits": {
                                                            "type": "object",
                                                            "properties": {
                                                                "limitUp": {
                                                                    "type": "integer",
                                                                    "description": "The maximum upload limit (integer, in Kbps)."
                                                                },
                                                                "limitDown": {
                                                                    "type": "integer",
                                                                    "description": "The maximum download limit (integer, in Kbps)."
                                                                }
                                                            },
                                                            "description": "The bandwidth limits object, specifying the upload ('limitUp') and download ('limitDown') speed in Kbps. These are only enforced if 'settings' is set to 'custom'."
                                                        }
                                                    },
                                                    "description": "    An object describing the bandwidth settings for your rule.\n"
                                                },
                                                "dscpTagValue": {
                                                    "type": "integer",
                                                    "description": "    The DSCP tag applied by your rule. null means 'Do not change DSCP tag'.\n    For a list of possible tag values, use the trafficShaping/dscpTaggingOptions endpoint.\n"
                                                },
                                                "priority": {
                                                    "type": "string",
                                                    "description": "    A string, indicating the priority level for packets bound to your rule.\n    Can be 'low', 'normal' or 'high'.\n"
                                                }
                                            }
                                        },
                                        "description": "    An array of traffic shaping rules. Rules are applied in the order that\n    they are specified in. An empty list (or null) means no rules. Note that\n    you are allowed a maximum of 8 rules.\n"
                                    }
                                },
                                "example": {
                                    "defaultRulesEnabled": true,
                                    "rules": [{
                                        "definitions": [{
                                                "type": "host",
                                                "value": "google.com"
                                            },
                                            {
                                                "type": "port",
                                                "value": "9090"
                                            },
                                            {
                                                "type": "ipRange",
                                                "value": "192.1.0.0"
                                            },
                                            {
                                                "type": "ipRange",
                                                "value": "192.1.0.0/16"
                                            },
                                            {
                                                "type": "ipRange",
                                                "value": "10.1.0.0/16:80"
                                            },
                                            {
                                                "type": "localNet",
                                                "value": "192.168.0.0/16"
                                            },
                                            {
                                                "type": "applicationCategory",
                                                "value": {
                                                    "id": "meraki:layer7/category/2",
                                                    "name": "Blogging"
                                                }
                                            },
                                            {
                                                "type": "application",
                                                "value": {
                                                    "id": "meraki:layer7/application/133",
                                                    "name": "Battle.net"
                                                }
                                            }
                                        ],
                                        "perClientBandwidthLimits": {
                                            "settings": "custom",
                                            "bandwidthLimits": {
                                                "limitUp": 1000000,
                                                "limitDown": 1000000
                                            }
                                        },
                                        "dscpTagValue": null,
                                        "priority": "normal"
                                    }]
                                }
                            }
                        }
                    },
                    "responses": {
                        "200": {
                            "description": "Successful operation",
                            "examples": {
                                "application/json": {
                                    "defaultRulesEnabled": true,
                                    "rules": [{
                                        "definitions": [{
                                                "type": "host",
                                                "value": "google.com"
                                            },
                                            {
                                                "type": "port",
                                                "value": "9090"
                                            },
                                            {
                                                "type": "ipRange",
                                                "value": "192.1.0.0"
                                            },
                                            {
                                                "type": "ipRange",
                                                "value": "192.1.0.0/16"
                                            },
                                            {
                                                "type": "ipRange",
                                                "value": "10.1.0.0/16:80"
                                            },
                                            {
                                                "type": "localNet",
                                                "value": "192.168.0.0/16"
                                            },
                                            {
                                                "type": "applicationCategory",
                                                "value": {
                                                    "id": "meraki:layer7/category/2",
                                                    "name": "Blogging"
                                                }
                                            },
                                            {
                                                "type": "application",
                                                "value": {
                                                    "id": "meraki:layer7/application/133",
                                                    "name": "Battle.net"
                                                }
                                            }
                                        ],
                                        "perClientBandwidthLimits": {
                                            "settings": "custom",
                                            "bandwidthLimits": {
                                                "limitUp": 1000000,
                                                "limitDown": 1000000
                                            }
                                        },
                                        "dscpTagValue": null,
                                        "priority": "normal"
                                    }]
                                }
                            }
                        }
                    },
                    "summary": "Update the traffic shaping settings rules for an MX network",
                    "tags": [
                        "appliance",
                        "configure",
                        "trafficShaping",
                        "rules"
                    ],
                    "consumes": [
                        "application/json"
                    ],
                    "produces": [
                        "application/json"
                    ],
                    "schemes": [
                        "https"
                    ],
                    "security": [{
                        "meraki_api_key": []
                    }]
                }
            },
            "type": "infos",
            "name": "What's Updated",
            "group": "appliance",
            "apiDetails": {
                "put": {
                    "description": "Update the traffic shaping settings rules for an MX network",
                    "operationId": "updateNetworkApplianceTrafficShapingRules",
                    "parameters": [{
                            "name": "networkId",
                            "in": "path",
                            "type": "string",
                            "required": true
                        },
                        {
                            "name": "updateNetworkApplianceTrafficShapingRules",
                            "in": "body",
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "defaultRulesEnabled": {
                                        "type": "boolean",
                                        "description": "    Whether default traffic shaping rules are enabled (true) or disabled (false).\n    There are 4 default rules, which can\n    be seen on your network's traffic shaping page. Note that default rules\n    count against the rule limit of 8.\n"
                                    },
                                    "rules": {
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "definitions": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "type": {
                                                                "type": "string",
                                                                "enum": [
                                                                    "application",
                                                                    "applicationCategory",
                                                                    "host",
                                                                    "port",
                                                                    "ipRange",
                                                                    "localNet"
                                                                ],
                                                                "description": "The type of definition. Can be one of 'application', 'applicationCategory', 'host', 'port', 'ipRange' or 'localNet'.",
                                                                "required": true
                                                            },
                                                            "value": {
                                                                "type": "string",
                                                                "description": "    If \"type\" is 'host', 'port', 'ipRange' or 'localNet', then \"value\" must be a string, matching either\n    a hostname (e.g. \"somesite.com\"), a port (e.g. 8080), or an IP range (\"192.1.0.0\",\n    \"192.1.0.0/16\", or \"10.1.0.0/16:80\"). 'localNet' also supports CIDR notation, excluding\n    custom ports.\n     If \"type\" is 'application' or 'applicationCategory', then \"value\" must be an object\n    with the structure { \"id\": \"meraki:layer7/...\" }, where \"id\" is the application category or\n    application ID (for a list of IDs for your network, use the trafficShaping/applicationCategories\n    endpoint).\n",
                                                                "required": true
                                                            }
                                                        }
                                                    },
                                                    "description": "    A list of objects describing the definitions of your traffic shaping rule. At least one definition is required.\n",
                                                    "required": true
                                                },
                                                "perClientBandwidthLimits": {
                                                    "type": "object",
                                                    "properties": {
                                                        "settings": {
                                                            "type": "string",
                                                            "description": "How bandwidth limits are applied by your rule. Can be one of 'network default', 'ignore' or 'custom'."
                                                        },
                                                        "bandwidthLimits": {
                                                            "type": "object",
                                                            "properties": {
                                                                "limitUp": {
                                                                    "type": "integer",
                                                                    "description": "The maximum upload limit (integer, in Kbps)."
                                                                },
                                                                "limitDown": {
                                                                    "type": "integer",
                                                                    "description": "The maximum download limit (integer, in Kbps)."
                                                                }
                                                            },
                                                            "description": "The bandwidth limits object, specifying the upload ('limitUp') and download ('limitDown') speed in Kbps. These are only enforced if 'settings' is set to 'custom'."
                                                        }
                                                    },
                                                    "description": "    An object describing the bandwidth settings for your rule.\n"
                                                },
                                                "dscpTagValue": {
                                                    "type": "integer",
                                                    "description": "    The DSCP tag applied by your rule. null means 'Do not change DSCP tag'.\n    For a list of possible tag values, use the trafficShaping/dscpTaggingOptions endpoint.\n"
                                                },
                                                "priority": {
                                                    "type": "string",
                                                    "description": "    A string, indicating the priority level for packets bound to your rule.\n    Can be 'low', 'normal' or 'high'.\n"
                                                }
                                            }
                                        },
                                        "description": "    An array of traffic shaping rules. Rules are applied in the order that\n    they are specified in. An empty list (or null) means no rules. Note that\n    you are allowed a maximum of 8 rules.\n"
                                    }
                                },
                                "example": {
                                    "defaultRulesEnabled": true,
                                    "rules": [{
                                        "definitions": [{
                                                "type": "host",
                                                "value": "google.com"
                                            },
                                            {
                                                "type": "port",
                                                "value": "9090"
                                            },
                                            {
                                                "type": "ipRange",
                                                "value": "192.1.0.0"
                                            },
                                            {
                                                "type": "ipRange",
                                                "value": "192.1.0.0/16"
                                            },
                                            {
                                                "type": "ipRange",
                                                "value": "10.1.0.0/16:80"
                                            },
                                            {
                                                "type": "localNet",
                                                "value": "192.168.0.0/16"
                                            },
                                            {
                                                "type": "applicationCategory",
                                                "value": {
                                                    "id": "meraki:layer7/category/2",
                                                    "name": "Blogging"
                                                }
                                            },
                                            {
                                                "type": "application",
                                                "value": {
                                                    "id": "meraki:layer7/application/133",
                                                    "name": "Battle.net"
                                                }
                                            }
                                        ],
                                        "perClientBandwidthLimits": {
                                            "settings": "custom",
                                            "bandwidthLimits": {
                                                "limitUp": 1000000,
                                                "limitDown": 1000000
                                            }
                                        },
                                        "dscpTagValue": null,
                                        "priority": "normal"
                                    }]
                                }
                            }
                        }
                    ],
                    "responses": {
                        "200": {
                            "description": "Successful operation",
                            "examples": {
                                "application/json": {
                                    "defaultRulesEnabled": true,
                                    "rules": [{
                                        "definitions": [{
                                                "type": "host",
                                                "value": "google.com"
                                            },
                                            {
                                                "type": "port",
                                                "value": "9090"
                                            },
                                            {
                                                "type": "ipRange",
                                                "value": "192.1.0.0"
                                            },
                                            {
                                                "type": "ipRange",
                                                "value": "192.1.0.0/16"
                                            },
                                            {
                                                "type": "ipRange",
                                                "value": "10.1.0.0/16:80"
                                            },
                                            {
                                                "type": "localNet",
                                                "value": "192.168.0.0/16"
                                            },
                                            {
                                                "type": "applicationCategory",
                                                "value": {
                                                    "id": "meraki:layer7/category/2",
                                                    "name": "Blogging"
                                                }
                                            },
                                            {
                                                "type": "application",
                                                "value": {
                                                    "id": "meraki:layer7/application/133",
                                                    "name": "Battle.net"
                                                }
                                            }
                                        ],
                                        "perClientBandwidthLimits": {
                                            "settings": "custom",
                                            "bandwidthLimits": {
                                                "limitUp": 1000000,
                                                "limitDown": 1000000
                                            }
                                        },
                                        "dscpTagValue": null,
                                        "priority": "normal"
                                    }]
                                }
                            }
                        }
                    },
                    "summary": "Update the traffic shaping settings rules for an MX network",
                    "tags": [
                        "appliance",
                        "configure",
                        "trafficShaping",
                        "rules"
                    ]
                },
                "get": {
                    "description": "Display the traffic shaping settings rules for an MX network",
                    "operationId": "getNetworkApplianceTrafficShapingRules",
                    "parameters": [{
                        "name": "networkId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }],
                    "responses": {
                        "200": {
                            "description": "Successful operation",
                            "examples": {
                                "application/json": {
                                    "defaultRulesEnabled": true,
                                    "rules": [{
                                        "definitions": [{
                                                "type": "host",
                                                "value": "google.com"
                                            },
                                            {
                                                "type": "port",
                                                "value": "9090"
                                            },
                                            {
                                                "type": "ipRange",
                                                "value": "192.1.0.0"
                                            },
                                            {
                                                "type": "ipRange",
                                                "value": "192.1.0.0/16"
                                            },
                                            {
                                                "type": "ipRange",
                                                "value": "10.1.0.0/16:80"
                                            },
                                            {
                                                "type": "localNet",
                                                "value": "192.168.0.0/16"
                                            },
                                            {
                                                "type": "applicationCategory",
                                                "value": {
                                                    "id": "meraki:layer7/category/2",
                                                    "name": "Blogging"
                                                }
                                            },
                                            {
                                                "type": "application",
                                                "value": {
                                                    "id": "meraki:layer7/application/133",
                                                    "name": "Battle.net"
                                                }
                                            }
                                        ],
                                        "perClientBandwidthLimits": {
                                            "settings": "custom",
                                            "bandwidthLimits": {
                                                "limitUp": 1000000,
                                                "limitDown": 1000000
                                            }
                                        },
                                        "dscpTagValue": null,
                                        "priority": "normal"
                                    }]
                                }
                            }
                        }
                    },
                    "summary": "Display the traffic shaping settings rules for an MX network",
                    "tags": [
                        "appliance",
                        "configure",
                        "trafficShaping",
                        "rules"
                    ]
                }
            }
        },
        {
            "ruleId": "add-path",
            "message": "`/networks/{networkId}/appliance/trafficShaping/uplinkBandwidth` - Added",
            "messageHtml": "Path added   <br>\n      <br>\n      - New endpoint\n      <h4>Returns the uplink bandwidth settings for your MX network.</h4>\n      <p>   \n      <b class=\"mr-4 badge get\">GET</b>  <code>/networks/{networkId}/appliance/trafficShaping/uplinkBandwidth</code>\n      <br>  \n      <pre><code>{\n    &quot;bandwidthLimits&quot;: {\n        &quot;wan1&quot;: {\n            &quot;limitUp&quot;: 1000000,\n            &quot;limitDown&quot;: 1000000\n        },\n        &quot;wan2&quot;: {\n            &quot;limitUp&quot;: 1000000,\n            &quot;limitDown&quot;: 1000000\n        },\n        &quot;cellular&quot;: {\n            &quot;limitUp&quot;: 51200,\n            &quot;limitDown&quot;: 51200\n        }\n    }\n}</code></pre>\n      </p>\n      <hr>\n      \n      <br>\n      - New endpoint\n      <h4>Updates the uplink bandwidth settings for your MX network.</h4>\n      <p>   \n      <b class=\"mr-4 badge put\">PUT</b>  <code>/networks/{networkId}/appliance/trafficShaping/uplinkBandwidth</code>\n      <br>  \n      <pre><code>{\n    &quot;bandwidthLimits&quot;: {\n        &quot;wan1&quot;: {\n            &quot;limitUp&quot;: 1000000,\n            &quot;limitDown&quot;: 1000000\n        },\n        &quot;wan2&quot;: {\n            &quot;limitUp&quot;: 1000000,\n            &quot;limitDown&quot;: 1000000\n        },\n        &quot;cellular&quot;: {\n            &quot;limitUp&quot;: 51200,\n            &quot;limitDown&quot;: 51200\n        }\n    }\n}</code></pre>\n      </p>\n      <hr>\n      ",
            "path": "/networks/{networkId}/appliance/trafficShaping/uplinkBandwidth",
            "details": {
                "get": {
                    "description": "Returns the uplink bandwidth settings for your MX network.",
                    "operationId": "getNetworkApplianceTrafficShapingUplinkBandwidth",
                    "parameters": {
                        "networkId": {
                            "name": "networkId",
                            "in": "path",
                            "type": "string",
                            "required": true
                        }
                    },
                    "responses": {
                        "200": {
                            "description": "Successful operation",
                            "examples": {
                                "application/json": {
                                    "bandwidthLimits": {
                                        "wan1": {
                                            "limitUp": 1000000,
                                            "limitDown": 1000000
                                        },
                                        "wan2": {
                                            "limitUp": 1000000,
                                            "limitDown": 1000000
                                        },
                                        "cellular": {
                                            "limitUp": 51200,
                                            "limitDown": 51200
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "summary": "Returns the uplink bandwidth settings for your MX network.",
                    "tags": [
                        "appliance",
                        "configure",
                        "trafficShaping",
                        "uplinkBandwidth"
                    ],
                    "consumes": [
                        "application/json"
                    ],
                    "produces": [
                        "application/json"
                    ],
                    "schemes": [
                        "https"
                    ],
                    "security": [{
                        "meraki_api_key": []
                    }]
                },
                "put": {
                    "description": "Updates the uplink bandwidth settings for your MX network.",
                    "operationId": "updateNetworkApplianceTrafficShapingUplinkBandwidth",
                    "parameters": {
                        "networkId": {
                            "name": "networkId",
                            "in": "path",
                            "type": "string",
                            "required": true
                        },
                        "updateNetworkApplianceTrafficShapingUplinkBandwidth": {
                            "name": "updateNetworkApplianceTrafficShapingUplinkBandwidth",
                            "in": "body",
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "bandwidthLimits": {
                                        "type": "object",
                                        "properties": {
                                            "wan1": {
                                                "type": "object",
                                                "properties": {
                                                    "limitUp": {
                                                        "type": "integer",
                                                        "description": "The maximum upload limit (integer, in Kbps). null indicates no limit"
                                                    },
                                                    "limitDown": {
                                                        "type": "integer",
                                                        "description": "The maximum download limit (integer, in Kbps). null indicates no limit"
                                                    }
                                                },
                                                "description": "The bandwidth settings for the 'wan1' uplink"
                                            },
                                            "wan2": {
                                                "type": "object",
                                                "properties": {
                                                    "limitUp": {
                                                        "type": "integer",
                                                        "description": "The maximum upload limit (integer, in Kbps). null indicates no limit"
                                                    },
                                                    "limitDown": {
                                                        "type": "integer",
                                                        "description": "The maximum download limit (integer, in Kbps). null indicates no limit"
                                                    }
                                                },
                                                "description": "The bandwidth settings for the 'wan2' uplink"
                                            },
                                            "cellular": {
                                                "type": "object",
                                                "properties": {
                                                    "limitUp": {
                                                        "type": "integer",
                                                        "description": "The maximum upload limit (integer, in Kbps). null indicates no limit"
                                                    },
                                                    "limitDown": {
                                                        "type": "integer",
                                                        "description": "The maximum download limit (integer, in Kbps). null indicates no limit"
                                                    }
                                                },
                                                "description": "The bandwidth settings for the 'cellular' uplink"
                                            }
                                        },
                                        "description": "A mapping of uplinks to their bandwidth settings (be sure to check which uplinks are supported for your network)"
                                    }
                                },
                                "example": {
                                    "bandwidthLimits": {
                                        "wan1": {
                                            "limitUp": 1000000,
                                            "limitDown": 1000000
                                        },
                                        "wan2": {
                                            "limitUp": 1000000,
                                            "limitDown": 1000000
                                        },
                                        "cellular": {
                                            "limitUp": 51200,
                                            "limitDown": 51200
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "responses": {
                        "200": {
                            "description": "Successful operation",
                            "examples": {
                                "application/json": {
                                    "bandwidthLimits": {
                                        "wan1": {
                                            "limitUp": 1000000,
                                            "limitDown": 1000000
                                        },
                                        "wan2": {
                                            "limitUp": 1000000,
                                            "limitDown": 1000000
                                        },
                                        "cellular": {
                                            "limitUp": 51200,
                                            "limitDown": 51200
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "summary": "Updates the uplink bandwidth settings for your MX network.",
                    "tags": [
                        "appliance",
                        "configure",
                        "trafficShaping",
                        "uplinkBandwidth"
                    ],
                    "consumes": [
                        "application/json"
                    ],
                    "produces": [
                        "application/json"
                    ],
                    "schemes": [
                        "https"
                    ],
                    "security": [{
                        "meraki_api_key": []
                    }]
                }
            },
            "type": "infos",
            "name": "What's Updated",
            "group": "appliance",
            "apiDetails": {
                "get": {
                    "description": "Returns the uplink bandwidth settings for your MX network.",
                    "operationId": "getNetworkApplianceTrafficShapingUplinkBandwidth",
                    "parameters": [{
                        "name": "networkId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }],
                    "responses": {
                        "200": {
                            "description": "Successful operation",
                            "examples": {
                                "application/json": {
                                    "bandwidthLimits": {
                                        "wan1": {
                                            "limitUp": 1000000,
                                            "limitDown": 1000000
                                        },
                                        "wan2": {
                                            "limitUp": 1000000,
                                            "limitDown": 1000000
                                        },
                                        "cellular": {
                                            "limitUp": 51200,
                                            "limitDown": 51200
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "summary": "Returns the uplink bandwidth settings for your MX network.",
                    "tags": [
                        "appliance",
                        "configure",
                        "trafficShaping",
                        "uplinkBandwidth"
                    ]
                },
                "put": {
                    "description": "Updates the uplink bandwidth settings for your MX network.",
                    "operationId": "updateNetworkApplianceTrafficShapingUplinkBandwidth",
                    "parameters": [{
                            "name": "networkId",
                            "in": "path",
                            "type": "string",
                            "required": true
                        },
                        {
                            "name": "updateNetworkApplianceTrafficShapingUplinkBandwidth",
                            "in": "body",
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "bandwidthLimits": {
                                        "type": "object",
                                        "properties": {
                                            "wan1": {
                                                "type": "object",
                                                "properties": {
                                                    "limitUp": {
                                                        "type": "integer",
                                                        "description": "The maximum upload limit (integer, in Kbps). null indicates no limit"
                                                    },
                                                    "limitDown": {
                                                        "type": "integer",
                                                        "description": "The maximum download limit (integer, in Kbps). null indicates no limit"
                                                    }
                                                },
                                                "description": "The bandwidth settings for the 'wan1' uplink"
                                            },
                                            "wan2": {
                                                "type": "object",
                                                "properties": {
                                                    "limitUp": {
                                                        "type": "integer",
                                                        "description": "The maximum upload limit (integer, in Kbps). null indicates no limit"
                                                    },
                                                    "limitDown": {
                                                        "type": "integer",
                                                        "description": "The maximum download limit (integer, in Kbps). null indicates no limit"
                                                    }
                                                },
                                                "description": "The bandwidth settings for the 'wan2' uplink"
                                            },
                                            "cellular": {
                                                "type": "object",
                                                "properties": {
                                                    "limitUp": {
                                                        "type": "integer",
                                                        "description": "The maximum upload limit (integer, in Kbps). null indicates no limit"
                                                    },
                                                    "limitDown": {
                                                        "type": "integer",
                                                        "description": "The maximum download limit (integer, in Kbps). null indicates no limit"
                                                    }
                                                },
                                                "description": "The bandwidth settings for the 'cellular' uplink"
                                            }
                                        },
                                        "description": "A mapping of uplinks to their bandwidth settings (be sure to check which uplinks are supported for your network)"
                                    }
                                },
                                "example": {
                                    "bandwidthLimits": {
                                        "wan1": {
                                            "limitUp": 1000000,
                                            "limitDown": 1000000
                                        },
                                        "wan2": {
                                            "limitUp": 1000000,
                                            "limitDown": 1000000
                                        },
                                        "cellular": {
                                            "limitUp": 51200,
                                            "limitDown": 51200
                                        }
                                    }
                                }
                            }
                        }
                    ],
                    "responses": {
                        "200": {
                            "description": "Successful operation",
                            "examples": {
                                "application/json": {
                                    "bandwidthLimits": {
                                        "wan1": {
                                            "limitUp": 1000000,
                                            "limitDown": 1000000
                                        },
                                        "wan2": {
                                            "limitUp": 1000000,
                                            "limitDown": 1000000
                                        },
                                        "cellular": {
                                            "limitUp": 51200,
                                            "limitDown": 51200
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "summary": "Updates the uplink bandwidth settings for your MX network.",
                    "tags": [
                        "appliance",
                        "configure",
                        "trafficShaping",
                        "uplinkBandwidth"
                    ]
                }
            }
        },
        {
            "ruleId": "add-path",
            "message": "`/networks/{networkId}/appliance/trafficShaping/uplinkSelection` - Added",
            "messageHtml": "Path added   <br>\n      <br>\n      - New endpoint\n      <h4>Show uplink selection settings for an MX network</h4>\n      <p>   \n      <b class=\"mr-4 badge get\">GET</b>  <code>/networks/{networkId}/appliance/trafficShaping/uplinkSelection</code>\n      <br>  \n      <pre><code>{\n    &quot;activeActiveAutoVpnEnabled&quot;: true,\n    &quot;defaultUplink&quot;: &quot;wan1&quot;,\n    &quot;loadBalancingEnabled&quot;: true,\n    &quot;wanTrafficUplinkPreferences&quot;: [\n        {\n            &quot;trafficFilters&quot;: [\n                {\n                    &quot;type&quot;: &quot;custom&quot;,\n                    &quot;value&quot;: {\n                        &quot;protocol&quot;: &quot;tcp&quot;,\n                        &quot;source&quot;: {\n                            &quot;port&quot;: &quot;any&quot;,\n                            &quot;cidr&quot;: &quot;192.168.1.0/24&quot;\n                        },\n                        &quot;destination&quot;: {\n                            &quot;port&quot;: &quot;any&quot;,\n                            &quot;cidr&quot;: &quot;any&quot;\n                        }\n                    }\n                }\n            ],\n            &quot;preferredUplink&quot;: &quot;wan2&quot;\n        },\n        {\n            &quot;trafficFilters&quot;: [\n                {\n                    &quot;type&quot;: &quot;custom&quot;,\n                    &quot;value&quot;: {\n                        &quot;protocol&quot;: &quot;tcp&quot;,\n                        &quot;source&quot;: {\n                            &quot;port&quot;: &quot;1-1024&quot;,\n                            &quot;vlan&quot;: 10,\n                            &quot;host&quot;: 254\n                        },\n                        &quot;destination&quot;: {\n                            &quot;port&quot;: &quot;any&quot;,\n                            &quot;cidr&quot;: &quot;any&quot;\n                        }\n                    }\n                }\n            ],\n            &quot;preferredUplink&quot;: &quot;wan1&quot;\n        }\n    ],\n    &quot;vpnTrafficUplinkPreferences&quot;: [\n        {\n            &quot;trafficFilters&quot;: [\n                {\n                    &quot;type&quot;: &quot;applicationCategory&quot;,\n                    &quot;value&quot;: {\n                        &quot;id&quot;: &quot;meraki:layer7/category/1&quot;\n                    }\n                },\n                {\n                    &quot;type&quot;: &quot;application&quot;,\n                    &quot;value&quot;: {\n                        &quot;id&quot;: &quot;meraki:layer7/application/33&quot;\n                    }\n                },\n                {\n                    &quot;type&quot;: &quot;custom&quot;,\n                    &quot;value&quot;: {\n                        &quot;protocol&quot;: &quot;tcp&quot;,\n                        &quot;source&quot;: {\n                            &quot;port&quot;: &quot;any&quot;,\n                            &quot;cidr&quot;: &quot;192.168.1.0/24&quot;\n                        },\n                        &quot;destination&quot;: {\n                            &quot;port&quot;: &quot;any&quot;,\n                            &quot;cidr&quot;: &quot;any&quot;\n                        }\n                    }\n                },\n                {\n                    &quot;type&quot;: &quot;custom&quot;,\n                    &quot;value&quot;: {\n                        &quot;protocol&quot;: &quot;tcp&quot;,\n                        &quot;source&quot;: {\n                            &quot;port&quot;: &quot;any&quot;,\n                            &quot;cidr&quot;: &quot;any&quot;\n                        },\n                        &quot;destination&quot;: {\n                            &quot;port&quot;: &quot;any&quot;,\n                            &quot;network&quot;: &quot;L_23456789&quot;,\n                            &quot;vlan&quot;: 20,\n                            &quot;host&quot;: 200\n                        }\n                    }\n                },\n                {\n                    &quot;type&quot;: &quot;custom&quot;,\n                    &quot;value&quot;: {\n                        &quot;protocol&quot;: &quot;tcp&quot;,\n                        &quot;source&quot;: {\n                            &quot;port&quot;: &quot;any&quot;,\n                            &quot;cidr&quot;: &quot;any&quot;\n                        },\n                        &quot;destination&quot;: {\n                            &quot;port&quot;: &quot;1-1024&quot;,\n                            &quot;fqdn&quot;: &quot;www.google.com&quot;\n                        }\n                    }\n                }\n            ],\n            &quot;preferredUplink&quot;: &quot;wan2&quot;,\n            &quot;failOverCriterion&quot;: &quot;poorPerformance&quot;,\n            &quot;performanceClass&quot;: {\n                &quot;type&quot;: &quot;custom&quot;,\n                &quot;customPerformanceClassId&quot;: &quot;123456&quot;\n            }\n        },\n        {\n            &quot;trafficFilters&quot;: [\n                {\n                    &quot;type&quot;: &quot;application&quot;,\n                    &quot;value&quot;: {\n                        &quot;id&quot;: &quot;meraki:layer7/application/9&quot;\n                    }\n                }\n            ],\n            &quot;preferredUplink&quot;: &quot;defaultUplink&quot;\n        },\n        {\n            &quot;trafficFilters&quot;: [\n                {\n                    &quot;type&quot;: &quot;application&quot;,\n                    &quot;value&quot;: {\n                        &quot;id&quot;: &quot;meraki:layer7/application/106&quot;\n                    }\n                }\n            ],\n            &quot;preferredUplink&quot;: &quot;bestForVoIP&quot;\n        },\n        {\n            &quot;trafficFilters&quot;: [\n                {\n                    &quot;type&quot;: &quot;application&quot;,\n                    &quot;value&quot;: {\n                        &quot;id&quot;: &quot;meraki:layer7/application/107&quot;\n                    }\n                }\n            ],\n            &quot;preferredUplink&quot;: &quot;loadBalancing&quot;,\n            &quot;performanceClass&quot;: {\n                &quot;type&quot;: &quot;builtin&quot;,\n                &quot;builtinPerformanceClassName&quot;: &quot;VoIP&quot;\n            }\n        },\n        {\n            &quot;trafficFilters&quot;: [\n                {\n                    &quot;type&quot;: &quot;application&quot;,\n                    &quot;value&quot;: {\n                        &quot;id&quot;: &quot;meraki:layer7/application/162&quot;\n                    }\n                }\n            ],\n            &quot;preferredUplink&quot;: &quot;loadBalancing&quot;,\n            &quot;performanceClass&quot;: {\n                &quot;type&quot;: &quot;custom&quot;,\n                &quot;customPerformanceClassId&quot;: &quot;123456&quot;\n            }\n        },\n        {\n            &quot;trafficFilters&quot;: [\n                {\n                    &quot;type&quot;: &quot;application&quot;,\n                    &quot;value&quot;: {\n                        &quot;id&quot;: &quot;meraki:layer7/application/168&quot;\n                    }\n                }\n            ],\n            &quot;preferredUplink&quot;: &quot;wan2&quot;,\n            &quot;failOverCriterion&quot;: &quot;poorPerformance&quot;,\n            &quot;performanceClass&quot;: {\n                &quot;type&quot;: &quot;builtin&quot;,\n                &quot;builtinPerformanceClassName&quot;: &quot;VoIP&quot;\n            }\n        },\n        {\n            &quot;trafficFilters&quot;: [\n                {\n                    &quot;type&quot;: &quot;application&quot;,\n                    &quot;value&quot;: {\n                        &quot;id&quot;: &quot;meraki:layer7/application/171&quot;\n                    }\n                }\n            ],\n            &quot;preferredUplink&quot;: &quot;wan2&quot;,\n            &quot;failOverCriterion&quot;: &quot;poorPerformance&quot;,\n            &quot;performanceClass&quot;: {\n                &quot;type&quot;: &quot;custom&quot;,\n                &quot;customPerformanceClassId&quot;: &quot;123456&quot;\n            }\n        }\n    ]\n}</code></pre>\n      </p>\n      <hr>\n      \n      <br>\n      - New endpoint\n      <h4>Update uplink selection settings for an MX network</h4>\n      <p>   \n      <b class=\"mr-4 badge put\">PUT</b>  <code>/networks/{networkId}/appliance/trafficShaping/uplinkSelection</code>\n      <br>  \n      <pre><code>{\n    &quot;activeActiveAutoVpnEnabled&quot;: true,\n    &quot;defaultUplink&quot;: &quot;wan1&quot;,\n    &quot;loadBalancingEnabled&quot;: true,\n    &quot;wanTrafficUplinkPreferences&quot;: [\n        {\n            &quot;trafficFilters&quot;: [\n                {\n                    &quot;type&quot;: &quot;custom&quot;,\n                    &quot;value&quot;: {\n                        &quot;protocol&quot;: &quot;tcp&quot;,\n                        &quot;source&quot;: {\n                            &quot;port&quot;: &quot;any&quot;,\n                            &quot;cidr&quot;: &quot;192.168.1.0/24&quot;\n                        },\n                        &quot;destination&quot;: {\n                            &quot;port&quot;: &quot;any&quot;,\n                            &quot;cidr&quot;: &quot;any&quot;\n                        }\n                    }\n                }\n            ],\n            &quot;preferredUplink&quot;: &quot;wan2&quot;\n        },\n        {\n            &quot;trafficFilters&quot;: [\n                {\n                    &quot;type&quot;: &quot;custom&quot;,\n                    &quot;value&quot;: {\n                        &quot;protocol&quot;: &quot;tcp&quot;,\n                        &quot;source&quot;: {\n                            &quot;port&quot;: &quot;1-1024&quot;,\n                            &quot;vlan&quot;: 10,\n                            &quot;host&quot;: 254\n                        },\n                        &quot;destination&quot;: {\n                            &quot;port&quot;: &quot;any&quot;,\n                            &quot;cidr&quot;: &quot;any&quot;\n                        }\n                    }\n                }\n            ],\n            &quot;preferredUplink&quot;: &quot;wan1&quot;\n        }\n    ],\n    &quot;vpnTrafficUplinkPreferences&quot;: [\n        {\n            &quot;trafficFilters&quot;: [\n                {\n                    &quot;type&quot;: &quot;applicationCategory&quot;,\n                    &quot;value&quot;: {\n                        &quot;id&quot;: &quot;meraki:layer7/category/1&quot;\n                    }\n                },\n                {\n                    &quot;type&quot;: &quot;application&quot;,\n                    &quot;value&quot;: {\n                        &quot;id&quot;: &quot;meraki:layer7/application/33&quot;\n                    }\n                },\n                {\n                    &quot;type&quot;: &quot;custom&quot;,\n                    &quot;value&quot;: {\n                        &quot;protocol&quot;: &quot;tcp&quot;,\n                        &quot;source&quot;: {\n                            &quot;port&quot;: &quot;any&quot;,\n                            &quot;cidr&quot;: &quot;192.168.1.0/24&quot;\n                        },\n                        &quot;destination&quot;: {\n                            &quot;port&quot;: &quot;any&quot;,\n                            &quot;cidr&quot;: &quot;any&quot;\n                        }\n                    }\n                },\n                {\n                    &quot;type&quot;: &quot;custom&quot;,\n                    &quot;value&quot;: {\n                        &quot;protocol&quot;: &quot;tcp&quot;,\n                        &quot;source&quot;: {\n                            &quot;port&quot;: &quot;any&quot;,\n                            &quot;cidr&quot;: &quot;any&quot;\n                        },\n                        &quot;destination&quot;: {\n                            &quot;port&quot;: &quot;any&quot;,\n                            &quot;network&quot;: &quot;L_23456789&quot;,\n                            &quot;vlan&quot;: 20,\n                            &quot;host&quot;: 200\n                        }\n                    }\n                },\n                {\n                    &quot;type&quot;: &quot;custom&quot;,\n                    &quot;value&quot;: {\n                        &quot;protocol&quot;: &quot;tcp&quot;,\n                        &quot;source&quot;: {\n                            &quot;port&quot;: &quot;any&quot;,\n                            &quot;cidr&quot;: &quot;any&quot;\n                        },\n                        &quot;destination&quot;: {\n                            &quot;port&quot;: &quot;1-1024&quot;,\n                            &quot;fqdn&quot;: &quot;www.google.com&quot;\n                        }\n                    }\n                }\n            ],\n            &quot;preferredUplink&quot;: &quot;wan2&quot;,\n            &quot;failOverCriterion&quot;: &quot;poorPerformance&quot;,\n            &quot;performanceClass&quot;: {\n                &quot;type&quot;: &quot;custom&quot;,\n                &quot;customPerformanceClassId&quot;: &quot;123456&quot;\n            }\n        },\n        {\n            &quot;trafficFilters&quot;: [\n                {\n                    &quot;type&quot;: &quot;application&quot;,\n                    &quot;value&quot;: {\n                        &quot;id&quot;: &quot;meraki:layer7/application/9&quot;\n                    }\n                }\n            ],\n            &quot;preferredUplink&quot;: &quot;defaultUplink&quot;\n        },\n        {\n            &quot;trafficFilters&quot;: [\n                {\n                    &quot;type&quot;: &quot;application&quot;,\n                    &quot;value&quot;: {\n                        &quot;id&quot;: &quot;meraki:layer7/application/106&quot;\n                    }\n                }\n            ],\n            &quot;preferredUplink&quot;: &quot;bestForVoIP&quot;\n        },\n        {\n            &quot;trafficFilters&quot;: [\n                {\n                    &quot;type&quot;: &quot;application&quot;,\n                    &quot;value&quot;: {\n                        &quot;id&quot;: &quot;meraki:layer7/application/107&quot;\n                    }\n                }\n            ],\n            &quot;preferredUplink&quot;: &quot;loadBalancing&quot;,\n            &quot;performanceClass&quot;: {\n                &quot;type&quot;: &quot;builtin&quot;,\n                &quot;builtinPerformanceClassName&quot;: &quot;VoIP&quot;\n            }\n        },\n        {\n            &quot;trafficFilters&quot;: [\n                {\n                    &quot;type&quot;: &quot;application&quot;,\n                    &quot;value&quot;: {\n                        &quot;id&quot;: &quot;meraki:layer7/application/162&quot;\n                    }\n                }\n            ],\n            &quot;preferredUplink&quot;: &quot;loadBalancing&quot;,\n            &quot;performanceClass&quot;: {\n                &quot;type&quot;: &quot;custom&quot;,\n                &quot;customPerformanceClassId&quot;: &quot;123456&quot;\n            }\n        },\n        {\n            &quot;trafficFilters&quot;: [\n                {\n                    &quot;type&quot;: &quot;application&quot;,\n                    &quot;value&quot;: {\n                        &quot;id&quot;: &quot;meraki:layer7/application/168&quot;\n                    }\n                }\n            ],\n            &quot;preferredUplink&quot;: &quot;wan2&quot;,\n            &quot;failOverCriterion&quot;: &quot;poorPerformance&quot;,\n            &quot;performanceClass&quot;: {\n                &quot;type&quot;: &quot;builtin&quot;,\n                &quot;builtinPerformanceClassName&quot;: &quot;VoIP&quot;\n            }\n        },\n        {\n            &quot;trafficFilters&quot;: [\n                {\n                    &quot;type&quot;: &quot;application&quot;,\n                    &quot;value&quot;: {\n                        &quot;id&quot;: &quot;meraki:layer7/application/171&quot;\n                    }\n                }\n            ],\n            &quot;preferredUplink&quot;: &quot;wan2&quot;,\n            &quot;failOverCriterion&quot;: &quot;poorPerformance&quot;,\n            &quot;performanceClass&quot;: {\n                &quot;type&quot;: &quot;custom&quot;,\n                &quot;customPerformanceClassId&quot;: &quot;123456&quot;\n            }\n        }\n    ]\n}</code></pre>\n      </p>\n      <hr>\n      ",
            "path": "/networks/{networkId}/appliance/trafficShaping/uplinkSelection",
            "details": {
                "get": {
                    "description": "Show uplink selection settings for an MX network",
                    "operationId": "getNetworkApplianceTrafficShapingUplinkSelection",
                    "parameters": {
                        "networkId": {
                            "name": "networkId",
                            "in": "path",
                            "type": "string",
                            "required": true
                        }
                    },
                    "responses": {
                        "200": {
                            "description": "Successful operation",
                            "examples": {
                                "application/json": {
                                    "activeActiveAutoVpnEnabled": true,
                                    "defaultUplink": "wan1",
                                    "loadBalancingEnabled": true,
                                    "wanTrafficUplinkPreferences": [{
                                            "trafficFilters": [{
                                                "type": "custom",
                                                "value": {
                                                    "protocol": "tcp",
                                                    "source": {
                                                        "port": "any",
                                                        "cidr": "192.168.1.0/24"
                                                    },
                                                    "destination": {
                                                        "port": "any",
                                                        "cidr": "any"
                                                    }
                                                }
                                            }],
                                            "preferredUplink": "wan2"
                                        },
                                        {
                                            "trafficFilters": [{
                                                "type": "custom",
                                                "value": {
                                                    "protocol": "tcp",
                                                    "source": {
                                                        "port": "1-1024",
                                                        "vlan": 10,
                                                        "host": 254
                                                    },
                                                    "destination": {
                                                        "port": "any",
                                                        "cidr": "any"
                                                    }
                                                }
                                            }],
                                            "preferredUplink": "wan1"
                                        }
                                    ],
                                    "vpnTrafficUplinkPreferences": [{
                                            "trafficFilters": [{
                                                    "type": "applicationCategory",
                                                    "value": {
                                                        "id": "meraki:layer7/category/1"
                                                    }
                                                },
                                                {
                                                    "type": "application",
                                                    "value": {
                                                        "id": "meraki:layer7/application/33"
                                                    }
                                                },
                                                {
                                                    "type": "custom",
                                                    "value": {
                                                        "protocol": "tcp",
                                                        "source": {
                                                            "port": "any",
                                                            "cidr": "192.168.1.0/24"
                                                        },
                                                        "destination": {
                                                            "port": "any",
                                                            "cidr": "any"
                                                        }
                                                    }
                                                },
                                                {
                                                    "type": "custom",
                                                    "value": {
                                                        "protocol": "tcp",
                                                        "source": {
                                                            "port": "any",
                                                            "cidr": "any"
                                                        },
                                                        "destination": {
                                                            "port": "any",
                                                            "network": "L_23456789",
                                                            "vlan": 20,
                                                            "host": 200
                                                        }
                                                    }
                                                },
                                                {
                                                    "type": "custom",
                                                    "value": {
                                                        "protocol": "tcp",
                                                        "source": {
                                                            "port": "any",
                                                            "cidr": "any"
                                                        },
                                                        "destination": {
                                                            "port": "1-1024",
                                                            "fqdn": "www.google.com"
                                                        }
                                                    }
                                                }
                                            ],
                                            "preferredUplink": "wan2",
                                            "failOverCriterion": "poorPerformance",
                                            "performanceClass": {
                                                "type": "custom",
                                                "customPerformanceClassId": "123456"
                                            }
                                        },
                                        {
                                            "trafficFilters": [{
                                                "type": "application",
                                                "value": {
                                                    "id": "meraki:layer7/application/9"
                                                }
                                            }],
                                            "preferredUplink": "defaultUplink"
                                        },
                                        {
                                            "trafficFilters": [{
                                                "type": "application",
                                                "value": {
                                                    "id": "meraki:layer7/application/106"
                                                }
                                            }],
                                            "preferredUplink": "bestForVoIP"
                                        },
                                        {
                                            "trafficFilters": [{
                                                "type": "application",
                                                "value": {
                                                    "id": "meraki:layer7/application/107"
                                                }
                                            }],
                                            "preferredUplink": "loadBalancing",
                                            "performanceClass": {
                                                "type": "builtin",
                                                "builtinPerformanceClassName": "VoIP"
                                            }
                                        },
                                        {
                                            "trafficFilters": [{
                                                "type": "application",
                                                "value": {
                                                    "id": "meraki:layer7/application/162"
                                                }
                                            }],
                                            "preferredUplink": "loadBalancing",
                                            "performanceClass": {
                                                "type": "custom",
                                                "customPerformanceClassId": "123456"
                                            }
                                        },
                                        {
                                            "trafficFilters": [{
                                                "type": "application",
                                                "value": {
                                                    "id": "meraki:layer7/application/168"
                                                }
                                            }],
                                            "preferredUplink": "wan2",
                                            "failOverCriterion": "poorPerformance",
                                            "performanceClass": {
                                                "type": "builtin",
                                                "builtinPerformanceClassName": "VoIP"
                                            }
                                        },
                                        {
                                            "trafficFilters": [{
                                                "type": "application",
                                                "value": {
                                                    "id": "meraki:layer7/application/171"
                                                }
                                            }],
                                            "preferredUplink": "wan2",
                                            "failOverCriterion": "poorPerformance",
                                            "performanceClass": {
                                                "type": "custom",
                                                "customPerformanceClassId": "123456"
                                            }
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "summary": "Show uplink selection settings for an MX network",
                    "tags": [
                        "appliance",
                        "configure",
                        "trafficShaping",
                        "uplinkSelection"
                    ],
                    "consumes": [
                        "application/json"
                    ],
                    "produces": [
                        "application/json"
                    ],
                    "schemes": [
                        "https"
                    ],
                    "security": [{
                        "meraki_api_key": []
                    }]
                },
                "put": {
                    "description": "Update uplink selection settings for an MX network",
                    "operationId": "updateNetworkApplianceTrafficShapingUplinkSelection",
                    "parameters": {
                        "networkId": {
                            "name": "networkId",
                            "in": "path",
                            "type": "string",
                            "required": true
                        },
                        "updateNetworkApplianceTrafficShapingUplinkSelection": {
                            "name": "updateNetworkApplianceTrafficShapingUplinkSelection",
                            "in": "body",
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "activeActiveAutoVpnEnabled": {
                                        "type": "boolean",
                                        "description": "Toggle for enabling or disabling active-active AutoVPN"
                                    },
                                    "defaultUplink": {
                                        "type": "string",
                                        "enum": [
                                            "wan1",
                                            "wan2"
                                        ],
                                        "description": "The default uplink. Must be one of: 'wan1' or 'wan2'"
                                    },
                                    "loadBalancingEnabled": {
                                        "type": "boolean",
                                        "description": "Toggle for enabling or disabling load balancing"
                                    },
                                    "wanTrafficUplinkPreferences": {
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "trafficFilters": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "type": {
                                                                "type": "string",
                                                                "enum": [
                                                                    "custom"
                                                                ],
                                                                "description": "Type of this traffic filter. Must be one of: 'custom'",
                                                                "required": true
                                                            },
                                                            "value": {
                                                                "type": "object",
                                                                "properties": {
                                                                    "protocol": {
                                                                        "type": "string",
                                                                        "enum": [
                                                                            "tcp",
                                                                            "udp",
                                                                            "any"
                                                                        ],
                                                                        "description": "Protocol of this custom type traffic filter. Must be one of: 'tcp', 'udp' or 'any'"
                                                                    },
                                                                    "source": {
                                                                        "type": "object",
                                                                        "properties": {
                                                                            "port": {
                                                                                "type": "string",
                                                                                "description": "E.g.: \"any\", \"0\" (also means \"any\"), \"8080\", \"1-1024\""
                                                                            },
                                                                            "cidr": {
                                                                                "type": "string",
                                                                                "description": "CIDR format address, or \"any\". E.g.: \"192.168.10.0/24\",  \"192.168.10.1\" (same as \"192.168.10.1/32\"), \"0.0.0.0/0\" (same as \"any\")"
                                                                            },
                                                                            "vlan": {
                                                                                "type": "integer",
                                                                                "description": "VLAN ID of the configured VLAN in the Meraki network. Currently only available under a template network."
                                                                            },
                                                                            "host": {
                                                                                "type": "integer",
                                                                                "description": "Host ID in the VLAN, should be used along with 'vlan', and not exceed the vlan subnet capacity. Currently only available under a template network."
                                                                            }
                                                                        },
                                                                        "description": "Source of this custom type traffic filter",
                                                                        "required": true
                                                                    },
                                                                    "destination": {
                                                                        "type": "object",
                                                                        "properties": {
                                                                            "port": {
                                                                                "type": "string",
                                                                                "description": "E.g.: \"any\", \"0\" (also means \"any\"), \"8080\", \"1-1024\""
                                                                            },
                                                                            "cidr": {
                                                                                "type": "string",
                                                                                "description": "CIDR format address, or \"any\". E.g.: \"192.168.10.0/24\",  \"192.168.10.1\" (same as \"192.168.10.1/32\"), \"0.0.0.0/0\" (same as \"any\")"
                                                                            }
                                                                        },
                                                                        "description": "Destination of this custom type traffic filter",
                                                                        "required": true
                                                                    }
                                                                },
                                                                "description": "Value object of this traffic filter",
                                                                "required": true
                                                            }
                                                        }
                                                    },
                                                    "description": "Array of traffic filters for this uplink preference rule",
                                                    "required": true
                                                },
                                                "preferredUplink": {
                                                    "type": "string",
                                                    "enum": [
                                                        "wan1",
                                                        "wan2"
                                                    ],
                                                    "description": "Preferred uplink for this uplink preference rule. Must be one of: 'wan1' or 'wan2'",
                                                    "required": true
                                                }
                                            }
                                        },
                                        "description": "Array of uplink preference rules for WAN traffic"
                                    },
                                    "vpnTrafficUplinkPreferences": {
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "trafficFilters": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "type": {
                                                                "type": "string",
                                                                "enum": [
                                                                    "applicationCategory",
                                                                    "application",
                                                                    "custom"
                                                                ],
                                                                "description": "Type of this traffic filter. Must be one of: 'applicationCategory', 'application' or 'custom'",
                                                                "required": true
                                                            },
                                                            "value": {
                                                                "type": "object",
                                                                "properties": {
                                                                    "id": {
                                                                        "type": "string",
                                                                        "description": "ID of this applicationCategory or application type traffic filter. E.g.: \"meraki:layer7/category/1\", \"meraki:layer7/application/4\""
                                                                    },
                                                                    "protocol": {
                                                                        "type": "string",
                                                                        "enum": [
                                                                            "tcp",
                                                                            "udp",
                                                                            "icmp",
                                                                            "any"
                                                                        ],
                                                                        "description": "Protocol of this custom type traffic filter. Must be one of: 'tcp', 'udp', 'icmp' or 'any'"
                                                                    },
                                                                    "source": {
                                                                        "type": "object",
                                                                        "properties": {
                                                                            "port": {
                                                                                "type": "string",
                                                                                "description": "E.g.: \"any\", \"0\" (also means \"any\"), \"8080\", \"1-1024\""
                                                                            },
                                                                            "cidr": {
                                                                                "type": "string",
                                                                                "description": "CIDR format address, or \"any\". E.g.: \"192.168.10.0/24\",  \"192.168.10.1\" (same as \"192.168.10.1/32\"), \"0.0.0.0/0\" (same as \"any\")"
                                                                            },
                                                                            "network": {
                                                                                "type": "string",
                                                                                "description": "Meraki network ID. Currently only available under a template network, and the value should be ID of either same template network, or another template network currently. E.g.: \"L_12345678\"."
                                                                            },
                                                                            "vlan": {
                                                                                "type": "integer",
                                                                                "description": "VLAN ID of the configured VLAN in the Meraki network. Currently only available under a template network."
                                                                            },
                                                                            "host": {
                                                                                "type": "integer",
                                                                                "description": "Host ID in the VLAN, should be used along with 'vlan', and not exceed the vlan subnet capacity. Currently only available under a template network."
                                                                            }
                                                                        },
                                                                        "description": "Source of this custom type traffic filter"
                                                                    },
                                                                    "destination": {
                                                                        "type": "object",
                                                                        "properties": {
                                                                            "port": {
                                                                                "type": "string",
                                                                                "description": "E.g.: \"any\", \"0\" (also means \"any\"), \"8080\", \"1-1024\""
                                                                            },
                                                                            "cidr": {
                                                                                "type": "string",
                                                                                "description": "CIDR format address, or \"any\". E.g.: \"192.168.10.0/24\",  \"192.168.10.1\" (same as \"192.168.10.1/32\"), \"0.0.0.0/0\" (same as \"any\")"
                                                                            },
                                                                            "network": {
                                                                                "type": "string",
                                                                                "description": "Meraki network ID. Currently only available under a template network, and the value should be ID of either same template network, or another template network currently. E.g.: \"L_12345678\"."
                                                                            },
                                                                            "vlan": {
                                                                                "type": "integer",
                                                                                "description": "VLAN ID of the configured VLAN in the Meraki network. Currently only available under a template network."
                                                                            },
                                                                            "host": {
                                                                                "type": "integer",
                                                                                "description": "Host ID in the VLAN, should be used along with 'vlan', and not exceed the vlan subnet capacity. Currently only available under a template network."
                                                                            },
                                                                            "fqdn": {
                                                                                "type": "string",
                                                                                "description": "FQDN format address. Currently only availabe in 'destination' of 'vpnTrafficUplinkPreference' object. E.g.: 'www.google.com'"
                                                                            }
                                                                        },
                                                                        "description": "Destination of this custom type traffic filter"
                                                                    }
                                                                },
                                                                "description": "Value object of this traffic filter",
                                                                "required": true
                                                            }
                                                        }
                                                    },
                                                    "description": "Array of traffic filters for this uplink preference rule",
                                                    "required": true
                                                },
                                                "preferredUplink": {
                                                    "type": "string",
                                                    "enum": [
                                                        "wan1",
                                                        "wan2",
                                                        "bestForVoIP",
                                                        "loadBalancing",
                                                        "defaultUplink"
                                                    ],
                                                    "description": "Preferred uplink for this uplink preference rule. Must be one of: 'wan1', 'wan2', 'bestForVoIP', 'loadBalancing' or 'defaultUplink'",
                                                    "required": true
                                                },
                                                "failOverCriterion": {
                                                    "type": "string",
                                                    "enum": [
                                                        "poorPerformance",
                                                        "uplinkDown"
                                                    ],
                                                    "description": "Fail over criterion for this uplink preference rule. Must be one of: 'poorPerformance' or 'uplinkDown'"
                                                },
                                                "performanceClass": {
                                                    "type": "object",
                                                    "properties": {
                                                        "type": {
                                                            "type": "string",
                                                            "enum": [
                                                                "builtin",
                                                                "custom"
                                                            ],
                                                            "description": "Type of this performance class. Must be one of: 'builtin' or 'custom'",
                                                            "required": true
                                                        },
                                                        "builtinPerformanceClassName": {
                                                            "type": "string",
                                                            "enum": [
                                                                "VoIP"
                                                            ],
                                                            "description": "Name of builtin performance class, must be present when performanceClass type is 'builtin', and value must be one of: 'VoIP'"
                                                        },
                                                        "customPerformanceClassId": {
                                                            "type": "string",
                                                            "description": "ID of created custom performance class, must be present when performanceClass type is 'custom'"
                                                        }
                                                    },
                                                    "description": "Performance class setting for this uplink preference rule"
                                                }
                                            }
                                        },
                                        "description": "Array of uplink preference rules for VPN traffic"
                                    }
                                },
                                "example": {
                                    "activeActiveAutoVpnEnabled": true,
                                    "defaultUplink": "wan1",
                                    "loadBalancingEnabled": true,
                                    "wanTrafficUplinkPreferences": [{
                                            "trafficFilters": [{
                                                "type": "custom",
                                                "value": {
                                                    "protocol": "tcp",
                                                    "source": {
                                                        "port": "any",
                                                        "cidr": "192.168.1.0/24"
                                                    },
                                                    "destination": {
                                                        "port": "any",
                                                        "cidr": "any"
                                                    }
                                                }
                                            }],
                                            "preferredUplink": "wan2"
                                        },
                                        {
                                            "trafficFilters": [{
                                                "type": "custom",
                                                "value": {
                                                    "protocol": "tcp",
                                                    "source": {
                                                        "port": "1-1024",
                                                        "vlan": 10,
                                                        "host": 254
                                                    },
                                                    "destination": {
                                                        "port": "any",
                                                        "cidr": "any"
                                                    }
                                                }
                                            }],
                                            "preferredUplink": "wan1"
                                        }
                                    ],
                                    "vpnTrafficUplinkPreferences": [{
                                            "trafficFilters": [{
                                                    "type": "applicationCategory",
                                                    "value": {
                                                        "id": "meraki:layer7/category/1"
                                                    }
                                                },
                                                {
                                                    "type": "application",
                                                    "value": {
                                                        "id": "meraki:layer7/application/33"
                                                    }
                                                },
                                                {
                                                    "type": "custom",
                                                    "value": {
                                                        "protocol": "tcp",
                                                        "source": {
                                                            "port": "any",
                                                            "cidr": "192.168.1.0/24"
                                                        },
                                                        "destination": {
                                                            "port": "any",
                                                            "cidr": "any"
                                                        }
                                                    }
                                                },
                                                {
                                                    "type": "custom",
                                                    "value": {
                                                        "protocol": "tcp",
                                                        "source": {
                                                            "port": "any",
                                                            "cidr": "any"
                                                        },
                                                        "destination": {
                                                            "port": "any",
                                                            "network": "L_23456789",
                                                            "vlan": 20,
                                                            "host": 200
                                                        }
                                                    }
                                                },
                                                {
                                                    "type": "custom",
                                                    "value": {
                                                        "protocol": "tcp",
                                                        "source": {
                                                            "port": "any",
                                                            "cidr": "any"
                                                        },
                                                        "destination": {
                                                            "port": "1-1024",
                                                            "fqdn": "www.google.com"
                                                        }
                                                    }
                                                }
                                            ],
                                            "preferredUplink": "wan2",
                                            "failOverCriterion": "poorPerformance",
                                            "performanceClass": {
                                                "type": "custom",
                                                "customPerformanceClassId": "123456"
                                            }
                                        },
                                        {
                                            "trafficFilters": [{
                                                "type": "application",
                                                "value": {
                                                    "id": "meraki:layer7/application/9"
                                                }
                                            }],
                                            "preferredUplink": "defaultUplink"
                                        },
                                        {
                                            "trafficFilters": [{
                                                "type": "application",
                                                "value": {
                                                    "id": "meraki:layer7/application/106"
                                                }
                                            }],
                                            "preferredUplink": "bestForVoIP"
                                        },
                                        {
                                            "trafficFilters": [{
                                                "type": "application",
                                                "value": {
                                                    "id": "meraki:layer7/application/107"
                                                }
                                            }],
                                            "preferredUplink": "loadBalancing",
                                            "performanceClass": {
                                                "type": "builtin",
                                                "builtinPerformanceClassName": "VoIP"
                                            }
                                        },
                                        {
                                            "trafficFilters": [{
                                                "type": "application",
                                                "value": {
                                                    "id": "meraki:layer7/application/162"
                                                }
                                            }],
                                            "preferredUplink": "loadBalancing",
                                            "performanceClass": {
                                                "type": "custom",
                                                "customPerformanceClassId": "123456"
                                            }
                                        },
                                        {
                                            "trafficFilters": [{
                                                "type": "application",
                                                "value": {
                                                    "id": "meraki:layer7/application/168"
                                                }
                                            }],
                                            "preferredUplink": "wan2",
                                            "failOverCriterion": "poorPerformance",
                                            "performanceClass": {
                                                "type": "builtin",
                                                "builtinPerformanceClassName": "VoIP"
                                            }
                                        },
                                        {
                                            "trafficFilters": [{
                                                "type": "application",
                                                "value": {
                                                    "id": "meraki:layer7/application/171"
                                                }
                                            }],
                                            "preferredUplink": "wan2",
                                            "failOverCriterion": "poorPerformance",
                                            "performanceClass": {
                                                "type": "custom",
                                                "customPerformanceClassId": "123456"
                                            }
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "responses": {
                        "200": {
                            "description": "Successful operation",
                            "examples": {
                                "application/json": {
                                    "activeActiveAutoVpnEnabled": true,
                                    "defaultUplink": "wan1",
                                    "loadBalancingEnabled": true,
                                    "wanTrafficUplinkPreferences": [{
                                            "trafficFilters": [{
                                                "type": "custom",
                                                "value": {
                                                    "protocol": "tcp",
                                                    "source": {
                                                        "port": "any",
                                                        "cidr": "192.168.1.0/24"
                                                    },
                                                    "destination": {
                                                        "port": "any",
                                                        "cidr": "any"
                                                    }
                                                }
                                            }],
                                            "preferredUplink": "wan2"
                                        },
                                        {
                                            "trafficFilters": [{
                                                "type": "custom",
                                                "value": {
                                                    "protocol": "tcp",
                                                    "source": {
                                                        "port": "1-1024",
                                                        "vlan": 10,
                                                        "host": 254
                                                    },
                                                    "destination": {
                                                        "port": "any",
                                                        "cidr": "any"
                                                    }
                                                }
                                            }],
                                            "preferredUplink": "wan1"
                                        }
                                    ],
                                    "vpnTrafficUplinkPreferences": [{
                                            "trafficFilters": [{
                                                    "type": "applicationCategory",
                                                    "value": {
                                                        "id": "meraki:layer7/category/1"
                                                    }
                                                },
                                                {
                                                    "type": "application",
                                                    "value": {
                                                        "id": "meraki:layer7/application/33"
                                                    }
                                                },
                                                {
                                                    "type": "custom",
                                                    "value": {
                                                        "protocol": "tcp",
                                                        "source": {
                                                            "port": "any",
                                                            "cidr": "192.168.1.0/24"
                                                        },
                                                        "destination": {
                                                            "port": "any",
                                                            "cidr": "any"
                                                        }
                                                    }
                                                },
                                                {
                                                    "type": "custom",
                                                    "value": {
                                                        "protocol": "tcp",
                                                        "source": {
                                                            "port": "any",
                                                            "cidr": "any"
                                                        },
                                                        "destination": {
                                                            "port": "any",
                                                            "network": "L_23456789",
                                                            "vlan": 20,
                                                            "host": 200
                                                        }
                                                    }
                                                },
                                                {
                                                    "type": "custom",
                                                    "value": {
                                                        "protocol": "tcp",
                                                        "source": {
                                                            "port": "any",
                                                            "cidr": "any"
                                                        },
                                                        "destination": {
                                                            "port": "1-1024",
                                                            "fqdn": "www.google.com"
                                                        }
                                                    }
                                                }
                                            ],
                                            "preferredUplink": "wan2",
                                            "failOverCriterion": "poorPerformance",
                                            "performanceClass": {
                                                "type": "custom",
                                                "customPerformanceClassId": "123456"
                                            }
                                        },
                                        {
                                            "trafficFilters": [{
                                                "type": "application",
                                                "value": {
                                                    "id": "meraki:layer7/application/9"
                                                }
                                            }],
                                            "preferredUplink": "defaultUplink"
                                        },
                                        {
                                            "trafficFilters": [{
                                                "type": "application",
                                                "value": {
                                                    "id": "meraki:layer7/application/106"
                                                }
                                            }],
                                            "preferredUplink": "bestForVoIP"
                                        },
                                        {
                                            "trafficFilters": [{
                                                "type": "application",
                                                "value": {
                                                    "id": "meraki:layer7/application/107"
                                                }
                                            }],
                                            "preferredUplink": "loadBalancing",
                                            "performanceClass": {
                                                "type": "builtin",
                                                "builtinPerformanceClassName": "VoIP"
                                            }
                                        },
                                        {
                                            "trafficFilters": [{
                                                "type": "application",
                                                "value": {
                                                    "id": "meraki:layer7/application/162"
                                                }
                                            }],
                                            "preferredUplink": "loadBalancing",
                                            "performanceClass": {
                                                "type": "custom",
                                                "customPerformanceClassId": "123456"
                                            }
                                        },
                                        {
                                            "trafficFilters": [{
                                                "type": "application",
                                                "value": {
                                                    "id": "meraki:layer7/application/168"
                                                }
                                            }],
                                            "preferredUplink": "wan2",
                                            "failOverCriterion": "poorPerformance",
                                            "performanceClass": {
                                                "type": "builtin",
                                                "builtinPerformanceClassName": "VoIP"
                                            }
                                        },
                                        {
                                            "trafficFilters": [{
                                                "type": "application",
                                                "value": {
                                                    "id": "meraki:layer7/application/171"
                                                }
                                            }],
                                            "preferredUplink": "wan2",
                                            "failOverCriterion": "poorPerformance",
                                            "performanceClass": {
                                                "type": "custom",
                                                "customPerformanceClassId": "123456"
                                            }
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "summary": "Update uplink selection settings for an MX network",
                    "tags": [
                        "appliance",
                        "configure",
                        "trafficShaping",
                        "uplinkSelection"
                    ],
                    "consumes": [
                        "application/json"
                    ],
                    "produces": [
                        "application/json"
                    ],
                    "schemes": [
                        "https"
                    ],
                    "security": [{
                        "meraki_api_key": []
                    }]
                }
            },
            "type": "infos",
            "name": "What's Updated",
            "group": "appliance",
            "apiDetails": {
                "get": {
                    "description": "Show uplink selection settings for an MX network",
                    "operationId": "getNetworkApplianceTrafficShapingUplinkSelection",
                    "parameters": [{
                        "name": "networkId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }],
                    "responses": {
                        "200": {
                            "description": "Successful operation",
                            "examples": {
                                "application/json": {
                                    "activeActiveAutoVpnEnabled": true,
                                    "defaultUplink": "wan1",
                                    "loadBalancingEnabled": true,
                                    "wanTrafficUplinkPreferences": [{
                                            "trafficFilters": [{
                                                "type": "custom",
                                                "value": {
                                                    "protocol": "tcp",
                                                    "source": {
                                                        "port": "any",
                                                        "cidr": "192.168.1.0/24"
                                                    },
                                                    "destination": {
                                                        "port": "any",
                                                        "cidr": "any"
                                                    }
                                                }
                                            }],
                                            "preferredUplink": "wan2"
                                        },
                                        {
                                            "trafficFilters": [{
                                                "type": "custom",
                                                "value": {
                                                    "protocol": "tcp",
                                                    "source": {
                                                        "port": "1-1024",
                                                        "vlan": 10,
                                                        "host": 254
                                                    },
                                                    "destination": {
                                                        "port": "any",
                                                        "cidr": "any"
                                                    }
                                                }
                                            }],
                                            "preferredUplink": "wan1"
                                        }
                                    ],
                                    "vpnTrafficUplinkPreferences": [{
                                            "trafficFilters": [{
                                                    "type": "applicationCategory",
                                                    "value": {
                                                        "id": "meraki:layer7/category/1"
                                                    }
                                                },
                                                {
                                                    "type": "application",
                                                    "value": {
                                                        "id": "meraki:layer7/application/33"
                                                    }
                                                },
                                                {
                                                    "type": "custom",
                                                    "value": {
                                                        "protocol": "tcp",
                                                        "source": {
                                                            "port": "any",
                                                            "cidr": "192.168.1.0/24"
                                                        },
                                                        "destination": {
                                                            "port": "any",
                                                            "cidr": "any"
                                                        }
                                                    }
                                                },
                                                {
                                                    "type": "custom",
                                                    "value": {
                                                        "protocol": "tcp",
                                                        "source": {
                                                            "port": "any",
                                                            "cidr": "any"
                                                        },
                                                        "destination": {
                                                            "port": "any",
                                                            "network": "L_23456789",
                                                            "vlan": 20,
                                                            "host": 200
                                                        }
                                                    }
                                                },
                                                {
                                                    "type": "custom",
                                                    "value": {
                                                        "protocol": "tcp",
                                                        "source": {
                                                            "port": "any",
                                                            "cidr": "any"
                                                        },
                                                        "destination": {
                                                            "port": "1-1024",
                                                            "fqdn": "www.google.com"
                                                        }
                                                    }
                                                }
                                            ],
                                            "preferredUplink": "wan2",
                                            "failOverCriterion": "poorPerformance",
                                            "performanceClass": {
                                                "type": "custom",
                                                "customPerformanceClassId": "123456"
                                            }
                                        },
                                        {
                                            "trafficFilters": [{
                                                "type": "application",
                                                "value": {
                                                    "id": "meraki:layer7/application/9"
                                                }
                                            }],
                                            "preferredUplink": "defaultUplink"
                                        },
                                        {
                                            "trafficFilters": [{
                                                "type": "application",
                                                "value": {
                                                    "id": "meraki:layer7/application/106"
                                                }
                                            }],
                                            "preferredUplink": "bestForVoIP"
                                        },
                                        {
                                            "trafficFilters": [{
                                                "type": "application",
                                                "value": {
                                                    "id": "meraki:layer7/application/107"
                                                }
                                            }],
                                            "preferredUplink": "loadBalancing",
                                            "performanceClass": {
                                                "type": "builtin",
                                                "builtinPerformanceClassName": "VoIP"
                                            }
                                        },
                                        {
                                            "trafficFilters": [{
                                                "type": "application",
                                                "value": {
                                                    "id": "meraki:layer7/application/162"
                                                }
                                            }],
                                            "preferredUplink": "loadBalancing",
                                            "performanceClass": {
                                                "type": "custom",
                                                "customPerformanceClassId": "123456"
                                            }
                                        },
                                        {
                                            "trafficFilters": [{
                                                "type": "application",
                                                "value": {
                                                    "id": "meraki:layer7/application/168"
                                                }
                                            }],
                                            "preferredUplink": "wan2",
                                            "failOverCriterion": "poorPerformance",
                                            "performanceClass": {
                                                "type": "builtin",
                                                "builtinPerformanceClassName": "VoIP"
                                            }
                                        },
                                        {
                                            "trafficFilters": [{
                                                "type": "application",
                                                "value": {
                                                    "id": "meraki:layer7/application/171"
                                                }
                                            }],
                                            "preferredUplink": "wan2",
                                            "failOverCriterion": "poorPerformance",
                                            "performanceClass": {
                                                "type": "custom",
                                                "customPerformanceClassId": "123456"
                                            }
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "summary": "Show uplink selection settings for an MX network",
                    "tags": [
                        "appliance",
                        "configure",
                        "trafficShaping",
                        "uplinkSelection"
                    ]
                },
                "put": {
                    "description": "Update uplink selection settings for an MX network",
                    "operationId": "updateNetworkApplianceTrafficShapingUplinkSelection",
                    "parameters": [{
                            "name": "networkId",
                            "in": "path",
                            "type": "string",
                            "required": true
                        },
                        {
                            "name": "updateNetworkApplianceTrafficShapingUplinkSelection",
                            "in": "body",
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "activeActiveAutoVpnEnabled": {
                                        "type": "boolean",
                                        "description": "Toggle for enabling or disabling active-active AutoVPN"
                                    },
                                    "defaultUplink": {
                                        "type": "string",
                                        "enum": [
                                            "wan1",
                                            "wan2"
                                        ],
                                        "description": "The default uplink. Must be one of: 'wan1' or 'wan2'"
                                    },
                                    "loadBalancingEnabled": {
                                        "type": "boolean",
                                        "description": "Toggle for enabling or disabling load balancing"
                                    },
                                    "wanTrafficUplinkPreferences": {
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "trafficFilters": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "type": {
                                                                "type": "string",
                                                                "enum": [
                                                                    "custom"
                                                                ],
                                                                "description": "Type of this traffic filter. Must be one of: 'custom'",
                                                                "required": true
                                                            },
                                                            "value": {
                                                                "type": "object",
                                                                "properties": {
                                                                    "protocol": {
                                                                        "type": "string",
                                                                        "enum": [
                                                                            "tcp",
                                                                            "udp",
                                                                            "any"
                                                                        ],
                                                                        "description": "Protocol of this custom type traffic filter. Must be one of: 'tcp', 'udp' or 'any'"
                                                                    },
                                                                    "source": {
                                                                        "type": "object",
                                                                        "properties": {
                                                                            "port": {
                                                                                "type": "string",
                                                                                "description": "E.g.: \"any\", \"0\" (also means \"any\"), \"8080\", \"1-1024\""
                                                                            },
                                                                            "cidr": {
                                                                                "type": "string",
                                                                                "description": "CIDR format address, or \"any\". E.g.: \"192.168.10.0/24\",  \"192.168.10.1\" (same as \"192.168.10.1/32\"), \"0.0.0.0/0\" (same as \"any\")"
                                                                            },
                                                                            "vlan": {
                                                                                "type": "integer",
                                                                                "description": "VLAN ID of the configured VLAN in the Meraki network. Currently only available under a template network."
                                                                            },
                                                                            "host": {
                                                                                "type": "integer",
                                                                                "description": "Host ID in the VLAN, should be used along with 'vlan', and not exceed the vlan subnet capacity. Currently only available under a template network."
                                                                            }
                                                                        },
                                                                        "description": "Source of this custom type traffic filter",
                                                                        "required": true
                                                                    },
                                                                    "destination": {
                                                                        "type": "object",
                                                                        "properties": {
                                                                            "port": {
                                                                                "type": "string",
                                                                                "description": "E.g.: \"any\", \"0\" (also means \"any\"), \"8080\", \"1-1024\""
                                                                            },
                                                                            "cidr": {
                                                                                "type": "string",
                                                                                "description": "CIDR format address, or \"any\". E.g.: \"192.168.10.0/24\",  \"192.168.10.1\" (same as \"192.168.10.1/32\"), \"0.0.0.0/0\" (same as \"any\")"
                                                                            }
                                                                        },
                                                                        "description": "Destination of this custom type traffic filter",
                                                                        "required": true
                                                                    }
                                                                },
                                                                "description": "Value object of this traffic filter",
                                                                "required": true
                                                            }
                                                        }
                                                    },
                                                    "description": "Array of traffic filters for this uplink preference rule",
                                                    "required": true
                                                },
                                                "preferredUplink": {
                                                    "type": "string",
                                                    "enum": [
                                                        "wan1",
                                                        "wan2"
                                                    ],
                                                    "description": "Preferred uplink for this uplink preference rule. Must be one of: 'wan1' or 'wan2'",
                                                    "required": true
                                                }
                                            }
                                        },
                                        "description": "Array of uplink preference rules for WAN traffic"
                                    },
                                    "vpnTrafficUplinkPreferences": {
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "trafficFilters": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "type": {
                                                                "type": "string",
                                                                "enum": [
                                                                    "applicationCategory",
                                                                    "application",
                                                                    "custom"
                                                                ],
                                                                "description": "Type of this traffic filter. Must be one of: 'applicationCategory', 'application' or 'custom'",
                                                                "required": true
                                                            },
                                                            "value": {
                                                                "type": "object",
                                                                "properties": {
                                                                    "id": {
                                                                        "type": "string",
                                                                        "description": "ID of this applicationCategory or application type traffic filter. E.g.: \"meraki:layer7/category/1\", \"meraki:layer7/application/4\""
                                                                    },
                                                                    "protocol": {
                                                                        "type": "string",
                                                                        "enum": [
                                                                            "tcp",
                                                                            "udp",
                                                                            "icmp",
                                                                            "any"
                                                                        ],
                                                                        "description": "Protocol of this custom type traffic filter. Must be one of: 'tcp', 'udp', 'icmp' or 'any'"
                                                                    },
                                                                    "source": {
                                                                        "type": "object",
                                                                        "properties": {
                                                                            "port": {
                                                                                "type": "string",
                                                                                "description": "E.g.: \"any\", \"0\" (also means \"any\"), \"8080\", \"1-1024\""
                                                                            },
                                                                            "cidr": {
                                                                                "type": "string",
                                                                                "description": "CIDR format address, or \"any\". E.g.: \"192.168.10.0/24\",  \"192.168.10.1\" (same as \"192.168.10.1/32\"), \"0.0.0.0/0\" (same as \"any\")"
                                                                            },
                                                                            "network": {
                                                                                "type": "string",
                                                                                "description": "Meraki network ID. Currently only available under a template network, and the value should be ID of either same template network, or another template network currently. E.g.: \"L_12345678\"."
                                                                            },
                                                                            "vlan": {
                                                                                "type": "integer",
                                                                                "description": "VLAN ID of the configured VLAN in the Meraki network. Currently only available under a template network."
                                                                            },
                                                                            "host": {
                                                                                "type": "integer",
                                                                                "description": "Host ID in the VLAN, should be used along with 'vlan', and not exceed the vlan subnet capacity. Currently only available under a template network."
                                                                            }
                                                                        },
                                                                        "description": "Source of this custom type traffic filter"
                                                                    },
                                                                    "destination": {
                                                                        "type": "object",
                                                                        "properties": {
                                                                            "port": {
                                                                                "type": "string",
                                                                                "description": "E.g.: \"any\", \"0\" (also means \"any\"), \"8080\", \"1-1024\""
                                                                            },
                                                                            "cidr": {
                                                                                "type": "string",
                                                                                "description": "CIDR format address, or \"any\". E.g.: \"192.168.10.0/24\",  \"192.168.10.1\" (same as \"192.168.10.1/32\"), \"0.0.0.0/0\" (same as \"any\")"
                                                                            },
                                                                            "network": {
                                                                                "type": "string",
                                                                                "description": "Meraki network ID. Currently only available under a template network, and the value should be ID of either same template network, or another template network currently. E.g.: \"L_12345678\"."
                                                                            },
                                                                            "vlan": {
                                                                                "type": "integer",
                                                                                "description": "VLAN ID of the configured VLAN in the Meraki network. Currently only available under a template network."
                                                                            },
                                                                            "host": {
                                                                                "type": "integer",
                                                                                "description": "Host ID in the VLAN, should be used along with 'vlan', and not exceed the vlan subnet capacity. Currently only available under a template network."
                                                                            },
                                                                            "fqdn": {
                                                                                "type": "string",
                                                                                "description": "FQDN format address. Currently only availabe in 'destination' of 'vpnTrafficUplinkPreference' object. E.g.: 'www.google.com'"
                                                                            }
                                                                        },
                                                                        "description": "Destination of this custom type traffic filter"
                                                                    }
                                                                },
                                                                "description": "Value object of this traffic filter",
                                                                "required": true
                                                            }
                                                        }
                                                    },
                                                    "description": "Array of traffic filters for this uplink preference rule",
                                                    "required": true
                                                },
                                                "preferredUplink": {
                                                    "type": "string",
                                                    "enum": [
                                                        "wan1",
                                                        "wan2",
                                                        "bestForVoIP",
                                                        "loadBalancing",
                                                        "defaultUplink"
                                                    ],
                                                    "description": "Preferred uplink for this uplink preference rule. Must be one of: 'wan1', 'wan2', 'bestForVoIP', 'loadBalancing' or 'defaultUplink'",
                                                    "required": true
                                                },
                                                "failOverCriterion": {
                                                    "type": "string",
                                                    "enum": [
                                                        "poorPerformance",
                                                        "uplinkDown"
                                                    ],
                                                    "description": "Fail over criterion for this uplink preference rule. Must be one of: 'poorPerformance' or 'uplinkDown'"
                                                },
                                                "performanceClass": {
                                                    "type": "object",
                                                    "properties": {
                                                        "type": {
                                                            "type": "string",
                                                            "enum": [
                                                                "builtin",
                                                                "custom"
                                                            ],
                                                            "description": "Type of this performance class. Must be one of: 'builtin' or 'custom'",
                                                            "required": true
                                                        },
                                                        "builtinPerformanceClassName": {
                                                            "type": "string",
                                                            "enum": [
                                                                "VoIP"
                                                            ],
                                                            "description": "Name of builtin performance class, must be present when performanceClass type is 'builtin', and value must be one of: 'VoIP'"
                                                        },
                                                        "customPerformanceClassId": {
                                                            "type": "string",
                                                            "description": "ID of created custom performance class, must be present when performanceClass type is 'custom'"
                                                        }
                                                    },
                                                    "description": "Performance class setting for this uplink preference rule"
                                                }
                                            }
                                        },
                                        "description": "Array of uplink preference rules for VPN traffic"
                                    }
                                },
                                "example": {
                                    "activeActiveAutoVpnEnabled": true,
                                    "defaultUplink": "wan1",
                                    "loadBalancingEnabled": true,
                                    "wanTrafficUplinkPreferences": [{
                                            "trafficFilters": [{
                                                "type": "custom",
                                                "value": {
                                                    "protocol": "tcp",
                                                    "source": {
                                                        "port": "any",
                                                        "cidr": "192.168.1.0/24"
                                                    },
                                                    "destination": {
                                                        "port": "any",
                                                        "cidr": "any"
                                                    }
                                                }
                                            }],
                                            "preferredUplink": "wan2"
                                        },
                                        {
                                            "trafficFilters": [{
                                                "type": "custom",
                                                "value": {
                                                    "protocol": "tcp",
                                                    "source": {
                                                        "port": "1-1024",
                                                        "vlan": 10,
                                                        "host": 254
                                                    },
                                                    "destination": {
                                                        "port": "any",
                                                        "cidr": "any"
                                                    }
                                                }
                                            }],
                                            "preferredUplink": "wan1"
                                        }
                                    ],
                                    "vpnTrafficUplinkPreferences": [{
                                            "trafficFilters": [{
                                                    "type": "applicationCategory",
                                                    "value": {
                                                        "id": "meraki:layer7/category/1"
                                                    }
                                                },
                                                {
                                                    "type": "application",
                                                    "value": {
                                                        "id": "meraki:layer7/application/33"
                                                    }
                                                },
                                                {
                                                    "type": "custom",
                                                    "value": {
                                                        "protocol": "tcp",
                                                        "source": {
                                                            "port": "any",
                                                            "cidr": "192.168.1.0/24"
                                                        },
                                                        "destination": {
                                                            "port": "any",
                                                            "cidr": "any"
                                                        }
                                                    }
                                                },
                                                {
                                                    "type": "custom",
                                                    "value": {
                                                        "protocol": "tcp",
                                                        "source": {
                                                            "port": "any",
                                                            "cidr": "any"
                                                        },
                                                        "destination": {
                                                            "port": "any",
                                                            "network": "L_23456789",
                                                            "vlan": 20,
                                                            "host": 200
                                                        }
                                                    }
                                                },
                                                {
                                                    "type": "custom",
                                                    "value": {
                                                        "protocol": "tcp",
                                                        "source": {
                                                            "port": "any",
                                                            "cidr": "any"
                                                        },
                                                        "destination": {
                                                            "port": "1-1024",
                                                            "fqdn": "www.google.com"
                                                        }
                                                    }
                                                }
                                            ],
                                            "preferredUplink": "wan2",
                                            "failOverCriterion": "poorPerformance",
                                            "performanceClass": {
                                                "type": "custom",
                                                "customPerformanceClassId": "123456"
                                            }
                                        },
                                        {
                                            "trafficFilters": [{
                                                "type": "application",
                                                "value": {
                                                    "id": "meraki:layer7/application/9"
                                                }
                                            }],
                                            "preferredUplink": "defaultUplink"
                                        },
                                        {
                                            "trafficFilters": [{
                                                "type": "application",
                                                "value": {
                                                    "id": "meraki:layer7/application/106"
                                                }
                                            }],
                                            "preferredUplink": "bestForVoIP"
                                        },
                                        {
                                            "trafficFilters": [{
                                                "type": "application",
                                                "value": {
                                                    "id": "meraki:layer7/application/107"
                                                }
                                            }],
                                            "preferredUplink": "loadBalancing",
                                            "performanceClass": {
                                                "type": "builtin",
                                                "builtinPerformanceClassName": "VoIP"
                                            }
                                        },
                                        {
                                            "trafficFilters": [{
                                                "type": "application",
                                                "value": {
                                                    "id": "meraki:layer7/application/162"
                                                }
                                            }],
                                            "preferredUplink": "loadBalancing",
                                            "performanceClass": {
                                                "type": "custom",
                                                "customPerformanceClassId": "123456"
                                            }
                                        },
                                        {
                                            "trafficFilters": [{
                                                "type": "application",
                                                "value": {
                                                    "id": "meraki:layer7/application/168"
                                                }
                                            }],
                                            "preferredUplink": "wan2",
                                            "failOverCriterion": "poorPerformance",
                                            "performanceClass": {
                                                "type": "builtin",
                                                "builtinPerformanceClassName": "VoIP"
                                            }
                                        },
                                        {
                                            "trafficFilters": [{
                                                "type": "application",
                                                "value": {
                                                    "id": "meraki:layer7/application/171"
                                                }
                                            }],
                                            "preferredUplink": "wan2",
                                            "failOverCriterion": "poorPerformance",
                                            "performanceClass": {
                                                "type": "custom",
                                                "customPerformanceClassId": "123456"
                                            }
                                        }
                                    ]
                                }
                            }
                        }
                    ],
                    "responses": {
                        "200": {
                            "description": "Successful operation",
                            "examples": {
                                "application/json": {
                                    "activeActiveAutoVpnEnabled": true,
                                    "defaultUplink": "wan1",
                                    "loadBalancingEnabled": true,
                                    "wanTrafficUplinkPreferences": [{
                                            "trafficFilters": [{
                                                "type": "custom",
                                                "value": {
                                                    "protocol": "tcp",
                                                    "source": {
                                                        "port": "any",
                                                        "cidr": "192.168.1.0/24"
                                                    },
                                                    "destination": {
                                                        "port": "any",
                                                        "cidr": "any"
                                                    }
                                                }
                                            }],
                                            "preferredUplink": "wan2"
                                        },
                                        {
                                            "trafficFilters": [{
                                                "type": "custom",
                                                "value": {
                                                    "protocol": "tcp",
                                                    "source": {
                                                        "port": "1-1024",
                                                        "vlan": 10,
                                                        "host": 254
                                                    },
                                                    "destination": {
                                                        "port": "any",
                                                        "cidr": "any"
                                                    }
                                                }
                                            }],
                                            "preferredUplink": "wan1"
                                        }
                                    ],
                                    "vpnTrafficUplinkPreferences": [{
                                            "trafficFilters": [{
                                                    "type": "applicationCategory",
                                                    "value": {
                                                        "id": "meraki:layer7/category/1"
                                                    }
                                                },
                                                {
                                                    "type": "application",
                                                    "value": {
                                                        "id": "meraki:layer7/application/33"
                                                    }
                                                },
                                                {
                                                    "type": "custom",
                                                    "value": {
                                                        "protocol": "tcp",
                                                        "source": {
                                                            "port": "any",
                                                            "cidr": "192.168.1.0/24"
                                                        },
                                                        "destination": {
                                                            "port": "any",
                                                            "cidr": "any"
                                                        }
                                                    }
                                                },
                                                {
                                                    "type": "custom",
                                                    "value": {
                                                        "protocol": "tcp",
                                                        "source": {
                                                            "port": "any",
                                                            "cidr": "any"
                                                        },
                                                        "destination": {
                                                            "port": "any",
                                                            "network": "L_23456789",
                                                            "vlan": 20,
                                                            "host": 200
                                                        }
                                                    }
                                                },
                                                {
                                                    "type": "custom",
                                                    "value": {
                                                        "protocol": "tcp",
                                                        "source": {
                                                            "port": "any",
                                                            "cidr": "any"
                                                        },
                                                        "destination": {
                                                            "port": "1-1024",
                                                            "fqdn": "www.google.com"
                                                        }
                                                    }
                                                }
                                            ],
                                            "preferredUplink": "wan2",
                                            "failOverCriterion": "poorPerformance",
                                            "performanceClass": {
                                                "type": "custom",
                                                "customPerformanceClassId": "123456"
                                            }
                                        },
                                        {
                                            "trafficFilters": [{
                                                "type": "application",
                                                "value": {
                                                    "id": "meraki:layer7/application/9"
                                                }
                                            }],
                                            "preferredUplink": "defaultUplink"
                                        },
                                        {
                                            "trafficFilters": [{
                                                "type": "application",
                                                "value": {
                                                    "id": "meraki:layer7/application/106"
                                                }
                                            }],
                                            "preferredUplink": "bestForVoIP"
                                        },
                                        {
                                            "trafficFilters": [{
                                                "type": "application",
                                                "value": {
                                                    "id": "meraki:layer7/application/107"
                                                }
                                            }],
                                            "preferredUplink": "loadBalancing",
                                            "performanceClass": {
                                                "type": "builtin",
                                                "builtinPerformanceClassName": "VoIP"
                                            }
                                        },
                                        {
                                            "trafficFilters": [{
                                                "type": "application",
                                                "value": {
                                                    "id": "meraki:layer7/application/162"
                                                }
                                            }],
                                            "preferredUplink": "loadBalancing",
                                            "performanceClass": {
                                                "type": "custom",
                                                "customPerformanceClassId": "123456"
                                            }
                                        },
                                        {
                                            "trafficFilters": [{
                                                "type": "application",
                                                "value": {
                                                    "id": "meraki:layer7/application/168"
                                                }
                                            }],
                                            "preferredUplink": "wan2",
                                            "failOverCriterion": "poorPerformance",
                                            "performanceClass": {
                                                "type": "builtin",
                                                "builtinPerformanceClassName": "VoIP"
                                            }
                                        },
                                        {
                                            "trafficFilters": [{
                                                "type": "application",
                                                "value": {
                                                    "id": "meraki:layer7/application/171"
                                                }
                                            }],
                                            "preferredUplink": "wan2",
                                            "failOverCriterion": "poorPerformance",
                                            "performanceClass": {
                                                "type": "custom",
                                                "customPerformanceClassId": "123456"
                                            }
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "summary": "Update uplink selection settings for an MX network",
                    "tags": [
                        "appliance",
                        "configure",
                        "trafficShaping",
                        "uplinkSelection"
                    ]
                }
            }
        },
        {
            "ruleId": "add-path",
            "message": "`/networks/{networkId}/firmwareUpgrades` - Added",
            "messageHtml": "Path added   <br>\n      <br>\n      - New endpoint\n      <h4>Get current maintenance window for a network</h4>\n      <p>   \n      <b class=\"mr-4 badge get\">GET</b>  <code>/networks/{networkId}/firmwareUpgrades</code>\n      <br>  \n      <pre><code>{\n    &quot;upgradeWindow&quot;: {\n        &quot;hourOfDay&quot;: &quot;4:00&quot;,\n        &quot;dayOfWeek&quot;: &quot;Sun&quot;\n    }\n}</code></pre>\n      </p>\n      <hr>\n      \n      <br>\n      - New endpoint\n      <h4>Update current maintenance window for a network</h4>\n      <p>   \n      <b class=\"mr-4 badge put\">PUT</b>  <code>/networks/{networkId}/firmwareUpgrades</code>\n      <br>  \n      <pre><code>{\n    &quot;upgradeWindow&quot;: {\n        &quot;hourOfDay&quot;: &quot;4:00&quot;,\n        &quot;dayOfWeek&quot;: &quot;Sun&quot;\n    }\n}</code></pre>\n      </p>\n      <hr>\n      ",
            "path": "/networks/{networkId}/firmwareUpgrades",
            "details": {
                "get": {
                    "description": "Get current maintenance window for a network",
                    "operationId": "getNetworkFirmwareUpgrades",
                    "parameters": {
                        "networkId": {
                            "name": "networkId",
                            "in": "path",
                            "type": "string",
                            "required": true
                        }
                    },
                    "responses": {
                        "200": {
                            "description": "Successful operation",
                            "examples": {
                                "application/json": {
                                    "upgradeWindow": {
                                        "hourOfDay": "4:00",
                                        "dayOfWeek": "Sun"
                                    }
                                }
                            }
                        }
                    },
                    "summary": "Get current maintenance window for a network",
                    "tags": [
                        "networks",
                        "configure",
                        "firmwareUpgrades"
                    ],
                    "consumes": [
                        "application/json"
                    ],
                    "produces": [
                        "application/json"
                    ],
                    "schemes": [
                        "https"
                    ],
                    "security": [{
                        "meraki_api_key": []
                    }]
                },
                "put": {
                    "description": "Update current maintenance window for a network",
                    "operationId": "updateNetworkFirmwareUpgrades",
                    "parameters": {
                        "networkId": {
                            "name": "networkId",
                            "in": "path",
                            "type": "string",
                            "required": true
                        },
                        "updateNetworkFirmwareUpgrades": {
                            "name": "updateNetworkFirmwareUpgrades",
                            "in": "body",
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "upgradeWindow": {
                                        "type": "object",
                                        "properties": {
                                            "dayOfWeek": {
                                                "type": "string",
                                                "enum": [
                                                    "sun",
                                                    "mon",
                                                    "tue",
                                                    "wed",
                                                    "thu",
                                                    "fri",
                                                    "sat",
                                                    "sunday",
                                                    "monday",
                                                    "tuesday",
                                                    "wednesday",
                                                    "thursday",
                                                    "friday",
                                                    "saturday"
                                                ],
                                                "description": "Day of the week"
                                            },
                                            "hourOfDay": {
                                                "type": "string",
                                                "enum": [
                                                    "0:00",
                                                    "1:00",
                                                    "2:00",
                                                    "3:00",
                                                    "4:00",
                                                    "5:00",
                                                    "6:00",
                                                    "7:00",
                                                    "8:00",
                                                    "9:00",
                                                    "10:00",
                                                    "11:00",
                                                    "12:00",
                                                    "13:00",
                                                    "14:00",
                                                    "15:00",
                                                    "16:00",
                                                    "17:00",
                                                    "18:00",
                                                    "19:00",
                                                    "20:00",
                                                    "21:00",
                                                    "22:00",
                                                    "23:00"
                                                ],
                                                "description": "Hour of the day"
                                            }
                                        },
                                        "description": "Upgrade window for devices in network"
                                    }
                                },
                                "example": {
                                    "upgradeWindow": {
                                        "hourOfDay": "4:00",
                                        "dayOfWeek": "Sun"
                                    }
                                }
                            }
                        }
                    },
                    "responses": {
                        "200": {
                            "description": "Successful operation",
                            "examples": {
                                "application/json": {
                                    "upgradeWindow": {
                                        "hourOfDay": "4:00",
                                        "dayOfWeek": "Sun"
                                    }
                                }
                            }
                        }
                    },
                    "summary": "Update current maintenance window for a network",
                    "tags": [
                        "networks",
                        "configure",
                        "firmwareUpgrades"
                    ],
                    "consumes": [
                        "application/json"
                    ],
                    "produces": [
                        "application/json"
                    ],
                    "schemes": [
                        "https"
                    ],
                    "security": [{
                        "meraki_api_key": []
                    }]
                }
            },
            "type": "infos",
            "name": "What's Updated",
            "group": "networks",
            "apiDetails": {
                "get": {
                    "description": "Get current maintenance window for a network",
                    "operationId": "getNetworkFirmwareUpgrades",
                    "parameters": [{
                        "name": "networkId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }],
                    "responses": {
                        "200": {
                            "description": "Successful operation",
                            "examples": {
                                "application/json": {
                                    "upgradeWindow": {
                                        "hourOfDay": "4:00",
                                        "dayOfWeek": "Sun"
                                    }
                                }
                            }
                        }
                    },
                    "summary": "Get current maintenance window for a network",
                    "tags": [
                        "networks",
                        "configure",
                        "firmwareUpgrades"
                    ]
                },
                "put": {
                    "description": "Update current maintenance window for a network",
                    "operationId": "updateNetworkFirmwareUpgrades",
                    "parameters": [{
                            "name": "networkId",
                            "in": "path",
                            "type": "string",
                            "required": true
                        },
                        {
                            "name": "updateNetworkFirmwareUpgrades",
                            "in": "body",
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "upgradeWindow": {
                                        "type": "object",
                                        "properties": {
                                            "dayOfWeek": {
                                                "type": "string",
                                                "enum": [
                                                    "sun",
                                                    "mon",
                                                    "tue",
                                                    "wed",
                                                    "thu",
                                                    "fri",
                                                    "sat",
                                                    "sunday",
                                                    "monday",
                                                    "tuesday",
                                                    "wednesday",
                                                    "thursday",
                                                    "friday",
                                                    "saturday"
                                                ],
                                                "description": "Day of the week"
                                            },
                                            "hourOfDay": {
                                                "type": "string",
                                                "enum": [
                                                    "0:00",
                                                    "1:00",
                                                    "2:00",
                                                    "3:00",
                                                    "4:00",
                                                    "5:00",
                                                    "6:00",
                                                    "7:00",
                                                    "8:00",
                                                    "9:00",
                                                    "10:00",
                                                    "11:00",
                                                    "12:00",
                                                    "13:00",
                                                    "14:00",
                                                    "15:00",
                                                    "16:00",
                                                    "17:00",
                                                    "18:00",
                                                    "19:00",
                                                    "20:00",
                                                    "21:00",
                                                    "22:00",
                                                    "23:00"
                                                ],
                                                "description": "Hour of the day"
                                            }
                                        },
                                        "description": "Upgrade window for devices in network"
                                    }
                                },
                                "example": {
                                    "upgradeWindow": {
                                        "hourOfDay": "4:00",
                                        "dayOfWeek": "Sun"
                                    }
                                }
                            }
                        }
                    ],
                    "responses": {
                        "200": {
                            "description": "Successful operation",
                            "examples": {
                                "application/json": {
                                    "upgradeWindow": {
                                        "hourOfDay": "4:00",
                                        "dayOfWeek": "Sun"
                                    }
                                }
                            }
                        }
                    },
                    "summary": "Update current maintenance window for a network",
                    "tags": [
                        "networks",
                        "configure",
                        "firmwareUpgrades"
                    ]
                }
            }
        },
        {
            "ruleId": "add-path",
            "message": "`/networks/{networkId}/mqttBrokers` - Added",
            "messageHtml": "Path added   <br>\n      <br>\n      - New endpoint\n      <h4>List the MQTT brokers for this network</h4>\n      <p>   \n      <b class=\"mr-4 badge get\">GET</b>  <code>/networks/{networkId}/mqttBrokers</code>\n      <br>  \n      <pre><code>[\n    {\n        &quot;id&quot;: &quot;1234&quot;,\n        &quot;name&quot;: &quot;MQTT_Broker_1&quot;,\n        &quot;host&quot;: &quot;1.1.1.1&quot;,\n        &quot;port&quot;: 1234\n    }\n]</code></pre>\n      </p>\n      <hr>\n      \n      <br>\n      - New endpoint\n      <h4>Add an MQTT broker</h4>\n      <p>   \n      <b class=\"mr-4 badge post\">POST</b>  <code>/networks/{networkId}/mqttBrokers</code>\n      <br>  \n      <pre><code>{\n    &quot;id&quot;: &quot;1234&quot;,\n    &quot;name&quot;: &quot;MQTT_Broker_1&quot;,\n    &quot;host&quot;: &quot;1.1.1.1&quot;,\n    &quot;port&quot;: 1234\n}</code></pre>\n      </p>\n      <hr>\n      ",
            "path": "/networks/{networkId}/mqttBrokers",
            "details": {
                "get": {
                    "description": "List the MQTT brokers for this network",
                    "operationId": "getNetworkMqttBrokers",
                    "parameters": {
                        "networkId": {
                            "name": "networkId",
                            "in": "path",
                            "type": "string",
                            "required": true
                        }
                    },
                    "responses": {
                        "200": {
                            "description": "Successful operation",
                            "examples": {
                                "application/json": [{
                                    "id": "1234",
                                    "name": "MQTT_Broker_1",
                                    "host": "1.1.1.1",
                                    "port": 1234
                                }]
                            }
                        }
                    },
                    "summary": "List the MQTT brokers for this network",
                    "tags": [
                        "networks",
                        "configure",
                        "mqttBrokers"
                    ],
                    "consumes": [
                        "application/json"
                    ],
                    "produces": [
                        "application/json"
                    ],
                    "schemes": [
                        "https"
                    ],
                    "security": [{
                        "meraki_api_key": []
                    }]
                },
                "post": {
                    "description": "Add an MQTT broker",
                    "operationId": "createNetworkMqttBroker",
                    "parameters": {
                        "networkId": {
                            "name": "networkId",
                            "in": "path",
                            "type": "string",
                            "required": true
                        },
                        "createNetworkMqttBroker": {
                            "name": "createNetworkMqttBroker",
                            "in": "body",
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "description": "Name of the MQTT broker",
                                        "required": true
                                    },
                                    "host": {
                                        "type": "string",
                                        "description": "Host name/IP address where MQTT broker runs",
                                        "required": true
                                    },
                                    "port": {
                                        "type": "integer",
                                        "description": "Host port though which MQTT broker can be reached",
                                        "required": true
                                    }
                                },
                                "example": {
                                    "name": "MQTT_Broker_1",
                                    "host": "1.1.1.1",
                                    "port": 1234
                                }
                            },
                            "required": true
                        }
                    },
                    "responses": {
                        "201": {
                            "description": "Successful operation",
                            "examples": {
                                "application/json": {
                                    "id": "1234",
                                    "name": "MQTT_Broker_1",
                                    "host": "1.1.1.1",
                                    "port": 1234
                                }
                            }
                        }
                    },
                    "summary": "Add an MQTT broker",
                    "tags": [
                        "networks",
                        "configure",
                        "mqttBrokers"
                    ],
                    "consumes": [
                        "application/json"
                    ],
                    "produces": [
                        "application/json"
                    ],
                    "schemes": [
                        "https"
                    ],
                    "security": [{
                        "meraki_api_key": []
                    }]
                }
            },
            "type": "infos",
            "name": "What's Updated",
            "group": "networks",
            "apiDetails": {
                "get": {
                    "description": "List the MQTT brokers for this network",
                    "operationId": "getNetworkMqttBrokers",
                    "parameters": [{
                        "name": "networkId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }],
                    "responses": {
                        "200": {
                            "description": "Successful operation",
                            "examples": {
                                "application/json": [{
                                    "id": "1234",
                                    "name": "MQTT_Broker_1",
                                    "host": "1.1.1.1",
                                    "port": 1234
                                }]
                            }
                        }
                    },
                    "summary": "List the MQTT brokers for this network",
                    "tags": [
                        "networks",
                        "configure",
                        "mqttBrokers"
                    ]
                },
                "post": {
                    "description": "Add an MQTT broker",
                    "operationId": "createNetworkMqttBroker",
                    "parameters": [{
                            "name": "networkId",
                            "in": "path",
                            "type": "string",
                            "required": true
                        },
                        {
                            "name": "createNetworkMqttBroker",
                            "in": "body",
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "description": "Name of the MQTT broker",
                                        "required": true
                                    },
                                    "host": {
                                        "type": "string",
                                        "description": "Host name/IP address where MQTT broker runs",
                                        "required": true
                                    },
                                    "port": {
                                        "type": "integer",
                                        "description": "Host port though which MQTT broker can be reached",
                                        "required": true
                                    }
                                },
                                "example": {
                                    "name": "MQTT_Broker_1",
                                    "host": "1.1.1.1",
                                    "port": 1234
                                }
                            },
                            "required": true
                        }
                    ],
                    "responses": {
                        "201": {
                            "description": "Successful operation",
                            "examples": {
                                "application/json": {
                                    "id": "1234",
                                    "name": "MQTT_Broker_1",
                                    "host": "1.1.1.1",
                                    "port": 1234
                                }
                            }
                        }
                    },
                    "summary": "Add an MQTT broker",
                    "tags": [
                        "networks",
                        "configure",
                        "mqttBrokers"
                    ]
                }
            }
        },
        {
            "ruleId": "add-path",
            "message": "`/networks/{networkId}/mqttBrokers/{mqttBrokerId}` - Added",
            "messageHtml": "Path added   <br>\n      <br>\n      - New endpoint\n      <h4>Return an MQTT broker</h4>\n      <p>   \n      <b class=\"mr-4 badge get\">GET</b>  <code>/networks/{networkId}/mqttBrokers/{mqttBrokerId}</code>\n      <br>  \n      <pre><code>{\n    &quot;id&quot;: &quot;1234&quot;,\n    &quot;name&quot;: &quot;MQTT_Broker_1&quot;,\n    &quot;host&quot;: &quot;1.1.1.1&quot;,\n    &quot;port&quot;: 1234\n}</code></pre>\n      </p>\n      <hr>\n      \n      <br>\n      - New endpoint\n      <h4>Update an MQTT broker</h4>\n      <p>   \n      <b class=\"mr-4 badge put\">PUT</b>  <code>/networks/{networkId}/mqttBrokers/{mqttBrokerId}</code>\n      <br>  \n      <pre><code>{\n    &quot;id&quot;: &quot;1234&quot;,\n    &quot;name&quot;: &quot;MQTT_Broker_1&quot;,\n    &quot;host&quot;: &quot;1.1.1.1&quot;,\n    &quot;port&quot;: 1234\n}</code></pre>\n      </p>\n      <hr>\n      \n      <br>\n      - New endpoint\n      <h4>Delete an MQTT broker</h4>\n      <p>   \n      <b class=\"mr-4 badge delete\">DELETE</b>  <code>/networks/{networkId}/mqttBrokers/{mqttBrokerId}</code>\n      <br>  \n      <pre><code></code></pre>\n      </p>\n      <hr>\n      ",
            "path": "/networks/{networkId}/mqttBrokers/{mqttBrokerId}",
            "details": {
                "get": {
                    "description": "Return an MQTT broker",
                    "operationId": "getNetworkMqttBroker",
                    "parameters": {
                        "networkId": {
                            "name": "networkId",
                            "in": "path",
                            "type": "string",
                            "required": true
                        },
                        "mqttBrokerId": {
                            "name": "mqttBrokerId",
                            "in": "path",
                            "type": "string",
                            "required": true
                        }
                    },
                    "responses": {
                        "200": {
                            "description": "Successful operation",
                            "examples": {
                                "application/json": {
                                    "id": "1234",
                                    "name": "MQTT_Broker_1",
                                    "host": "1.1.1.1",
                                    "port": 1234
                                }
                            }
                        }
                    },
                    "summary": "Return an MQTT broker",
                    "tags": [
                        "networks",
                        "configure",
                        "mqttBrokers"
                    ],
                    "consumes": [
                        "application/json"
                    ],
                    "produces": [
                        "application/json"
                    ],
                    "schemes": [
                        "https"
                    ],
                    "security": [{
                        "meraki_api_key": []
                    }]
                },
                "put": {
                    "description": "Update an MQTT broker",
                    "operationId": "updateNetworkMqttBroker",
                    "parameters": {
                        "networkId": {
                            "name": "networkId",
                            "in": "path",
                            "type": "string",
                            "required": true
                        },
                        "mqttBrokerId": {
                            "name": "mqttBrokerId",
                            "in": "path",
                            "type": "string",
                            "required": true
                        },
                        "updateNetworkMqttBroker": {
                            "name": "updateNetworkMqttBroker",
                            "in": "body",
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "description": "Name of the mqtt config"
                                    },
                                    "host": {
                                        "type": "string",
                                        "description": "Host name where mqtt broker runs"
                                    },
                                    "port": {
                                        "type": "integer",
                                        "description": "Host port though which mqtt broker can be reached"
                                    }
                                },
                                "example": {
                                    "id": "1234",
                                    "name": "MQTT_Broker_1",
                                    "host": "1.1.1.1",
                                    "port": 1234
                                }
                            }
                        }
                    },
                    "responses": {
                        "200": {
                            "description": "Successful operation",
                            "examples": {
                                "application/json": {
                                    "id": "1234",
                                    "name": "MQTT_Broker_1",
                                    "host": "1.1.1.1",
                                    "port": 1234
                                }
                            }
                        }
                    },
                    "summary": "Update an MQTT broker",
                    "tags": [
                        "networks",
                        "configure",
                        "mqttBrokers"
                    ],
                    "consumes": [
                        "application/json"
                    ],
                    "produces": [
                        "application/json"
                    ],
                    "schemes": [
                        "https"
                    ],
                    "security": [{
                        "meraki_api_key": []
                    }]
                },
                "delete": {
                    "description": "Delete an MQTT broker",
                    "operationId": "deleteNetworkMqttBroker",
                    "parameters": {
                        "networkId": {
                            "name": "networkId",
                            "in": "path",
                            "type": "string",
                            "required": true
                        },
                        "mqttBrokerId": {
                            "name": "mqttBrokerId",
                            "in": "path",
                            "type": "string",
                            "required": true
                        }
                    },
                    "responses": {
                        "204": {
                            "description": "Successful operation"
                        }
                    },
                    "summary": "Delete an MQTT broker",
                    "tags": [
                        "networks",
                        "configure",
                        "mqttBrokers"
                    ],
                    "consumes": [
                        "application/json"
                    ],
                    "produces": [
                        "application/json"
                    ],
                    "schemes": [
                        "https"
                    ],
                    "security": [{
                        "meraki_api_key": []
                    }]
                }
            },
            "type": "infos",
            "name": "What's Updated",
            "group": "networks",
            "apiDetails": {
                "get": {
                    "description": "Return an MQTT broker",
                    "operationId": "getNetworkMqttBroker",
                    "parameters": [{
                            "name": "networkId",
                            "in": "path",
                            "type": "string",
                            "required": true
                        },
                        {
                            "name": "mqttBrokerId",
                            "in": "path",
                            "type": "string",
                            "required": true
                        }
                    ],
                    "responses": {
                        "200": {
                            "description": "Successful operation",
                            "examples": {
                                "application/json": {
                                    "id": "1234",
                                    "name": "MQTT_Broker_1",
                                    "host": "1.1.1.1",
                                    "port": 1234
                                }
                            }
                        }
                    },
                    "summary": "Return an MQTT broker",
                    "tags": [
                        "networks",
                        "configure",
                        "mqttBrokers"
                    ]
                },
                "put": {
                    "description": "Update an MQTT broker",
                    "operationId": "updateNetworkMqttBroker",
                    "parameters": [{
                            "name": "networkId",
                            "in": "path",
                            "type": "string",
                            "required": true
                        },
                        {
                            "name": "mqttBrokerId",
                            "in": "path",
                            "type": "string",
                            "required": true
                        },
                        {
                            "name": "updateNetworkMqttBroker",
                            "in": "body",
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "description": "Name of the mqtt config"
                                    },
                                    "host": {
                                        "type": "string",
                                        "description": "Host name where mqtt broker runs"
                                    },
                                    "port": {
                                        "type": "integer",
                                        "description": "Host port though which mqtt broker can be reached"
                                    }
                                },
                                "example": {
                                    "id": "1234",
                                    "name": "MQTT_Broker_1",
                                    "host": "1.1.1.1",
                                    "port": 1234
                                }
                            }
                        }
                    ],
                    "responses": {
                        "200": {
                            "description": "Successful operation",
                            "examples": {
                                "application/json": {
                                    "id": "1234",
                                    "name": "MQTT_Broker_1",
                                    "host": "1.1.1.1",
                                    "port": 1234
                                }
                            }
                        }
                    },
                    "summary": "Update an MQTT broker",
                    "tags": [
                        "networks",
                        "configure",
                        "mqttBrokers"
                    ]
                },
                "delete": {
                    "description": "Delete an MQTT broker",
                    "operationId": "deleteNetworkMqttBroker",
                    "parameters": [{
                            "name": "networkId",
                            "in": "path",
                            "type": "string",
                            "required": true
                        },
                        {
                            "name": "mqttBrokerId",
                            "in": "path",
                            "type": "string",
                            "required": true
                        }
                    ],
                    "responses": {
                        "204": {
                            "description": "Successful operation"
                        }
                    },
                    "summary": "Delete an MQTT broker",
                    "tags": [
                        "networks",
                        "configure",
                        "mqttBrokers"
                    ]
                }
            }
        },
        {
            "ruleId": "add-path",
            "message": "`/networks/{networkId}/networkHealth/channelUtilization` - Added",
            "messageHtml": "Path added   <br>\n      <br>\n      - New endpoint\n      <h4>Get the channel utilization over each radio for all APs in a network.</h4>\n      <p>   \n      <b class=\"mr-4 badge get\">GET</b>  <code>/networks/{networkId}/networkHealth/channelUtilization</code>\n      <br>  \n      <pre><code>[\n    {\n        &quot;serial&quot;: &quot;Q234-ABCD-5678&quot;,\n        &quot;model&quot;: &quot;MR34&quot;,\n        &quot;tags&quot;: &quot; recently-added &quot;,\n        &quot;wifi0&quot;: [\n            {\n                &quot;startTime&quot;: &quot;2018-10-09T22:18:27Z&quot;,\n                &quot;endTime&quot;: &quot;2018-10-09T22:19:27Z&quot;,\n                &quot;utilizationTotal&quot;: 33.84,\n                &quot;utilization80211&quot;: 32,\n                &quot;utilizationNon80211&quot;: 1.84\n            },\n            {\n                &quot;startTime&quot;: &quot;2018-10-09T22:19:27Z&quot;,\n                &quot;endTime&quot;: &quot;2018-10-09T22:20:27Z&quot;,\n                &quot;utilizationTotal&quot;: 33.85,\n                &quot;utilization80211&quot;: 32.01,\n                &quot;utilizationNon80211&quot;: 1.84\n            },\n            {\n                &quot;startTime&quot;: &quot;2018-10-09T22:20:27Z&quot;,\n                &quot;endTime&quot;: &quot;2018-10-09T22:21:27Z&quot;,\n                &quot;utilizationTotal&quot;: 34.89,\n                &quot;utilization80211&quot;: 33.48,\n                &quot;utilizationNon80211&quot;: 1.41\n            }\n        ],\n        &quot;wifi1&quot;: [\n            {\n                &quot;startTime&quot;: &quot;2018-10-09T22:18:27Z&quot;,\n                &quot;endTime&quot;: &quot;2018-10-09T22:19:27Z&quot;,\n                &quot;utilizationTotal&quot;: 33.84,\n                &quot;utilization80211&quot;: 32,\n                &quot;utilizationNon80211&quot;: 1.84\n            },\n            {\n                &quot;startTime&quot;: &quot;2018-10-09T22:19:27Z&quot;,\n                &quot;endTime&quot;: &quot;2018-10-09T22:20:27Z&quot;,\n                &quot;utilizationTotal&quot;: 33.85,\n                &quot;utilization80211&quot;: 32.01,\n                &quot;utilizationNon80211&quot;: 1.84\n            },\n            {\n                &quot;startTime&quot;: &quot;2018-10-09T22:20:27Z&quot;,\n                &quot;endTime&quot;: &quot;2018-10-09T22:21:27Z&quot;,\n                &quot;utilizationTotal&quot;: 34.89,\n                &quot;utilization80211&quot;: 33.48,\n                &quot;utilizationNon80211&quot;: 1.41\n            }\n        ]\n    }\n]</code></pre>\n      </p>\n      <hr>\n      ",
            "path": "/networks/{networkId}/networkHealth/channelUtilization",
            "details": {
                "get": {
                    "description": "Get the channel utilization over each radio for all APs in a network.",
                    "operationId": "getNetworkNetworkHealthChannelUtilization",
                    "parameters": {
                        "networkId": {
                            "name": "networkId",
                            "in": "path",
                            "type": "string",
                            "required": true
                        },
                        "t0": {
                            "type": "string",
                            "name": "t0",
                            "in": "query",
                            "description": "The beginning of the timespan for the data. The maximum lookback period is 31 days from today."
                        },
                        "t1": {
                            "type": "string",
                            "name": "t1",
                            "in": "query",
                            "description": "The end of the timespan for the data. t1 can be a maximum of 31 days after t0."
                        },
                        "timespan": {
                            "type": "number",
                            "format": "float",
                            "name": "timespan",
                            "in": "query",
                            "description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 31 days. The default is 1 day."
                        },
                        "resolution": {
                            "type": "integer",
                            "name": "resolution",
                            "in": "query",
                            "description": "The time resolution in seconds for returned data. The valid resolutions are: 600. The default is 600."
                        },
                        "perPage": {
                            "type": "integer",
                            "name": "perPage",
                            "in": "query",
                            "description": "The number of entries per page returned. Acceptable range is 3 - 100. Default is 10."
                        },
                        "startingAfter": {
                            "type": "string",
                            "name": "startingAfter",
                            "in": "query",
                            "description": "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
                        },
                        "endingBefore": {
                            "type": "string",
                            "name": "endingBefore",
                            "in": "query",
                            "description": "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
                        }
                    },
                    "responses": {
                        "200": {
                            "description": "Successful operation",
                            "headers": {
                                "Link": {
                                    "type": "string",
                                    "description": "A comma-separated list of first, last, prev, and next relative links used for subsequent paginated requests."
                                }
                            },
                            "examples": {
                                "application/json": [{
                                    "serial": "Q234-ABCD-5678",
                                    "model": "MR34",
                                    "tags": " recently-added ",
                                    "wifi0": [{
                                            "startTime": "2018-10-09T22:18:27Z",
                                            "endTime": "2018-10-09T22:19:27Z",
                                            "utilizationTotal": 33.84,
                                            "utilization80211": 32,
                                            "utilizationNon80211": 1.84
                                        },
                                        {
                                            "startTime": "2018-10-09T22:19:27Z",
                                            "endTime": "2018-10-09T22:20:27Z",
                                            "utilizationTotal": 33.85,
                                            "utilization80211": 32.01,
                                            "utilizationNon80211": 1.84
                                        },
                                        {
                                            "startTime": "2018-10-09T22:20:27Z",
                                            "endTime": "2018-10-09T22:21:27Z",
                                            "utilizationTotal": 34.89,
                                            "utilization80211": 33.48,
                                            "utilizationNon80211": 1.41
                                        }
                                    ],
                                    "wifi1": [{
                                            "startTime": "2018-10-09T22:18:27Z",
                                            "endTime": "2018-10-09T22:19:27Z",
                                            "utilizationTotal": 33.84,
                                            "utilization80211": 32,
                                            "utilizationNon80211": 1.84
                                        },
                                        {
                                            "startTime": "2018-10-09T22:19:27Z",
                                            "endTime": "2018-10-09T22:20:27Z",
                                            "utilizationTotal": 33.85,
                                            "utilization80211": 32.01,
                                            "utilizationNon80211": 1.84
                                        },
                                        {
                                            "startTime": "2018-10-09T22:20:27Z",
                                            "endTime": "2018-10-09T22:21:27Z",
                                            "utilizationTotal": 34.89,
                                            "utilization80211": 33.48,
                                            "utilizationNon80211": 1.41
                                        }
                                    ]
                                }]
                            }
                        }
                    },
                    "summary": "Get the channel utilization over each radio for all APs in a network.",
                    "tags": [
                        "networks",
                        "configure",
                        "networkHealth",
                        "channelUtilization"
                    ],
                    "consumes": [
                        "application/json"
                    ],
                    "produces": [
                        "application/json"
                    ],
                    "schemes": [
                        "https"
                    ],
                    "security": [{
                        "meraki_api_key": []
                    }]
                }
            },
            "type": "infos",
            "name": "What's Updated",
            "group": "networks",
            "apiDetails": {
                "get": {
                    "description": "Get the channel utilization over each radio for all APs in a network.",
                    "operationId": "getNetworkNetworkHealthChannelUtilization",
                    "parameters": [{
                            "name": "networkId",
                            "in": "path",
                            "type": "string",
                            "required": true
                        },
                        {
                            "type": "string",
                            "name": "t0",
                            "in": "query",
                            "description": "The beginning of the timespan for the data. The maximum lookback period is 31 days from today."
                        },
                        {
                            "type": "string",
                            "name": "t1",
                            "in": "query",
                            "description": "The end of the timespan for the data. t1 can be a maximum of 31 days after t0."
                        },
                        {
                            "type": "number",
                            "format": "float",
                            "name": "timespan",
                            "in": "query",
                            "description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 31 days. The default is 1 day."
                        },
                        {
                            "type": "integer",
                            "name": "resolution",
                            "in": "query",
                            "description": "The time resolution in seconds for returned data. The valid resolutions are: 600. The default is 600."
                        },
                        {
                            "type": "integer",
                            "name": "perPage",
                            "in": "query",
                            "description": "The number of entries per page returned. Acceptable range is 3 - 100. Default is 10."
                        },
                        {
                            "type": "string",
                            "name": "startingAfter",
                            "in": "query",
                            "description": "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
                        },
                        {
                            "type": "string",
                            "name": "endingBefore",
                            "in": "query",
                            "description": "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
                        }
                    ],
                    "responses": {
                        "200": {
                            "description": "Successful operation",
                            "headers": {
                                "Link": {
                                    "type": "string",
                                    "description": "A comma-separated list of first, last, prev, and next relative links used for subsequent paginated requests."
                                }
                            },
                            "examples": {
                                "application/json": [{
                                    "serial": "Q234-ABCD-5678",
                                    "model": "MR34",
                                    "tags": " recently-added ",
                                    "wifi0": [{
                                            "startTime": "2018-10-09T22:18:27Z",
                                            "endTime": "2018-10-09T22:19:27Z",
                                            "utilizationTotal": 33.84,
                                            "utilization80211": 32,
                                            "utilizationNon80211": 1.84
                                        },
                                        {
                                            "startTime": "2018-10-09T22:19:27Z",
                                            "endTime": "2018-10-09T22:20:27Z",
                                            "utilizationTotal": 33.85,
                                            "utilization80211": 32.01,
                                            "utilizationNon80211": 1.84
                                        },
                                        {
                                            "startTime": "2018-10-09T22:20:27Z",
                                            "endTime": "2018-10-09T22:21:27Z",
                                            "utilizationTotal": 34.89,
                                            "utilization80211": 33.48,
                                            "utilizationNon80211": 1.41
                                        }
                                    ],
                                    "wifi1": [{
                                            "startTime": "2018-10-09T22:18:27Z",
                                            "endTime": "2018-10-09T22:19:27Z",
                                            "utilizationTotal": 33.84,
                                            "utilization80211": 32,
                                            "utilizationNon80211": 1.84
                                        },
                                        {
                                            "startTime": "2018-10-09T22:19:27Z",
                                            "endTime": "2018-10-09T22:20:27Z",
                                            "utilizationTotal": 33.85,
                                            "utilization80211": 32.01,
                                            "utilizationNon80211": 1.84
                                        },
                                        {
                                            "startTime": "2018-10-09T22:20:27Z",
                                            "endTime": "2018-10-09T22:21:27Z",
                                            "utilizationTotal": 34.89,
                                            "utilization80211": 33.48,
                                            "utilizationNon80211": 1.41
                                        }
                                    ]
                                }]
                            }
                        }
                    },
                    "summary": "Get the channel utilization over each radio for all APs in a network.",
                    "tags": [
                        "networks",
                        "configure",
                        "networkHealth",
                        "channelUtilization"
                    ]
                }
            }
        },
        {
            "ruleId": "add-path",
            "message": "`/networks/{networkId}/settings` - Added",
            "messageHtml": "Path added   <br>\n      <br>\n      - New endpoint\n      <h4>Return the settings for a network</h4>\n      <p>   \n      <b class=\"mr-4 badge get\">GET</b>  <code>/networks/{networkId}/settings</code>\n      <br>  \n      <pre><code>{\n    &quot;localStatusPageEnabled&quot;: true,\n    &quot;remoteStatusPageEnabled&quot;: true\n}</code></pre>\n      </p>\n      <hr>\n      \n      <br>\n      - New endpoint\n      <h4>Update the settings for a network</h4>\n      <p>   \n      <b class=\"mr-4 badge put\">PUT</b>  <code>/networks/{networkId}/settings</code>\n      <br>  \n      <pre><code>{\n    &quot;localStatusPageEnabled&quot;: true,\n    &quot;remoteStatusPageEnabled&quot;: true\n}</code></pre>\n      </p>\n      <hr>\n      ",
            "path": "/networks/{networkId}/settings",
            "details": {
                "get": {
                    "description": "Return the settings for a network",
                    "operationId": "getNetworkSettings",
                    "parameters": {
                        "networkId": {
                            "name": "networkId",
                            "in": "path",
                            "type": "string",
                            "required": true
                        }
                    },
                    "responses": {
                        "200": {
                            "description": "Successful operation",
                            "examples": {
                                "application/json": {
                                    "localStatusPageEnabled": true,
                                    "remoteStatusPageEnabled": true
                                }
                            }
                        }
                    },
                    "summary": "Return the settings for a network",
                    "tags": [
                        "networks",
                        "configure",
                        "settings"
                    ],
                    "consumes": [
                        "application/json"
                    ],
                    "produces": [
                        "application/json"
                    ],
                    "schemes": [
                        "https"
                    ],
                    "security": [{
                        "meraki_api_key": []
                    }]
                },
                "put": {
                    "description": "Update the settings for a network",
                    "operationId": "updateNetworkSettings",
                    "parameters": {
                        "networkId": {
                            "name": "networkId",
                            "in": "path",
                            "type": "string",
                            "required": true
                        },
                        "updateNetworkSettings": {
                            "name": "updateNetworkSettings",
                            "in": "body",
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "localStatusPageEnabled": {
                                        "type": "boolean",
                                        "description": "Enables / disables the local device status pages (<a target='_blank' href='http://my.meraki.com/'>my.meraki.com, </a><a target='_blank' href='http://ap.meraki.com/'>ap.meraki.com, </a><a target='_blank' href='http://switch.meraki.com/'>switch.meraki.com, </a><a target='_blank' href='http://wired.meraki.com/'>wired.meraki.com</a>). Optional (defaults to false)"
                                    },
                                    "remoteStatusPageEnabled": {
                                        "type": "boolean",
                                        "description": "Enables / disables access to the device status page (<a target='_blank'>http://[device's LAN IP])</a>. Optional. Can only be set if localStatusPageEnabled is set to true"
                                    }
                                },
                                "example": {
                                    "localStatusPageEnabled": true,
                                    "remoteStatusPageEnabled": true
                                }
                            }
                        }
                    },
                    "responses": {
                        "200": {
                            "description": "Successful operation",
                            "examples": {
                                "application/json": {
                                    "localStatusPageEnabled": true,
                                    "remoteStatusPageEnabled": true
                                }
                            }
                        }
                    },
                    "summary": "Update the settings for a network",
                    "tags": [
                        "networks",
                        "configure",
                        "settings"
                    ],
                    "consumes": [
                        "application/json"
                    ],
                    "produces": [
                        "application/json"
                    ],
                    "schemes": [
                        "https"
                    ],
                    "security": [{
                        "meraki_api_key": []
                    }]
                }
            },
            "type": "infos",
            "name": "What's Updated",
            "group": "networks",
            "apiDetails": {
                "get": {
                    "description": "Return the settings for a network",
                    "operationId": "getNetworkSettings",
                    "parameters": [{
                        "name": "networkId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }],
                    "responses": {
                        "200": {
                            "description": "Successful operation",
                            "examples": {
                                "application/json": {
                                    "localStatusPageEnabled": true,
                                    "remoteStatusPageEnabled": true
                                }
                            }
                        }
                    },
                    "summary": "Return the settings for a network",
                    "tags": [
                        "networks",
                        "configure",
                        "settings"
                    ]
                },
                "put": {
                    "description": "Update the settings for a network",
                    "operationId": "updateNetworkSettings",
                    "parameters": [{
                            "name": "networkId",
                            "in": "path",
                            "type": "string",
                            "required": true
                        },
                        {
                            "name": "updateNetworkSettings",
                            "in": "body",
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "localStatusPageEnabled": {
                                        "type": "boolean",
                                        "description": "Enables / disables the local device status pages (<a target='_blank' href='http://my.meraki.com/'>my.meraki.com, </a><a target='_blank' href='http://ap.meraki.com/'>ap.meraki.com, </a><a target='_blank' href='http://switch.meraki.com/'>switch.meraki.com, </a><a target='_blank' href='http://wired.meraki.com/'>wired.meraki.com</a>). Optional (defaults to false)"
                                    },
                                    "remoteStatusPageEnabled": {
                                        "type": "boolean",
                                        "description": "Enables / disables access to the device status page (<a target='_blank'>http://[device's LAN IP])</a>. Optional. Can only be set if localStatusPageEnabled is set to true"
                                    }
                                },
                                "example": {
                                    "localStatusPageEnabled": true,
                                    "remoteStatusPageEnabled": true
                                }
                            }
                        }
                    ],
                    "responses": {
                        "200": {
                            "description": "Successful operation",
                            "examples": {
                                "application/json": {
                                    "localStatusPageEnabled": true,
                                    "remoteStatusPageEnabled": true
                                }
                            }
                        }
                    },
                    "summary": "Update the settings for a network",
                    "tags": [
                        "networks",
                        "configure",
                        "settings"
                    ]
                }
            }
        },
        {
            "ruleId": "add-path",
            "message": "`/networks/{networkId}/sm/devices/wipe` - Added",
            "messageHtml": "Path added   <br>\n      <br>\n      - New endpoint\n      <h4>Wipe a device</h4>\n      <p>   \n      <b class=\"mr-4 badge post\">POST</b>  <code>/networks/{networkId}/sm/devices/wipe</code>\n      <br>  \n      <pre><code>{\n    &quot;id&quot;: &quot;1284392014819&quot;\n}</code></pre>\n      </p>\n      <hr>\n      ",
            "path": "/networks/{networkId}/sm/devices/wipe",
            "details": {
                "post": {
                    "description": "Wipe a device",
                    "operationId": "wipeNetworkSmDevices",
                    "parameters": {
                        "networkId": {
                            "name": "networkId",
                            "in": "path",
                            "type": "string",
                            "required": true
                        },
                        "wipeNetworkSmDevices": {
                            "name": "wipeNetworkSmDevices",
                            "in": "body",
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "wifiMac": {
                                        "type": "string",
                                        "description": "The wifiMac of the device to be wiped."
                                    },
                                    "id": {
                                        "type": "string",
                                        "description": "The id of the device to be wiped."
                                    },
                                    "serial": {
                                        "type": "string",
                                        "description": "The serial of the device to be wiped."
                                    },
                                    "pin": {
                                        "type": "integer",
                                        "description": "The pin number (a six digit value) for wiping a macOS device. Required only for macOS devices."
                                    }
                                },
                                "example": {
                                    "id": "1284392014819"
                                }
                            }
                        }
                    },
                    "responses": {
                        "200": {
                            "description": "Successful operation",
                            "examples": {
                                "application/json": {
                                    "id": "1284392014819"
                                }
                            }
                        }
                    },
                    "summary": "Wipe a device",
                    "tags": [
                        "sm",
                        "configure",
                        "devices"
                    ],
                    "consumes": [
                        "application/json"
                    ],
                    "produces": [
                        "application/json"
                    ],
                    "schemes": [
                        "https"
                    ],
                    "security": [{
                        "meraki_api_key": []
                    }]
                }
            },
            "type": "infos",
            "name": "What's Updated",
            "group": "sm",
            "apiDetails": {
                "post": {
                    "description": "Wipe a device",
                    "operationId": "wipeNetworkSmDevices",
                    "parameters": [{
                            "name": "networkId",
                            "in": "path",
                            "type": "string",
                            "required": true
                        },
                        {
                            "name": "wipeNetworkSmDevices",
                            "in": "body",
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "wifiMac": {
                                        "type": "string",
                                        "description": "The wifiMac of the device to be wiped."
                                    },
                                    "id": {
                                        "type": "string",
                                        "description": "The id of the device to be wiped."
                                    },
                                    "serial": {
                                        "type": "string",
                                        "description": "The serial of the device to be wiped."
                                    },
                                    "pin": {
                                        "type": "integer",
                                        "description": "The pin number (a six digit value) for wiping a macOS device. Required only for macOS devices."
                                    }
                                },
                                "example": {
                                    "id": "1284392014819"
                                }
                            }
                        }
                    ],
                    "responses": {
                        "200": {
                            "description": "Successful operation",
                            "examples": {
                                "application/json": {
                                    "id": "1284392014819"
                                }
                            }
                        }
                    },
                    "summary": "Wipe a device",
                    "tags": [
                        "sm",
                        "configure",
                        "devices"
                    ]
                }
            }
        },
        {
            "ruleId": "add-path",
            "message": "`/networks/{networkId}/switch/routing/multicast/rendezvousPoints` - Added",
            "messageHtml": "Path added   <br>\n      <br>\n      - New endpoint\n      <h4>List multicast rendezvous points</h4>\n      <p>   \n      <b class=\"mr-4 badge get\">GET</b>  <code>/networks/{networkId}/switch/routing/multicast/rendezvousPoints</code>\n      <br>  \n      <pre><code>[\n    [\n        {\n            &quot;rendezvousPointId&quot;: &quot;1234&quot;,\n            &quot;serial&quot;: &quot;Q234-ABCD-5678&quot;,\n            &quot;interfaceName&quot;: &quot;l3_interface_0&quot;,\n            &quot;interfaceIp&quot;: &quot;192.168.1.2&quot;,\n            &quot;multicastGroup&quot;: &quot;Any&quot;\n        },\n        {\n            &quot;rendezvousPointId&quot;: &quot;1234&quot;,\n            &quot;switchStackId&quot;: &quot;789102&quot;,\n            &quot;interfaceName&quot;: &quot;l3_interface_1&quot;,\n            &quot;interfaceIp&quot;: &quot;192.0.0.10&quot;,\n            &quot;multicastGroup&quot;: &quot;239.0.0.0/24&quot;\n        },\n        {\n            &quot;rendezvousPointId&quot;: &quot;1234&quot;,\n            &quot;interfaceIp&quot;: &quot;192.168.1.2&quot;,\n            &quot;multicastGroup&quot;: &quot;192.168.128.0/24&quot;\n        }\n    ]\n]</code></pre>\n      </p>\n      <hr>\n      \n      <br>\n      - New endpoint\n      <h4>Create a multicast rendezvous point</h4>\n      <p>   \n      <b class=\"mr-4 badge post\">POST</b>  <code>/networks/{networkId}/switch/routing/multicast/rendezvousPoints</code>\n      <br>  \n      <pre><code>{\n    &quot;rendezvousPointId&quot;: &quot;1234&quot;,\n    &quot;interfaceIp&quot;: &quot;192.168.1.2&quot;,\n    &quot;multicastGroup&quot;: &quot;192.168.128.0/24&quot;\n}</code></pre>\n      </p>\n      <hr>\n      ",
            "path": "/networks/{networkId}/switch/routing/multicast/rendezvousPoints",
            "details": {
                "get": {
                    "description": "List multicast rendezvous points",
                    "operationId": "getNetworkSwitchRoutingMulticastRendezvousPoints",
                    "parameters": {
                        "networkId": {
                            "name": "networkId",
                            "in": "path",
                            "type": "string",
                            "required": true
                        }
                    },
                    "responses": {
                        "200": {
                            "description": "Successful operation",
                            "examples": {
                                "application/json": [
                                    [{
                                            "rendezvousPointId": "1234",
                                            "serial": "Q234-ABCD-5678",
                                            "interfaceName": "l3_interface_0",
                                            "interfaceIp": "192.168.1.2",
                                            "multicastGroup": "Any"
                                        },
                                        {
                                            "rendezvousPointId": "1234",
                                            "switchStackId": "789102",
                                            "interfaceName": "l3_interface_1",
                                            "interfaceIp": "192.0.0.10",
                                            "multicastGroup": "239.0.0.0/24"
                                        },
                                        {
                                            "rendezvousPointId": "1234",
                                            "interfaceIp": "192.168.1.2",
                                            "multicastGroup": "192.168.128.0/24"
                                        }
                                    ]
                                ]
                            }
                        }
                    },
                    "summary": "List multicast rendezvous points",
                    "tags": [
                        "switch",
                        "configure",
                        "routing",
                        "multicast",
                        "rendezvousPoints"
                    ],
                    "consumes": [
                        "application/json"
                    ],
                    "produces": [
                        "application/json"
                    ],
                    "schemes": [
                        "https"
                    ],
                    "security": [{
                        "meraki_api_key": []
                    }]
                },
                "post": {
                    "description": "Create a multicast rendezvous point",
                    "operationId": "createNetworkSwitchRoutingMulticastRendezvousPoint",
                    "parameters": {
                        "networkId": {
                            "name": "networkId",
                            "in": "path",
                            "type": "string",
                            "required": true
                        },
                        "createNetworkSwitchRoutingMulticastRendezvousPoint": {
                            "name": "createNetworkSwitchRoutingMulticastRendezvousPoint",
                            "in": "body",
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "interfaceIp": {
                                        "type": "string",
                                        "description": "The IP address of the interface where the RP needs to be created.",
                                        "required": true
                                    },
                                    "multicastGroup": {
                                        "type": "string",
                                        "description": "'Any', or the IP address of a multicast group",
                                        "required": true
                                    }
                                },
                                "example": {
                                    "interfaceIp": "192.168.1.2",
                                    "multicastGroup": "192.168.128.0/24"
                                }
                            },
                            "required": true
                        }
                    },
                    "responses": {
                        "201": {
                            "description": "Successful operation",
                            "examples": {
                                "application/json": {
                                    "rendezvousPointId": "1234",
                                    "interfaceIp": "192.168.1.2",
                                    "multicastGroup": "192.168.128.0/24"
                                }
                            }
                        }
                    },
                    "summary": "Create a multicast rendezvous point",
                    "tags": [
                        "switch",
                        "configure",
                        "routing",
                        "multicast",
                        "rendezvousPoints"
                    ],
                    "consumes": [
                        "application/json"
                    ],
                    "produces": [
                        "application/json"
                    ],
                    "schemes": [
                        "https"
                    ],
                    "security": [{
                        "meraki_api_key": []
                    }]
                }
            },
            "type": "infos",
            "name": "What's Updated",
            "group": "switch",
            "apiDetails": {
                "get": {
                    "description": "List multicast rendezvous points",
                    "operationId": "getNetworkSwitchRoutingMulticastRendezvousPoints",
                    "parameters": [{
                        "name": "networkId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }],
                    "responses": {
                        "200": {
                            "description": "Successful operation",
                            "examples": {
                                "application/json": [
                                    [{
                                            "rendezvousPointId": "1234",
                                            "serial": "Q234-ABCD-5678",
                                            "interfaceName": "l3_interface_0",
                                            "interfaceIp": "192.168.1.2",
                                            "multicastGroup": "Any"
                                        },
                                        {
                                            "rendezvousPointId": "1234",
                                            "switchStackId": "789102",
                                            "interfaceName": "l3_interface_1",
                                            "interfaceIp": "192.0.0.10",
                                            "multicastGroup": "239.0.0.0/24"
                                        },
                                        {
                                            "rendezvousPointId": "1234",
                                            "interfaceIp": "192.168.1.2",
                                            "multicastGroup": "192.168.128.0/24"
                                        }
                                    ]
                                ]
                            }
                        }
                    },
                    "summary": "List multicast rendezvous points",
                    "tags": [
                        "switch",
                        "configure",
                        "routing",
                        "multicast",
                        "rendezvousPoints"
                    ]
                },
                "post": {
                    "description": "Create a multicast rendezvous point",
                    "operationId": "createNetworkSwitchRoutingMulticastRendezvousPoint",
                    "parameters": [{
                            "name": "networkId",
                            "in": "path",
                            "type": "string",
                            "required": true
                        },
                        {
                            "name": "createNetworkSwitchRoutingMulticastRendezvousPoint",
                            "in": "body",
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "interfaceIp": {
                                        "type": "string",
                                        "description": "The IP address of the interface where the RP needs to be created.",
                                        "required": true
                                    },
                                    "multicastGroup": {
                                        "type": "string",
                                        "description": "'Any', or the IP address of a multicast group",
                                        "required": true
                                    }
                                },
                                "example": {
                                    "interfaceIp": "192.168.1.2",
                                    "multicastGroup": "192.168.128.0/24"
                                }
                            },
                            "required": true
                        }
                    ],
                    "responses": {
                        "201": {
                            "description": "Successful operation",
                            "examples": {
                                "application/json": {
                                    "rendezvousPointId": "1234",
                                    "interfaceIp": "192.168.1.2",
                                    "multicastGroup": "192.168.128.0/24"
                                }
                            }
                        }
                    },
                    "summary": "Create a multicast rendezvous point",
                    "tags": [
                        "switch",
                        "configure",
                        "routing",
                        "multicast",
                        "rendezvousPoints"
                    ]
                }
            }
        },
        {
            "ruleId": "add-path",
            "message": "`/networks/{networkId}/switch/routing/multicast/rendezvousPoints/{rendezvousPointId}` - Added",
            "messageHtml": "Path added   <br>\n      <br>\n      - New endpoint\n      <h4>Return a multicast rendezvous point</h4>\n      <p>   \n      <b class=\"mr-4 badge get\">GET</b>  <code>/networks/{networkId}/switch/routing/multicast/rendezvousPoints/{rendezvousPointId}</code>\n      <br>  \n      <pre><code>{\n    &quot;rendezvousPointId&quot;: &quot;1234&quot;,\n    &quot;serial&quot;: &quot;Q234-ABCD-5678&quot;,\n    &quot;interfaceName&quot;: &quot;l3_interface_0&quot;,\n    &quot;interfaceIp&quot;: &quot;192.168.1.2&quot;,\n    &quot;multicastGroup&quot;: &quot;Any&quot;\n}</code></pre>\n      </p>\n      <hr>\n      \n      <br>\n      - New endpoint\n      <h4>Update a multicast rendezvous point</h4>\n      <p>   \n      <b class=\"mr-4 badge put\">PUT</b>  <code>/networks/{networkId}/switch/routing/multicast/rendezvousPoints/{rendezvousPointId}</code>\n      <br>  \n      <pre><code>{\n    &quot;rendezvousPointId&quot;: &quot;1234&quot;,\n    &quot;interfaceIp&quot;: &quot;192.168.1.2&quot;,\n    &quot;multicastGroup&quot;: &quot;192.168.128.0/24&quot;\n}</code></pre>\n      </p>\n      <hr>\n      \n      <br>\n      - New endpoint\n      <h4>Delete a multicast rendezvous point</h4>\n      <p>   \n      <b class=\"mr-4 badge delete\">DELETE</b>  <code>/networks/{networkId}/switch/routing/multicast/rendezvousPoints/{rendezvousPointId}</code>\n      <br>  \n      <pre><code></code></pre>\n      </p>\n      <hr>\n      ",
            "path": "/networks/{networkId}/switch/routing/multicast/rendezvousPoints/{rendezvousPointId}",
            "details": {
                "get": {
                    "description": "Return a multicast rendezvous point",
                    "operationId": "getNetworkSwitchRoutingMulticastRendezvousPoint",
                    "parameters": {
                        "networkId": {
                            "name": "networkId",
                            "in": "path",
                            "type": "string",
                            "required": true
                        },
                        "rendezvousPointId": {
                            "name": "rendezvousPointId",
                            "in": "path",
                            "type": "string",
                            "required": true
                        }
                    },
                    "responses": {
                        "200": {
                            "description": "Successful operation",
                            "examples": {
                                "application/json": {
                                    "rendezvousPointId": "1234",
                                    "serial": "Q234-ABCD-5678",
                                    "interfaceName": "l3_interface_0",
                                    "interfaceIp": "192.168.1.2",
                                    "multicastGroup": "Any"
                                }
                            }
                        }
                    },
                    "summary": "Return a multicast rendezvous point",
                    "tags": [
                        "switch",
                        "configure",
                        "routing",
                        "multicast",
                        "rendezvousPoints"
                    ],
                    "consumes": [
                        "application/json"
                    ],
                    "produces": [
                        "application/json"
                    ],
                    "schemes": [
                        "https"
                    ],
                    "security": [{
                        "meraki_api_key": []
                    }]
                },
                "put": {
                    "description": "Update a multicast rendezvous point",
                    "operationId": "updateNetworkSwitchRoutingMulticastRendezvousPoint",
                    "parameters": {
                        "networkId": {
                            "name": "networkId",
                            "in": "path",
                            "type": "string",
                            "required": true
                        },
                        "rendezvousPointId": {
                            "name": "rendezvousPointId",
                            "in": "path",
                            "type": "string",
                            "required": true
                        },
                        "updateNetworkSwitchRoutingMulticastRendezvousPoint": {
                            "name": "updateNetworkSwitchRoutingMulticastRendezvousPoint",
                            "in": "body",
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "interfaceIp": {
                                        "type": "string",
                                        "description": "The IP address of the interface to use",
                                        "required": true
                                    },
                                    "multicastGroup": {
                                        "type": "string",
                                        "description": "'Any', or the IP address of a multicast group",
                                        "required": true
                                    }
                                },
                                "example": {
                                    "interfaceIp": "192.168.1.2",
                                    "multicastGroup": "192.168.128.0/24"
                                }
                            },
                            "required": true
                        }
                    },
                    "responses": {
                        "200": {
                            "description": "Successful operation",
                            "examples": {
                                "application/json": {
                                    "rendezvousPointId": "1234",
                                    "interfaceIp": "192.168.1.2",
                                    "multicastGroup": "192.168.128.0/24"
                                }
                            }
                        }
                    },
                    "summary": "Update a multicast rendezvous point",
                    "tags": [
                        "switch",
                        "configure",
                        "routing",
                        "multicast",
                        "rendezvousPoints"
                    ],
                    "consumes": [
                        "application/json"
                    ],
                    "produces": [
                        "application/json"
                    ],
                    "schemes": [
                        "https"
                    ],
                    "security": [{
                        "meraki_api_key": []
                    }]
                },
                "delete": {
                    "description": "Delete a multicast rendezvous point",
                    "operationId": "deleteNetworkSwitchRoutingMulticastRendezvousPoint",
                    "parameters": {
                        "networkId": {
                            "name": "networkId",
                            "in": "path",
                            "type": "string",
                            "required": true
                        },
                        "rendezvousPointId": {
                            "name": "rendezvousPointId",
                            "in": "path",
                            "type": "string",
                            "required": true
                        }
                    },
                    "responses": {
                        "204": {
                            "description": "Successful operation"
                        }
                    },
                    "summary": "Delete a multicast rendezvous point",
                    "tags": [
                        "switch",
                        "configure",
                        "routing",
                        "multicast",
                        "rendezvousPoints"
                    ],
                    "consumes": [
                        "application/json"
                    ],
                    "produces": [
                        "application/json"
                    ],
                    "schemes": [
                        "https"
                    ],
                    "security": [{
                        "meraki_api_key": []
                    }]
                }
            },
            "type": "infos",
            "name": "What's Updated",
            "group": "switch",
            "apiDetails": {
                "get": {
                    "description": "Return a multicast rendezvous point",
                    "operationId": "getNetworkSwitchRoutingMulticastRendezvousPoint",
                    "parameters": [{
                            "name": "networkId",
                            "in": "path",
                            "type": "string",
                            "required": true
                        },
                        {
                            "name": "rendezvousPointId",
                            "in": "path",
                            "type": "string",
                            "required": true
                        }
                    ],
                    "responses": {
                        "200": {
                            "description": "Successful operation",
                            "examples": {
                                "application/json": {
                                    "rendezvousPointId": "1234",
                                    "serial": "Q234-ABCD-5678",
                                    "interfaceName": "l3_interface_0",
                                    "interfaceIp": "192.168.1.2",
                                    "multicastGroup": "Any"
                                }
                            }
                        }
                    },
                    "summary": "Return a multicast rendezvous point",
                    "tags": [
                        "switch",
                        "configure",
                        "routing",
                        "multicast",
                        "rendezvousPoints"
                    ]
                },
                "delete": {
                    "description": "Delete a multicast rendezvous point",
                    "operationId": "deleteNetworkSwitchRoutingMulticastRendezvousPoint",
                    "parameters": [{
                            "name": "networkId",
                            "in": "path",
                            "type": "string",
                            "required": true
                        },
                        {
                            "name": "rendezvousPointId",
                            "in": "path",
                            "type": "string",
                            "required": true
                        }
                    ],
                    "responses": {
                        "204": {
                            "description": "Successful operation"
                        }
                    },
                    "summary": "Delete a multicast rendezvous point",
                    "tags": [
                        "switch",
                        "configure",
                        "routing",
                        "multicast",
                        "rendezvousPoints"
                    ]
                },
                "put": {
                    "description": "Update a multicast rendezvous point",
                    "operationId": "updateNetworkSwitchRoutingMulticastRendezvousPoint",
                    "parameters": [{
                            "name": "networkId",
                            "in": "path",
                            "type": "string",
                            "required": true
                        },
                        {
                            "name": "rendezvousPointId",
                            "in": "path",
                            "type": "string",
                            "required": true
                        },
                        {
                            "name": "updateNetworkSwitchRoutingMulticastRendezvousPoint",
                            "in": "body",
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "interfaceIp": {
                                        "type": "string",
                                        "description": "The IP address of the interface to use",
                                        "required": true
                                    },
                                    "multicastGroup": {
                                        "type": "string",
                                        "description": "'Any', or the IP address of a multicast group",
                                        "required": true
                                    }
                                },
                                "example": {
                                    "interfaceIp": "192.168.1.2",
                                    "multicastGroup": "192.168.128.0/24"
                                }
                            },
                            "required": true
                        }
                    ],
                    "responses": {
                        "200": {
                            "description": "Successful operation",
                            "examples": {
                                "application/json": {
                                    "rendezvousPointId": "1234",
                                    "interfaceIp": "192.168.1.2",
                                    "multicastGroup": "192.168.128.0/24"
                                }
                            }
                        }
                    },
                    "summary": "Update a multicast rendezvous point",
                    "tags": [
                        "switch",
                        "configure",
                        "routing",
                        "multicast",
                        "rendezvousPoints"
                    ]
                }
            }
        },
        {
            "ruleId": "add-path",
            "message": "`/networks/{networkId}/switch/routing/ospf` - Added",
            "messageHtml": "Path added   <br>\n      <br>\n      - New endpoint\n      <h4>Return layer 3 OSPF routing configuration</h4>\n      <p>   \n      <b class=\"mr-4 badge get\">GET</b>  <code>/networks/{networkId}/switch/routing/ospf</code>\n      <br>  \n      <pre><code>{\n    &quot;enabled&quot;: true,\n    &quot;helloTimerInSeconds&quot;: 10,\n    &quot;deadTimerInSeconds&quot;: 40,\n    &quot;areas&quot;: [\n        {\n            &quot;areaId&quot;: &quot;1284392014819&quot;,\n            &quot;areaName&quot;: &quot;Backbone&quot;,\n            &quot;areaType&quot;: &quot;normal&quot;\n        }\n    ],\n    &quot;md5AuthenticationEnabled&quot;: true,\n    &quot;md5AuthenticationKey&quot;: {\n        &quot;id&quot;: &quot;1234&quot;,\n        &quot;passphrase&quot;: &quot;abc1234&quot;\n    }\n}</code></pre>\n      </p>\n      <hr>\n      \n      <br>\n      - New endpoint\n      <h4>Update layer 3 OSPF routing configuration</h4>\n      <p>   \n      <b class=\"mr-4 badge put\">PUT</b>  <code>/networks/{networkId}/switch/routing/ospf</code>\n      <br>  \n      <pre><code>{\n    &quot;enabled&quot;: true,\n    &quot;helloTimerInSeconds&quot;: 10,\n    &quot;deadTimerInSeconds&quot;: 40,\n    &quot;areas&quot;: [\n        {\n            &quot;areaId&quot;: &quot;1284392014819&quot;,\n            &quot;areaName&quot;: &quot;Backbone&quot;,\n            &quot;areaType&quot;: &quot;normal&quot;\n        }\n    ],\n    &quot;md5AuthenticationEnabled&quot;: true,\n    &quot;md5AuthenticationKey&quot;: {\n        &quot;id&quot;: &quot;1234&quot;,\n        &quot;passphrase&quot;: &quot;abc1234&quot;\n    }\n}</code></pre>\n      </p>\n      <hr>\n      ",
            "path": "/networks/{networkId}/switch/routing/ospf",
            "details": {
                "get": {
                    "description": "Return layer 3 OSPF routing configuration",
                    "operationId": "getNetworkSwitchRoutingOspf",
                    "parameters": {
                        "networkId": {
                            "name": "networkId",
                            "in": "path",
                            "type": "string",
                            "required": true
                        }
                    },
                    "responses": {
                        "200": {
                            "description": "Successful operation",
                            "examples": {
                                "application/json": {
                                    "enabled": true,
                                    "helloTimerInSeconds": 10,
                                    "deadTimerInSeconds": 40,
                                    "areas": [{
                                        "areaId": "1284392014819",
                                        "areaName": "Backbone",
                                        "areaType": "normal"
                                    }],
                                    "md5AuthenticationEnabled": true,
                                    "md5AuthenticationKey": {
                                        "id": "1234",
                                        "passphrase": "abc1234"
                                    }
                                }
                            }
                        }
                    },
                    "summary": "Return layer 3 OSPF routing configuration",
                    "tags": [
                        "switch",
                        "configure",
                        "routing",
                        "ospf"
                    ],
                    "consumes": [
                        "application/json"
                    ],
                    "produces": [
                        "application/json"
                    ],
                    "schemes": [
                        "https"
                    ],
                    "security": [{
                        "meraki_api_key": []
                    }]
                },
                "put": {
                    "description": "Update layer 3 OSPF routing configuration",
                    "operationId": "updateNetworkSwitchRoutingOspf",
                    "parameters": {
                        "networkId": {
                            "name": "networkId",
                            "in": "path",
                            "type": "string",
                            "required": true
                        },
                        "updateNetworkSwitchRoutingOspf": {
                            "name": "updateNetworkSwitchRoutingOspf",
                            "in": "body",
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "enabled": {
                                        "type": "boolean",
                                        "description": "Boolean value to enable or disable OSPF routing. OSPF routing is disabled by default."
                                    },
                                    "helloTimerInSeconds": {
                                        "type": "integer",
                                        "description": "Time interval in seconds at which hello packet will be sent to OSPF neighbors to maintain connectivity. Value must be between 1 and 255. Default is 10 seconds"
                                    },
                                    "deadTimerInSeconds": {
                                        "type": "integer",
                                        "description": "Time interval to determine when the peer will be declare inactive/dead. Value must be between 1 and 65535"
                                    },
                                    "areas": {
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "areaId": {
                                                    "type": "integer",
                                                    "description": "OSPF area ID",
                                                    "required": true
                                                },
                                                "areaName": {
                                                    "type": "string",
                                                    "description": "Name of the OSPF area",
                                                    "required": true
                                                },
                                                "areaType": {
                                                    "type": "string",
                                                    "enum": [
                                                        "normal",
                                                        "stub",
                                                        "nssa"
                                                    ],
                                                    "description": "Area types in OSPF. Must be one of: [\"normal\", \"stub\", \"nssa\"]",
                                                    "required": true
                                                }
                                            }
                                        },
                                        "description": "OSPF areas"
                                    },
                                    "md5AuthenticationEnabled": {
                                        "type": "boolean",
                                        "description": "Boolean value to enable or disable MD5 authentication. MD5 authentication is disabled by default."
                                    },
                                    "md5AuthenticationKey": {
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "description": "MD5 authentication key index. Key index must be between 1 to 255"
                                            },
                                            "passphrase": {
                                                "type": "string",
                                                "description": "MD5 authentication passphrase"
                                            }
                                        },
                                        "description": "MD5 authentication credentials. This param is only relevant if md5AuthenticationEnabled is true"
                                    }
                                },
                                "example": {
                                    "enabled": true,
                                    "helloTimerInSeconds": 10,
                                    "deadTimerInSeconds": 40,
                                    "areas": [{
                                        "areaId": "1284392014819",
                                        "areaName": "Backbone",
                                        "areaType": "normal"
                                    }],
                                    "md5AuthenticationEnabled": true,
                                    "md5AuthenticationKey": {
                                        "id": "1234",
                                        "passphrase": "abc1234"
                                    }
                                }
                            }
                        }
                    },
                    "responses": {
                        "200": {
                            "description": "Successful operation",
                            "examples": {
                                "application/json": {
                                    "enabled": true,
                                    "helloTimerInSeconds": 10,
                                    "deadTimerInSeconds": 40,
                                    "areas": [{
                                        "areaId": "1284392014819",
                                        "areaName": "Backbone",
                                        "areaType": "normal"
                                    }],
                                    "md5AuthenticationEnabled": true,
                                    "md5AuthenticationKey": {
                                        "id": "1234",
                                        "passphrase": "abc1234"
                                    }
                                }
                            }
                        }
                    },
                    "summary": "Update layer 3 OSPF routing configuration",
                    "tags": [
                        "switch",
                        "configure",
                        "routing",
                        "ospf"
                    ],
                    "consumes": [
                        "application/json"
                    ],
                    "produces": [
                        "application/json"
                    ],
                    "schemes": [
                        "https"
                    ],
                    "security": [{
                        "meraki_api_key": []
                    }]
                }
            },
            "type": "infos",
            "name": "What's Updated",
            "group": "switch",
            "apiDetails": {
                "get": {
                    "description": "Return layer 3 OSPF routing configuration",
                    "operationId": "getNetworkSwitchRoutingOspf",
                    "parameters": [{
                        "name": "networkId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }],
                    "responses": {
                        "200": {
                            "description": "Successful operation",
                            "examples": {
                                "application/json": {
                                    "enabled": true,
                                    "helloTimerInSeconds": 10,
                                    "deadTimerInSeconds": 40,
                                    "areas": [{
                                        "areaId": "1284392014819",
                                        "areaName": "Backbone",
                                        "areaType": "normal"
                                    }],
                                    "md5AuthenticationEnabled": true,
                                    "md5AuthenticationKey": {
                                        "id": "1234",
                                        "passphrase": "abc1234"
                                    }
                                }
                            }
                        }
                    },
                    "summary": "Return layer 3 OSPF routing configuration",
                    "tags": [
                        "switch",
                        "configure",
                        "routing",
                        "ospf"
                    ]
                },
                "put": {
                    "description": "Update layer 3 OSPF routing configuration",
                    "operationId": "updateNetworkSwitchRoutingOspf",
                    "parameters": [{
                            "name": "networkId",
                            "in": "path",
                            "type": "string",
                            "required": true
                        },
                        {
                            "name": "updateNetworkSwitchRoutingOspf",
                            "in": "body",
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "enabled": {
                                        "type": "boolean",
                                        "description": "Boolean value to enable or disable OSPF routing. OSPF routing is disabled by default."
                                    },
                                    "helloTimerInSeconds": {
                                        "type": "integer",
                                        "description": "Time interval in seconds at which hello packet will be sent to OSPF neighbors to maintain connectivity. Value must be between 1 and 255. Default is 10 seconds"
                                    },
                                    "deadTimerInSeconds": {
                                        "type": "integer",
                                        "description": "Time interval to determine when the peer will be declare inactive/dead. Value must be between 1 and 65535"
                                    },
                                    "areas": {
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "areaId": {
                                                    "type": "integer",
                                                    "description": "OSPF area ID",
                                                    "required": true
                                                },
                                                "areaName": {
                                                    "type": "string",
                                                    "description": "Name of the OSPF area",
                                                    "required": true
                                                },
                                                "areaType": {
                                                    "type": "string",
                                                    "enum": [
                                                        "normal",
                                                        "stub",
                                                        "nssa"
                                                    ],
                                                    "description": "Area types in OSPF. Must be one of: [\"normal\", \"stub\", \"nssa\"]",
                                                    "required": true
                                                }
                                            }
                                        },
                                        "description": "OSPF areas"
                                    },
                                    "md5AuthenticationEnabled": {
                                        "type": "boolean",
                                        "description": "Boolean value to enable or disable MD5 authentication. MD5 authentication is disabled by default."
                                    },
                                    "md5AuthenticationKey": {
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "description": "MD5 authentication key index. Key index must be between 1 to 255"
                                            },
                                            "passphrase": {
                                                "type": "string",
                                                "description": "MD5 authentication passphrase"
                                            }
                                        },
                                        "description": "MD5 authentication credentials. This param is only relevant if md5AuthenticationEnabled is true"
                                    }
                                },
                                "example": {
                                    "enabled": true,
                                    "helloTimerInSeconds": 10,
                                    "deadTimerInSeconds": 40,
                                    "areas": [{
                                        "areaId": "1284392014819",
                                        "areaName": "Backbone",
                                        "areaType": "normal"
                                    }],
                                    "md5AuthenticationEnabled": true,
                                    "md5AuthenticationKey": {
                                        "id": "1234",
                                        "passphrase": "abc1234"
                                    }
                                }
                            }
                        }
                    ],
                    "responses": {
                        "200": {
                            "description": "Successful operation",
                            "examples": {
                                "application/json": {
                                    "enabled": true,
                                    "helloTimerInSeconds": 10,
                                    "deadTimerInSeconds": 40,
                                    "areas": [{
                                        "areaId": "1284392014819",
                                        "areaName": "Backbone",
                                        "areaType": "normal"
                                    }],
                                    "md5AuthenticationEnabled": true,
                                    "md5AuthenticationKey": {
                                        "id": "1234",
                                        "passphrase": "abc1234"
                                    }
                                }
                            }
                        }
                    },
                    "summary": "Update layer 3 OSPF routing configuration",
                    "tags": [
                        "switch",
                        "configure",
                        "routing",
                        "ospf"
                    ]
                }
            }
        },
        {
            "ruleId": "add-path",
            "message": "`/networks/{networkId}/switch/stacks/{switchStackId}/routing/interfaces` - Added",
            "messageHtml": "Path added   <br>\n      <br>\n      - New endpoint\n      <h4>List layer 3 interfaces for a switch stack</h4>\n      <p>   \n      <b class=\"mr-4 badge get\">GET</b>  <code>/networks/{networkId}/switch/stacks/{switchStackId}/routing/interfaces</code>\n      <br>  \n      <pre><code>[\n    {\n        &quot;interfaceId&quot;: &quot;1234&quot;,\n        &quot;name&quot;: &quot;L3 interface&quot;,\n        &quot;subnet&quot;: &quot;192.168.1.0/24&quot;,\n        &quot;interfaceIp&quot;: &quot;192.168.1.2&quot;,\n        &quot;multicastRouting&quot;: &quot;disabled&quot;,\n        &quot;vlanId&quot;: 100,\n        &quot;defaultGateway&quot;: &quot;192.168.1.1&quot;,\n        &quot;ospfSettings&quot;: {\n            &quot;area&quot;: &quot;0&quot;,\n            &quot;cost&quot;: 1,\n            &quot;isPassiveEnabled&quot;: true\n        }\n    }\n]</code></pre>\n      </p>\n      <hr>\n      \n      <br>\n      - New endpoint\n      <h4>Create a layer 3 interface for a switch stack</h4>\n      <p>   \n      <b class=\"mr-4 badge post\">POST</b>  <code>/networks/{networkId}/switch/stacks/{switchStackId}/routing/interfaces</code>\n      <br>  \n      <pre><code>{\n    &quot;interfaceId&quot;: &quot;1234&quot;,\n    &quot;name&quot;: &quot;L3 interface&quot;,\n    &quot;subnet&quot;: &quot;192.168.1.0/24&quot;,\n    &quot;interfaceIp&quot;: &quot;192.168.1.2&quot;,\n    &quot;multicastRouting&quot;: &quot;disabled&quot;,\n    &quot;vlanId&quot;: 100,\n    &quot;defaultGateway&quot;: &quot;192.168.1.1&quot;,\n    &quot;ospfSettings&quot;: {\n        &quot;area&quot;: &quot;0&quot;,\n        &quot;cost&quot;: 1,\n        &quot;isPassiveEnabled&quot;: true\n    }\n}</code></pre>\n      </p>\n      <hr>\n      ",
            "path": "/networks/{networkId}/switch/stacks/{switchStackId}/routing/interfaces",
            "details": {
                "get": {
                    "description": "List layer 3 interfaces for a switch stack",
                    "operationId": "getNetworkSwitchStackRoutingInterfaces",
                    "parameters": {
                        "networkId": {
                            "name": "networkId",
                            "in": "path",
                            "type": "string",
                            "required": true
                        },
                        "switchStackId": {
                            "name": "switchStackId",
                            "in": "path",
                            "type": "string",
                            "required": true
                        }
                    },
                    "responses": {
                        "200": {
                            "description": "Successful operation",
                            "examples": {
                                "application/json": [{
                                    "interfaceId": "1234",
                                    "name": "L3 interface",
                                    "subnet": "192.168.1.0/24",
                                    "interfaceIp": "192.168.1.2",
                                    "multicastRouting": "disabled",
                                    "vlanId": 100,
                                    "defaultGateway": "192.168.1.1",
                                    "ospfSettings": {
                                        "area": "0",
                                        "cost": 1,
                                        "isPassiveEnabled": true
                                    }
                                }]
                            }
                        }
                    },
                    "summary": "List layer 3 interfaces for a switch stack",
                    "tags": [
                        "switch",
                        "configure",
                        "stacks",
                        "routing",
                        "interfaces"
                    ],
                    "consumes": [
                        "application/json"
                    ],
                    "produces": [
                        "application/json"
                    ],
                    "schemes": [
                        "https"
                    ],
                    "security": [{
                        "meraki_api_key": []
                    }]
                },
                "post": {
                    "description": "Create a layer 3 interface for a switch stack",
                    "operationId": "createNetworkSwitchStackRoutingInterface",
                    "parameters": {
                        "networkId": {
                            "name": "networkId",
                            "in": "path",
                            "type": "string",
                            "required": true
                        },
                        "switchStackId": {
                            "name": "switchStackId",
                            "in": "path",
                            "type": "string",
                            "required": true
                        },
                        "createNetworkSwitchStackRoutingInterface": {
                            "name": "createNetworkSwitchStackRoutingInterface",
                            "in": "body",
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "description": "A friendly name or description for the interface or VLAN.",
                                        "required": true
                                    },
                                    "subnet": {
                                        "type": "string",
                                        "description": "The network that this routed interface is on, in CIDR notation (ex. 10.1.1.0/24).",
                                        "required": true
                                    },
                                    "interfaceIp": {
                                        "type": "string",
                                        "description": "The IP address this switch stack will use for layer 3 routing on this VLAN or subnet. This cannot be the same as the switch's management IP.",
                                        "required": true
                                    },
                                    "multicastRouting": {
                                        "type": "string",
                                        "enum": [
                                            "disabled",
                                            "enabled",
                                            "IGMP snooping querier"
                                        ],
                                        "description": "Enable multicast support if, multicast routing between VLANs is required. Options are, 'disabled', 'enabled' or 'IGMP snooping querier'. Default is 'disabled'."
                                    },
                                    "vlanId": {
                                        "type": "integer",
                                        "description": "The VLAN this routed interface is on. VLAN must be between 1 and 4094.",
                                        "required": true
                                    },
                                    "defaultGateway": {
                                        "type": "string",
                                        "description": "The next hop for any traffic that isn't going to a directly connected subnet or over a static route. This IP address must exist in a subnet with a routed interface."
                                    },
                                    "ospfSettings": {
                                        "type": "object",
                                        "properties": {
                                            "area": {
                                                "type": "string",
                                                "description": "The OSPF area to which this interface should belong. Can be either 'disabled' or the identifier of an existing OSPF area. Defaults to 'disabled'."
                                            },
                                            "cost": {
                                                "type": "integer",
                                                "description": "The path cost for this interface. Defaults to 1, but can be increased up to 65535 to give lower priority."
                                            },
                                            "isPassiveEnabled": {
                                                "type": "boolean",
                                                "description": "When enabled, OSPF will not run on the interface, but the subnet will still be advertised."
                                            }
                                        },
                                        "description": "The OSPF routing settings of the interface."
                                    }
                                },
                                "example": {
                                    "name": "L3 interface",
                                    "subnet": "192.168.1.0/24",
                                    "interfaceIp": "192.168.1.2",
                                    "multicastRouting": "disabled",
                                    "vlanId": 100,
                                    "defaultGateway": "192.168.1.1",
                                    "ospfSettings": {
                                        "area": "0",
                                        "cost": 1,
                                        "isPassiveEnabled": true
                                    }
                                }
                            },
                            "required": true
                        }
                    },
                    "responses": {
                        "201": {
                            "description": "Successful operation",
                            "examples": {
                                "application/json": {
                                    "interfaceId": "1234",
                                    "name": "L3 interface",
                                    "subnet": "192.168.1.0/24",
                                    "interfaceIp": "192.168.1.2",
                                    "multicastRouting": "disabled",
                                    "vlanId": 100,
                                    "defaultGateway": "192.168.1.1",
                                    "ospfSettings": {
                                        "area": "0",
                                        "cost": 1,
                                        "isPassiveEnabled": true
                                    }
                                }
                            }
                        }
                    },
                    "summary": "Create a layer 3 interface for a switch stack",
                    "tags": [
                        "switch",
                        "configure",
                        "stacks",
                        "routing",
                        "interfaces"
                    ],
                    "consumes": [
                        "application/json"
                    ],
                    "produces": [
                        "application/json"
                    ],
                    "schemes": [
                        "https"
                    ],
                    "security": [{
                        "meraki_api_key": []
                    }]
                }
            },
            "type": "infos",
            "name": "What's Updated",
            "group": "switch",
            "apiDetails": {
                "get": {
                    "description": "List layer 3 interfaces for a switch stack",
                    "operationId": "getNetworkSwitchStackRoutingInterfaces",
                    "parameters": [{
                            "name": "networkId",
                            "in": "path",
                            "type": "string",
                            "required": true
                        },
                        {
                            "name": "switchStackId",
                            "in": "path",
                            "type": "string",
                            "required": true
                        }
                    ],
                    "responses": {
                        "200": {
                            "description": "Successful operation",
                            "examples": {
                                "application/json": [{
                                    "interfaceId": "1234",
                                    "name": "L3 interface",
                                    "subnet": "192.168.1.0/24",
                                    "interfaceIp": "192.168.1.2",
                                    "multicastRouting": "disabled",
                                    "vlanId": 100,
                                    "defaultGateway": "192.168.1.1",
                                    "ospfSettings": {
                                        "area": "0",
                                        "cost": 1,
                                        "isPassiveEnabled": true
                                    }
                                }]
                            }
                        }
                    },
                    "summary": "List layer 3 interfaces for a switch stack",
                    "tags": [
                        "switch",
                        "configure",
                        "stacks",
                        "routing",
                        "interfaces"
                    ]
                },
                "post": {
                    "description": "Create a layer 3 interface for a switch stack",
                    "operationId": "createNetworkSwitchStackRoutingInterface",
                    "parameters": [{
                            "name": "networkId",
                            "in": "path",
                            "type": "string",
                            "required": true
                        },
                        {
                            "name": "switchStackId",
                            "in": "path",
                            "type": "string",
                            "required": true
                        },
                        {
                            "name": "createNetworkSwitchStackRoutingInterface",
                            "in": "body",
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "description": "A friendly name or description for the interface or VLAN.",
                                        "required": true
                                    },
                                    "subnet": {
                                        "type": "string",
                                        "description": "The network that this routed interface is on, in CIDR notation (ex. 10.1.1.0/24).",
                                        "required": true
                                    },
                                    "interfaceIp": {
                                        "type": "string",
                                        "description": "The IP address this switch stack will use for layer 3 routing on this VLAN or subnet. This cannot be the same as the switch's management IP.",
                                        "required": true
                                    },
                                    "multicastRouting": {
                                        "type": "string",
                                        "enum": [
                                            "disabled",
                                            "enabled",
                                            "IGMP snooping querier"
                                        ],
                                        "description": "Enable multicast support if, multicast routing between VLANs is required. Options are, 'disabled', 'enabled' or 'IGMP snooping querier'. Default is 'disabled'."
                                    },
                                    "vlanId": {
                                        "type": "integer",
                                        "description": "The VLAN this routed interface is on. VLAN must be between 1 and 4094.",
                                        "required": true
                                    },
                                    "defaultGateway": {
                                        "type": "string",
                                        "description": "The next hop for any traffic that isn't going to a directly connected subnet or over a static route. This IP address must exist in a subnet with a routed interface."
                                    },
                                    "ospfSettings": {
                                        "type": "object",
                                        "properties": {
                                            "area": {
                                                "type": "string",
                                                "description": "The OSPF area to which this interface should belong. Can be either 'disabled' or the identifier of an existing OSPF area. Defaults to 'disabled'."
                                            },
                                            "cost": {
                                                "type": "integer",
                                                "description": "The path cost for this interface. Defaults to 1, but can be increased up to 65535 to give lower priority."
                                            },
                                            "isPassiveEnabled": {
                                                "type": "boolean",
                                                "description": "When enabled, OSPF will not run on the interface, but the subnet will still be advertised."
                                            }
                                        },
                                        "description": "The OSPF routing settings of the interface."
                                    }
                                },
                                "example": {
                                    "name": "L3 interface",
                                    "subnet": "192.168.1.0/24",
                                    "interfaceIp": "192.168.1.2",
                                    "multicastRouting": "disabled",
                                    "vlanId": 100,
                                    "defaultGateway": "192.168.1.1",
                                    "ospfSettings": {
                                        "area": "0",
                                        "cost": 1,
                                        "isPassiveEnabled": true
                                    }
                                }
                            },
                            "required": true
                        }
                    ],
                    "responses": {
                        "201": {
                            "description": "Successful operation",
                            "examples": {
                                "application/json": {
                                    "interfaceId": "1234",
                                    "name": "L3 interface",
                                    "subnet": "192.168.1.0/24",
                                    "interfaceIp": "192.168.1.2",
                                    "multicastRouting": "disabled",
                                    "vlanId": 100,
                                    "defaultGateway": "192.168.1.1",
                                    "ospfSettings": {
                                        "area": "0",
                                        "cost": 1,
                                        "isPassiveEnabled": true
                                    }
                                }
                            }
                        }
                    },
                    "summary": "Create a layer 3 interface for a switch stack",
                    "tags": [
                        "switch",
                        "configure",
                        "stacks",
                        "routing",
                        "interfaces"
                    ]
                }
            }
        },
        {
            "ruleId": "add-path",
            "message": "`/networks/{networkId}/switch/stacks/{switchStackId}/routing/interfaces/{interfaceId}` - Added",
            "messageHtml": "Path added   <br>\n      <br>\n      - New endpoint\n      <h4>Return a layer 3 interface from a switch stack</h4>\n      <p>   \n      <b class=\"mr-4 badge get\">GET</b>  <code>/networks/{networkId}/switch/stacks/{switchStackId}/routing/interfaces/{interfaceId}</code>\n      <br>  \n      <pre><code>{\n    &quot;interfaceId&quot;: &quot;1234&quot;,\n    &quot;name&quot;: &quot;L3 interface&quot;,\n    &quot;subnet&quot;: &quot;192.168.1.0/24&quot;,\n    &quot;interfaceIp&quot;: &quot;192.168.1.2&quot;,\n    &quot;multicastRouting&quot;: &quot;disabled&quot;,\n    &quot;vlanId&quot;: 100,\n    &quot;defaultGateway&quot;: &quot;192.168.1.1&quot;,\n    &quot;ospfSettings&quot;: {\n        &quot;area&quot;: &quot;0&quot;,\n        &quot;cost&quot;: 1,\n        &quot;isPassiveEnabled&quot;: true\n    }\n}</code></pre>\n      </p>\n      <hr>\n      \n      <br>\n      - New endpoint\n      <h4>Update a layer 3 interface for a switch stack</h4>\n      <p>   \n      <b class=\"mr-4 badge put\">PUT</b>  <code>/networks/{networkId}/switch/stacks/{switchStackId}/routing/interfaces/{interfaceId}</code>\n      <br>  \n      <pre><code>{\n    &quot;interfaceId&quot;: &quot;1234&quot;,\n    &quot;name&quot;: &quot;L3 interface&quot;,\n    &quot;subnet&quot;: &quot;192.168.1.0/24&quot;,\n    &quot;interfaceIp&quot;: &quot;192.168.1.2&quot;,\n    &quot;multicastRouting&quot;: &quot;disabled&quot;,\n    &quot;vlanId&quot;: 100,\n    &quot;ospfSettings&quot;: {\n        &quot;area&quot;: &quot;0&quot;,\n        &quot;cost&quot;: 1,\n        &quot;isPassiveEnabled&quot;: true\n    }\n}</code></pre>\n      </p>\n      <hr>\n      \n      <br>\n      - New endpoint\n      <h4>Delete a layer 3 interface from a switch stack</h4>\n      <p>   \n      <b class=\"mr-4 badge delete\">DELETE</b>  <code>/networks/{networkId}/switch/stacks/{switchStackId}/routing/interfaces/{interfaceId}</code>\n      <br>  \n      <pre><code></code></pre>\n      </p>\n      <hr>\n      ",
            "path": "/networks/{networkId}/switch/stacks/{switchStackId}/routing/interfaces/{interfaceId}",
            "details": {
                "get": {
                    "description": "Return a layer 3 interface from a switch stack",
                    "operationId": "getNetworkSwitchStackRoutingInterface",
                    "parameters": {
                        "networkId": {
                            "name": "networkId",
                            "in": "path",
                            "type": "string",
                            "required": true
                        },
                        "switchStackId": {
                            "name": "switchStackId",
                            "in": "path",
                            "type": "string",
                            "required": true
                        },
                        "interfaceId": {
                            "name": "interfaceId",
                            "in": "path",
                            "type": "string",
                            "required": true
                        }
                    },
                    "responses": {
                        "200": {
                            "description": "Successful operation",
                            "examples": {
                                "application/json": {
                                    "interfaceId": "1234",
                                    "name": "L3 interface",
                                    "subnet": "192.168.1.0/24",
                                    "interfaceIp": "192.168.1.2",
                                    "multicastRouting": "disabled",
                                    "vlanId": 100,
                                    "defaultGateway": "192.168.1.1",
                                    "ospfSettings": {
                                        "area": "0",
                                        "cost": 1,
                                        "isPassiveEnabled": true
                                    }
                                }
                            }
                        }
                    },
                    "summary": "Return a layer 3 interface from a switch stack",
                    "tags": [
                        "switch",
                        "configure",
                        "stacks",
                        "routing",
                        "interfaces"
                    ],
                    "consumes": [
                        "application/json"
                    ],
                    "produces": [
                        "application/json"
                    ],
                    "schemes": [
                        "https"
                    ],
                    "security": [{
                        "meraki_api_key": []
                    }]
                },
                "put": {
                    "description": "Update a layer 3 interface for a switch stack",
                    "operationId": "updateNetworkSwitchStackRoutingInterface",
                    "parameters": {
                        "networkId": {
                            "name": "networkId",
                            "in": "path",
                            "type": "string",
                            "required": true
                        },
                        "switchStackId": {
                            "name": "switchStackId",
                            "in": "path",
                            "type": "string",
                            "required": true
                        },
                        "interfaceId": {
                            "name": "interfaceId",
                            "in": "path",
                            "type": "string",
                            "required": true
                        },
                        "updateNetworkSwitchStackRoutingInterface": {
                            "name": "updateNetworkSwitchStackRoutingInterface",
                            "in": "body",
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "description": "A friendly name or description for the interface or VLAN."
                                    },
                                    "subnet": {
                                        "type": "string",
                                        "description": "The network that this routed interface is on, in CIDR notation (ex. 10.1.1.0/24)."
                                    },
                                    "interfaceIp": {
                                        "type": "string",
                                        "description": "The IP address this switch stack will use for layer 3 routing on this VLAN or subnet. This cannot be the same as the switch's management IP."
                                    },
                                    "multicastRouting": {
                                        "type": "string",
                                        "enum": [
                                            "disabled",
                                            "enabled",
                                            "IGMP snooping querier"
                                        ],
                                        "description": "Enable multicast support if, multicast routing between VLANs is required. Options are, 'disabled', 'enabled' or 'IGMP snooping querier'."
                                    },
                                    "vlanId": {
                                        "type": "integer",
                                        "description": "The VLAN this routed interface is on. VLAN must be between 1 and 4094."
                                    },
                                    "ospfSettings": {
                                        "type": "object",
                                        "properties": {
                                            "area": {
                                                "type": "string",
                                                "description": "The OSPF area to which this interface should belong. Can be either 'disabled' or the identifier of an existing OSPF area."
                                            },
                                            "cost": {
                                                "type": "integer",
                                                "description": "The path cost for this interface. Defaults to 1, but can be increased up to 65535 to give lower priority."
                                            },
                                            "isPassiveEnabled": {
                                                "type": "boolean",
                                                "description": "When enabled, OSPF will not run on the interface, but the subnet will still be advertised."
                                            }
                                        },
                                        "description": "The OSPF routing settings of the interface."
                                    }
                                },
                                "example": {
                                    "name": "L3 interface",
                                    "subnet": "192.168.1.0/24",
                                    "interfaceIp": "192.168.1.2",
                                    "multicastRouting": "disabled",
                                    "vlanId": 100,
                                    "ospfSettings": {
                                        "area": "0",
                                        "cost": 1,
                                        "isPassiveEnabled": true
                                    }
                                }
                            }
                        }
                    },
                    "responses": {
                        "200": {
                            "description": "Successful operation",
                            "examples": {
                                "application/json": {
                                    "interfaceId": "1234",
                                    "name": "L3 interface",
                                    "subnet": "192.168.1.0/24",
                                    "interfaceIp": "192.168.1.2",
                                    "multicastRouting": "disabled",
                                    "vlanId": 100,
                                    "ospfSettings": {
                                        "area": "0",
                                        "cost": 1,
                                        "isPassiveEnabled": true
                                    }
                                }
                            }
                        }
                    },
                    "summary": "Update a layer 3 interface for a switch stack",
                    "tags": [
                        "switch",
                        "configure",
                        "stacks",
                        "routing",
                        "interfaces"
                    ],
                    "consumes": [
                        "application/json"
                    ],
                    "produces": [
                        "application/json"
                    ],
                    "schemes": [
                        "https"
                    ],
                    "security": [{
                        "meraki_api_key": []
                    }]
                },
                "delete": {
                    "description": "Delete a layer 3 interface from a switch stack",
                    "operationId": "deleteNetworkSwitchStackRoutingInterface",
                    "parameters": {
                        "networkId": {
                            "name": "networkId",
                            "in": "path",
                            "type": "string",
                            "required": true
                        },
                        "switchStackId": {
                            "name": "switchStackId",
                            "in": "path",
                            "type": "string",
                            "required": true
                        },
                        "interfaceId": {
                            "name": "interfaceId",
                            "in": "path",
                            "type": "string",
                            "required": true
                        }
                    },
                    "responses": {
                        "204": {
                            "description": "Successful operation"
                        }
                    },
                    "summary": "Delete a layer 3 interface from a switch stack",
                    "tags": [
                        "switch",
                        "configure",
                        "stacks",
                        "routing",
                        "interfaces"
                    ],
                    "consumes": [
                        "application/json"
                    ],
                    "produces": [
                        "application/json"
                    ],
                    "schemes": [
                        "https"
                    ],
                    "security": [{
                        "meraki_api_key": []
                    }]
                }
            },
            "type": "infos",
            "name": "What's Updated",
            "group": "switch",
            "apiDetails": {
                "get": {
                    "description": "Return a layer 3 interface from a switch stack",
                    "operationId": "getNetworkSwitchStackRoutingInterface",
                    "parameters": [{
                            "name": "networkId",
                            "in": "path",
                            "type": "string",
                            "required": true
                        },
                        {
                            "name": "switchStackId",
                            "in": "path",
                            "type": "string",
                            "required": true
                        },
                        {
                            "name": "interfaceId",
                            "in": "path",
                            "type": "string",
                            "required": true
                        }
                    ],
                    "responses": {
                        "200": {
                            "description": "Successful operation",
                            "examples": {
                                "application/json": {
                                    "interfaceId": "1234",
                                    "name": "L3 interface",
                                    "subnet": "192.168.1.0/24",
                                    "interfaceIp": "192.168.1.2",
                                    "multicastRouting": "disabled",
                                    "vlanId": 100,
                                    "defaultGateway": "192.168.1.1",
                                    "ospfSettings": {
                                        "area": "0",
                                        "cost": 1,
                                        "isPassiveEnabled": true
                                    }
                                }
                            }
                        }
                    },
                    "summary": "Return a layer 3 interface from a switch stack",
                    "tags": [
                        "switch",
                        "configure",
                        "stacks",
                        "routing",
                        "interfaces"
                    ]
                },
                "put": {
                    "description": "Update a layer 3 interface for a switch stack",
                    "operationId": "updateNetworkSwitchStackRoutingInterface",
                    "parameters": [{
                            "name": "networkId",
                            "in": "path",
                            "type": "string",
                            "required": true
                        },
                        {
                            "name": "switchStackId",
                            "in": "path",
                            "type": "string",
                            "required": true
                        },
                        {
                            "name": "interfaceId",
                            "in": "path",
                            "type": "string",
                            "required": true
                        },
                        {
                            "name": "updateNetworkSwitchStackRoutingInterface",
                            "in": "body",
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "description": "A friendly name or description for the interface or VLAN."
                                    },
                                    "subnet": {
                                        "type": "string",
                                        "description": "The network that this routed interface is on, in CIDR notation (ex. 10.1.1.0/24)."
                                    },
                                    "interfaceIp": {
                                        "type": "string",
                                        "description": "The IP address this switch stack will use for layer 3 routing on this VLAN or subnet. This cannot be the same as the switch's management IP."
                                    },
                                    "multicastRouting": {
                                        "type": "string",
                                        "enum": [
                                            "disabled",
                                            "enabled",
                                            "IGMP snooping querier"
                                        ],
                                        "description": "Enable multicast support if, multicast routing between VLANs is required. Options are, 'disabled', 'enabled' or 'IGMP snooping querier'."
                                    },
                                    "vlanId": {
                                        "type": "integer",
                                        "description": "The VLAN this routed interface is on. VLAN must be between 1 and 4094."
                                    },
                                    "ospfSettings": {
                                        "type": "object",
                                        "properties": {
                                            "area": {
                                                "type": "string",
                                                "description": "The OSPF area to which this interface should belong. Can be either 'disabled' or the identifier of an existing OSPF area."
                                            },
                                            "cost": {
                                                "type": "integer",
                                                "description": "The path cost for this interface. Defaults to 1, but can be increased up to 65535 to give lower priority."
                                            },
                                            "isPassiveEnabled": {
                                                "type": "boolean",
                                                "description": "When enabled, OSPF will not run on the interface, but the subnet will still be advertised."
                                            }
                                        },
                                        "description": "The OSPF routing settings of the interface."
                                    }
                                },
                                "example": {
                                    "name": "L3 interface",
                                    "subnet": "192.168.1.0/24",
                                    "interfaceIp": "192.168.1.2",
                                    "multicastRouting": "disabled",
                                    "vlanId": 100,
                                    "ospfSettings": {
                                        "area": "0",
                                        "cost": 1,
                                        "isPassiveEnabled": true
                                    }
                                }
                            }
                        }
                    ],
                    "responses": {
                        "200": {
                            "description": "Successful operation",
                            "examples": {
                                "application/json": {
                                    "interfaceId": "1234",
                                    "name": "L3 interface",
                                    "subnet": "192.168.1.0/24",
                                    "interfaceIp": "192.168.1.2",
                                    "multicastRouting": "disabled",
                                    "vlanId": 100,
                                    "ospfSettings": {
                                        "area": "0",
                                        "cost": 1,
                                        "isPassiveEnabled": true
                                    }
                                }
                            }
                        }
                    },
                    "summary": "Update a layer 3 interface for a switch stack",
                    "tags": [
                        "switch",
                        "configure",
                        "stacks",
                        "routing",
                        "interfaces"
                    ]
                },
                "delete": {
                    "description": "Delete a layer 3 interface from a switch stack",
                    "operationId": "deleteNetworkSwitchStackRoutingInterface",
                    "parameters": [{
                            "name": "networkId",
                            "in": "path",
                            "type": "string",
                            "required": true
                        },
                        {
                            "name": "switchStackId",
                            "in": "path",
                            "type": "string",
                            "required": true
                        },
                        {
                            "name": "interfaceId",
                            "in": "path",
                            "type": "string",
                            "required": true
                        }
                    ],
                    "responses": {
                        "204": {
                            "description": "Successful operation"
                        }
                    },
                    "summary": "Delete a layer 3 interface from a switch stack",
                    "tags": [
                        "switch",
                        "configure",
                        "stacks",
                        "routing",
                        "interfaces"
                    ]
                }
            }
        },
        {
            "ruleId": "add-path",
            "message": "`/networks/{networkId}/switch/stacks/{switchStackId}/routing/interfaces/{interfaceId}/dhcp` - Added",
            "messageHtml": "Path added   <br>\n      <br>\n      - New endpoint\n      <h4>Return a layer 3 interface DHCP configuration for a switch stack</h4>\n      <p>   \n      <b class=\"mr-4 badge get\">GET</b>  <code>/networks/{networkId}/switch/stacks/{switchStackId}/routing/interfaces/{interfaceId}/dhcp</code>\n      <br>  \n      <pre><code>{\n    &quot;dhcpMode&quot;: &quot;dhcpServer&quot;,\n    &quot;dhcpLeaseTime&quot;: &quot;1 day&quot;,\n    &quot;dnsNameserversOption&quot;: &quot;custom&quot;,\n    &quot;dnsCustomNameservers&quot;: [\n        &quot;8.8.8.8, 8.8.4.4&quot;\n    ],\n    &quot;bootOptionsEnabled&quot;: true,\n    &quot;bootNextServer&quot;: &quot;1.2.3.4&quot;,\n    &quot;bootFileName&quot;: &quot;home_boot_file&quot;,\n    &quot;dhcpOptions&quot;: [\n        {\n            &quot;code&quot;: &quot;5&quot;,\n            &quot;type&quot;: &quot;text&quot;,\n            &quot;value&quot;: &quot;five&quot;\n        }\n    ],\n    &quot;reservedIpRanges&quot;: [\n        {\n            &quot;start&quot;: &quot;192.168.1.1&quot;,\n            &quot;end&quot;: &quot;192.168.1.10&quot;,\n            &quot;comment&quot;: &quot;A reserved IP range&quot;\n        }\n    ],\n    &quot;fixedIpAssignments&quot;: [\n        {\n            &quot;mac&quot;: &quot;22:33:44:55:66:77&quot;,\n            &quot;name&quot;: &quot;Cisco Meraki valued client&quot;,\n            &quot;ip&quot;: &quot;192.168.1.12&quot;\n        }\n    ]\n}</code></pre>\n      </p>\n      <hr>\n      \n      <br>\n      - New endpoint\n      <h4>Update a layer 3 interface DHCP configuration for a switch stack</h4>\n      <p>   \n      <b class=\"mr-4 badge put\">PUT</b>  <code>/networks/{networkId}/switch/stacks/{switchStackId}/routing/interfaces/{interfaceId}/dhcp</code>\n      <br>  \n      <pre><code>{\n    &quot;dhcpMode&quot;: &quot;dhcpServer&quot;,\n    &quot;dhcpLeaseTime&quot;: &quot;1 day&quot;,\n    &quot;dnsNameserversOption&quot;: &quot;custom&quot;,\n    &quot;dnsCustomNameservers&quot;: [\n        &quot;8.8.8.8, 8.8.4.4&quot;\n    ],\n    &quot;bootOptionsEnabled&quot;: true,\n    &quot;bootNextServer&quot;: &quot;1.2.3.4&quot;,\n    &quot;bootFileName&quot;: &quot;home_boot_file&quot;,\n    &quot;dhcpOptions&quot;: [\n        {\n            &quot;code&quot;: &quot;5&quot;,\n            &quot;type&quot;: &quot;text&quot;,\n            &quot;value&quot;: &quot;five&quot;\n        }\n    ],\n    &quot;reservedIpRanges&quot;: [\n        {\n            &quot;start&quot;: &quot;192.168.1.1&quot;,\n            &quot;end&quot;: &quot;192.168.1.10&quot;,\n            &quot;comment&quot;: &quot;A reserved IP range&quot;\n        }\n    ],\n    &quot;fixedIpAssignments&quot;: [\n        {\n            &quot;mac&quot;: &quot;22:33:44:55:66:77&quot;,\n            &quot;name&quot;: &quot;Cisco Meraki valued client&quot;,\n            &quot;ip&quot;: &quot;192.168.1.12&quot;\n        }\n    ]\n}</code></pre>\n      </p>\n      <hr>\n      ",
            "path": "/networks/{networkId}/switch/stacks/{switchStackId}/routing/interfaces/{interfaceId}/dhcp",
            "details": {
                "get": {
                    "description": "Return a layer 3 interface DHCP configuration for a switch stack",
                    "operationId": "getNetworkSwitchStackRoutingInterfaceDhcp",
                    "parameters": {
                        "networkId": {
                            "name": "networkId",
                            "in": "path",
                            "type": "string",
                            "required": true
                        },
                        "switchStackId": {
                            "name": "switchStackId",
                            "in": "path",
                            "type": "string",
                            "required": true
                        },
                        "interfaceId": {
                            "name": "interfaceId",
                            "in": "path",
                            "type": "string",
                            "required": true
                        }
                    },
                    "responses": {
                        "200": {
                            "description": "Successful operation",
                            "examples": {
                                "application/json": {
                                    "dhcpMode": "dhcpServer",
                                    "dhcpLeaseTime": "1 day",
                                    "dnsNameserversOption": "custom",
                                    "dnsCustomNameservers": [
                                        "8.8.8.8, 8.8.4.4"
                                    ],
                                    "bootOptionsEnabled": true,
                                    "bootNextServer": "1.2.3.4",
                                    "bootFileName": "home_boot_file",
                                    "dhcpOptions": [{
                                        "code": "5",
                                        "type": "text",
                                        "value": "five"
                                    }],
                                    "reservedIpRanges": [{
                                        "start": "192.168.1.1",
                                        "end": "192.168.1.10",
                                        "comment": "A reserved IP range"
                                    }],
                                    "fixedIpAssignments": [{
                                        "mac": "22:33:44:55:66:77",
                                        "name": "Cisco Meraki valued client",
                                        "ip": "192.168.1.12"
                                    }]
                                }
                            }
                        }
                    },
                    "summary": "Return a layer 3 interface DHCP configuration for a switch stack",
                    "tags": [
                        "switch",
                        "configure",
                        "stacks",
                        "routing",
                        "interfaces",
                        "dhcp"
                    ],
                    "consumes": [
                        "application/json"
                    ],
                    "produces": [
                        "application/json"
                    ],
                    "schemes": [
                        "https"
                    ],
                    "security": [{
                        "meraki_api_key": []
                    }]
                },
                "put": {
                    "description": "Update a layer 3 interface DHCP configuration for a switch stack",
                    "operationId": "updateNetworkSwitchStackRoutingInterfaceDhcp",
                    "parameters": {
                        "networkId": {
                            "name": "networkId",
                            "in": "path",
                            "type": "string",
                            "required": true
                        },
                        "switchStackId": {
                            "name": "switchStackId",
                            "in": "path",
                            "type": "string",
                            "required": true
                        },
                        "interfaceId": {
                            "name": "interfaceId",
                            "in": "path",
                            "type": "string",
                            "required": true
                        },
                        "updateNetworkSwitchStackRoutingInterfaceDhcp": {
                            "name": "updateNetworkSwitchStackRoutingInterfaceDhcp",
                            "in": "body",
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "dhcpMode": {
                                        "type": "string",
                                        "enum": [
                                            "dhcpDisabled",
                                            "dhcpRelay",
                                            "dhcpServer"
                                        ],
                                        "description": "The DHCP mode options for the switch stack interface ('dhcpDisabled', 'dhcpRelay' or 'dhcpServer')"
                                    },
                                    "dhcpRelayServerIps": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        },
                                        "description": "The DHCP relay server IPs to which DHCP packets would get relayed for the switch stack interface"
                                    },
                                    "dhcpLeaseTime": {
                                        "type": "string",
                                        "enum": [
                                            "30 minutes",
                                            "1 hour",
                                            "4 hours",
                                            "12 hours",
                                            "1 day",
                                            "1 week"
                                        ],
                                        "description": "The DHCP lease time config for the dhcp server running on switch stack interface ('30 minutes', '1 hour', '4 hours', '12 hours', '1 day' or '1 week')"
                                    },
                                    "dnsNameserversOption": {
                                        "type": "string",
                                        "enum": [
                                            "googlePublicDns",
                                            "openDns",
                                            "custom"
                                        ],
                                        "description": "The DHCP name server option for the dhcp server running on the switch stack interface ('googlePublicDns', 'openDns' or 'custom')"
                                    },
                                    "dnsCustomNameservers": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        },
                                        "description": "The DHCP name server IPs when DHCP name server option is 'custom'"
                                    },
                                    "bootOptionsEnabled": {
                                        "type": "boolean",
                                        "description": "Enable DHCP boot options to provide PXE boot options configs for the dhcp server running on the switch stack interface"
                                    },
                                    "bootNextServer": {
                                        "type": "string",
                                        "description": "The PXE boot server IP for the DHCP server running on the switch stack interface"
                                    },
                                    "bootFileName": {
                                        "type": "string",
                                        "description": "The PXE boot server file name for the DHCP server running on the switch stack interface"
                                    },
                                    "dhcpOptions": {
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "code": {
                                                    "type": "string",
                                                    "description": "The code for DHCP option which should be from 2 to 254",
                                                    "required": true
                                                },
                                                "type": {
                                                    "type": "string",
                                                    "enum": [
                                                        "text",
                                                        "ip",
                                                        "integer",
                                                        "hex"
                                                    ],
                                                    "description": "The type of the DHCP option which should be one of ('text', 'ip', 'integer' or 'hex')",
                                                    "required": true
                                                },
                                                "value": {
                                                    "type": "string",
                                                    "description": "The value of the DHCP option",
                                                    "required": true
                                                }
                                            }
                                        },
                                        "description": "Array of DHCP options consisting of code, type and value for the DHCP server running on the switch stack interface"
                                    },
                                    "reservedIpRanges": {
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "start": {
                                                    "type": "string",
                                                    "description": "The starting IP address of the reserved IP range",
                                                    "required": true
                                                },
                                                "end": {
                                                    "type": "string",
                                                    "description": "The ending IP address of the reserved IP range",
                                                    "required": true
                                                },
                                                "comment": {
                                                    "type": "string",
                                                    "description": "The comment for the reserved IP range"
                                                }
                                            }
                                        },
                                        "description": "Array of DHCP reserved IP assignments for the DHCP server running on the switch stack interface"
                                    },
                                    "fixedIpAssignments": {
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "name": {
                                                    "type": "string",
                                                    "description": "The name of the client which has fixed IP address",
                                                    "required": true
                                                },
                                                "mac": {
                                                    "type": "string",
                                                    "description": "The MAC address of the client which has fixed IP address",
                                                    "required": true
                                                },
                                                "ip": {
                                                    "type": "string",
                                                    "description": "The IP address of the client which has fixed IP address assigned to it",
                                                    "required": true
                                                }
                                            }
                                        },
                                        "description": "Array of DHCP fixed IP assignments for the DHCP server running on the switch stack interface"
                                    }
                                },
                                "example": {
                                    "dhcpMode": "dhcpServer",
                                    "dhcpLeaseTime": "1 day",
                                    "dnsNameserversOption": "custom",
                                    "dnsCustomNameservers": [
                                        "8.8.8.8, 8.8.4.4"
                                    ],
                                    "bootOptionsEnabled": true,
                                    "bootNextServer": "1.2.3.4",
                                    "bootFileName": "home_boot_file",
                                    "dhcpOptions": [{
                                        "code": "5",
                                        "type": "text",
                                        "value": "five"
                                    }],
                                    "reservedIpRanges": [{
                                        "start": "192.168.1.1",
                                        "end": "192.168.1.10",
                                        "comment": "A reserved IP range"
                                    }],
                                    "fixedIpAssignments": [{
                                        "mac": "22:33:44:55:66:77",
                                        "name": "Cisco Meraki valued client",
                                        "ip": "192.168.1.12"
                                    }]
                                }
                            }
                        }
                    },
                    "responses": {
                        "200": {
                            "description": "Successful operation",
                            "examples": {
                                "application/json": {
                                    "dhcpMode": "dhcpServer",
                                    "dhcpLeaseTime": "1 day",
                                    "dnsNameserversOption": "custom",
                                    "dnsCustomNameservers": [
                                        "8.8.8.8, 8.8.4.4"
                                    ],
                                    "bootOptionsEnabled": true,
                                    "bootNextServer": "1.2.3.4",
                                    "bootFileName": "home_boot_file",
                                    "dhcpOptions": [{
                                        "code": "5",
                                        "type": "text",
                                        "value": "five"
                                    }],
                                    "reservedIpRanges": [{
                                        "start": "192.168.1.1",
                                        "end": "192.168.1.10",
                                        "comment": "A reserved IP range"
                                    }],
                                    "fixedIpAssignments": [{
                                        "mac": "22:33:44:55:66:77",
                                        "name": "Cisco Meraki valued client",
                                        "ip": "192.168.1.12"
                                    }]
                                }
                            }
                        }
                    },
                    "summary": "Update a layer 3 interface DHCP configuration for a switch stack",
                    "tags": [
                        "switch",
                        "configure",
                        "stacks",
                        "routing",
                        "interfaces",
                        "dhcp"
                    ],
                    "consumes": [
                        "application/json"
                    ],
                    "produces": [
                        "application/json"
                    ],
                    "schemes": [
                        "https"
                    ],
                    "security": [{
                        "meraki_api_key": []
                    }]
                }
            },
            "type": "infos",
            "name": "What's Updated",
            "group": "switch",
            "apiDetails": {
                "get": {
                    "description": "Return a layer 3 interface DHCP configuration for a switch stack",
                    "operationId": "getNetworkSwitchStackRoutingInterfaceDhcp",
                    "parameters": [{
                            "name": "networkId",
                            "in": "path",
                            "type": "string",
                            "required": true
                        },
                        {
                            "name": "switchStackId",
                            "in": "path",
                            "type": "string",
                            "required": true
                        },
                        {
                            "name": "interfaceId",
                            "in": "path",
                            "type": "string",
                            "required": true
                        }
                    ],
                    "responses": {
                        "200": {
                            "description": "Successful operation",
                            "examples": {
                                "application/json": {
                                    "dhcpMode": "dhcpServer",
                                    "dhcpLeaseTime": "1 day",
                                    "dnsNameserversOption": "custom",
                                    "dnsCustomNameservers": [
                                        "8.8.8.8, 8.8.4.4"
                                    ],
                                    "bootOptionsEnabled": true,
                                    "bootNextServer": "1.2.3.4",
                                    "bootFileName": "home_boot_file",
                                    "dhcpOptions": [{
                                        "code": "5",
                                        "type": "text",
                                        "value": "five"
                                    }],
                                    "reservedIpRanges": [{
                                        "start": "192.168.1.1",
                                        "end": "192.168.1.10",
                                        "comment": "A reserved IP range"
                                    }],
                                    "fixedIpAssignments": [{
                                        "mac": "22:33:44:55:66:77",
                                        "name": "Cisco Meraki valued client",
                                        "ip": "192.168.1.12"
                                    }]
                                }
                            }
                        }
                    },
                    "summary": "Return a layer 3 interface DHCP configuration for a switch stack",
                    "tags": [
                        "switch",
                        "configure",
                        "stacks",
                        "routing",
                        "interfaces",
                        "dhcp"
                    ]
                },
                "put": {
                    "description": "Update a layer 3 interface DHCP configuration for a switch stack",
                    "operationId": "updateNetworkSwitchStackRoutingInterfaceDhcp",
                    "parameters": [{
                            "name": "networkId",
                            "in": "path",
                            "type": "string",
                            "required": true
                        },
                        {
                            "name": "switchStackId",
                            "in": "path",
                            "type": "string",
                            "required": true
                        },
                        {
                            "name": "interfaceId",
                            "in": "path",
                            "type": "string",
                            "required": true
                        },
                        {
                            "name": "updateNetworkSwitchStackRoutingInterfaceDhcp",
                            "in": "body",
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "dhcpMode": {
                                        "type": "string",
                                        "enum": [
                                            "dhcpDisabled",
                                            "dhcpRelay",
                                            "dhcpServer"
                                        ],
                                        "description": "The DHCP mode options for the switch stack interface ('dhcpDisabled', 'dhcpRelay' or 'dhcpServer')"
                                    },
                                    "dhcpRelayServerIps": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        },
                                        "description": "The DHCP relay server IPs to which DHCP packets would get relayed for the switch stack interface"
                                    },
                                    "dhcpLeaseTime": {
                                        "type": "string",
                                        "enum": [
                                            "30 minutes",
                                            "1 hour",
                                            "4 hours",
                                            "12 hours",
                                            "1 day",
                                            "1 week"
                                        ],
                                        "description": "The DHCP lease time config for the dhcp server running on switch stack interface ('30 minutes', '1 hour', '4 hours', '12 hours', '1 day' or '1 week')"
                                    },
                                    "dnsNameserversOption": {
                                        "type": "string",
                                        "enum": [
                                            "googlePublicDns",
                                            "openDns",
                                            "custom"
                                        ],
                                        "description": "The DHCP name server option for the dhcp server running on the switch stack interface ('googlePublicDns', 'openDns' or 'custom')"
                                    },
                                    "dnsCustomNameservers": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        },
                                        "description": "The DHCP name server IPs when DHCP name server option is 'custom'"
                                    },
                                    "bootOptionsEnabled": {
                                        "type": "boolean",
                                        "description": "Enable DHCP boot options to provide PXE boot options configs for the dhcp server running on the switch stack interface"
                                    },
                                    "bootNextServer": {
                                        "type": "string",
                                        "description": "The PXE boot server IP for the DHCP server running on the switch stack interface"
                                    },
                                    "bootFileName": {
                                        "type": "string",
                                        "description": "The PXE boot server file name for the DHCP server running on the switch stack interface"
                                    },
                                    "dhcpOptions": {
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "code": {
                                                    "type": "string",
                                                    "description": "The code for DHCP option which should be from 2 to 254",
                                                    "required": true
                                                },
                                                "type": {
                                                    "type": "string",
                                                    "enum": [
                                                        "text",
                                                        "ip",
                                                        "integer",
                                                        "hex"
                                                    ],
                                                    "description": "The type of the DHCP option which should be one of ('text', 'ip', 'integer' or 'hex')",
                                                    "required": true
                                                },
                                                "value": {
                                                    "type": "string",
                                                    "description": "The value of the DHCP option",
                                                    "required": true
                                                }
                                            }
                                        },
                                        "description": "Array of DHCP options consisting of code, type and value for the DHCP server running on the switch stack interface"
                                    },
                                    "reservedIpRanges": {
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "start": {
                                                    "type": "string",
                                                    "description": "The starting IP address of the reserved IP range",
                                                    "required": true
                                                },
                                                "end": {
                                                    "type": "string",
                                                    "description": "The ending IP address of the reserved IP range",
                                                    "required": true
                                                },
                                                "comment": {
                                                    "type": "string",
                                                    "description": "The comment for the reserved IP range"
                                                }
                                            }
                                        },
                                        "description": "Array of DHCP reserved IP assignments for the DHCP server running on the switch stack interface"
                                    },
                                    "fixedIpAssignments": {
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "name": {
                                                    "type": "string",
                                                    "description": "The name of the client which has fixed IP address",
                                                    "required": true
                                                },
                                                "mac": {
                                                    "type": "string",
                                                    "description": "The MAC address of the client which has fixed IP address",
                                                    "required": true
                                                },
                                                "ip": {
                                                    "type": "string",
                                                    "description": "The IP address of the client which has fixed IP address assigned to it",
                                                    "required": true
                                                }
                                            }
                                        },
                                        "description": "Array of DHCP fixed IP assignments for the DHCP server running on the switch stack interface"
                                    }
                                },
                                "example": {
                                    "dhcpMode": "dhcpServer",
                                    "dhcpLeaseTime": "1 day",
                                    "dnsNameserversOption": "custom",
                                    "dnsCustomNameservers": [
                                        "8.8.8.8, 8.8.4.4"
                                    ],
                                    "bootOptionsEnabled": true,
                                    "bootNextServer": "1.2.3.4",
                                    "bootFileName": "home_boot_file",
                                    "dhcpOptions": [{
                                        "code": "5",
                                        "type": "text",
                                        "value": "five"
                                    }],
                                    "reservedIpRanges": [{
                                        "start": "192.168.1.1",
                                        "end": "192.168.1.10",
                                        "comment": "A reserved IP range"
                                    }],
                                    "fixedIpAssignments": [{
                                        "mac": "22:33:44:55:66:77",
                                        "name": "Cisco Meraki valued client",
                                        "ip": "192.168.1.12"
                                    }]
                                }
                            }
                        }
                    ],
                    "responses": {
                        "200": {
                            "description": "Successful operation",
                            "examples": {
                                "application/json": {
                                    "dhcpMode": "dhcpServer",
                                    "dhcpLeaseTime": "1 day",
                                    "dnsNameserversOption": "custom",
                                    "dnsCustomNameservers": [
                                        "8.8.8.8, 8.8.4.4"
                                    ],
                                    "bootOptionsEnabled": true,
                                    "bootNextServer": "1.2.3.4",
                                    "bootFileName": "home_boot_file",
                                    "dhcpOptions": [{
                                        "code": "5",
                                        "type": "text",
                                        "value": "five"
                                    }],
                                    "reservedIpRanges": [{
                                        "start": "192.168.1.1",
                                        "end": "192.168.1.10",
                                        "comment": "A reserved IP range"
                                    }],
                                    "fixedIpAssignments": [{
                                        "mac": "22:33:44:55:66:77",
                                        "name": "Cisco Meraki valued client",
                                        "ip": "192.168.1.12"
                                    }]
                                }
                            }
                        }
                    },
                    "summary": "Update a layer 3 interface DHCP configuration for a switch stack",
                    "tags": [
                        "switch",
                        "configure",
                        "stacks",
                        "routing",
                        "interfaces",
                        "dhcp"
                    ]
                }
            }
        },
        {
            "ruleId": "add-path",
            "message": "`/networks/{networkId}/switch/stacks/{switchStackId}/routing/staticRoutes` - Added",
            "messageHtml": "Path added   <br>\n      <br>\n      - New endpoint\n      <h4>List layer 3 static routes for a switch stack</h4>\n      <p>   \n      <b class=\"mr-4 badge get\">GET</b>  <code>/networks/{networkId}/switch/stacks/{switchStackId}/routing/staticRoutes</code>\n      <br>  \n      <pre><code>[\n    {\n        &quot;staticRouteId&quot;: &quot;1234&quot;,\n        &quot;name&quot;: &quot;My route&quot;,\n        &quot;subnet&quot;: &quot;192.168.1.0/24&quot;,\n        &quot;nextHopIp&quot;: &quot;1.2.3.4&quot;,\n        &quot;advertiseViaOspfEnabled&quot;: false,\n        &quot;preferOverOspfRoutesEnabled&quot;: false\n    }\n]</code></pre>\n      </p>\n      <hr>\n      \n      <br>\n      - New endpoint\n      <h4>Create a layer 3 static route for a switch stack</h4>\n      <p>   \n      <b class=\"mr-4 badge post\">POST</b>  <code>/networks/{networkId}/switch/stacks/{switchStackId}/routing/staticRoutes</code>\n      <br>  \n      <pre><code>{\n    &quot;staticRouteId&quot;: &quot;1234&quot;,\n    &quot;name&quot;: &quot;My route&quot;,\n    &quot;subnet&quot;: &quot;192.168.1.0/24&quot;,\n    &quot;nextHopIp&quot;: &quot;1.2.3.4&quot;,\n    &quot;advertiseViaOspfEnabled&quot;: false,\n    &quot;preferOverOspfRoutesEnabled&quot;: false\n}</code></pre>\n      </p>\n      <hr>\n      ",
            "path": "/networks/{networkId}/switch/stacks/{switchStackId}/routing/staticRoutes",
            "details": {
                "get": {
                    "description": "List layer 3 static routes for a switch stack",
                    "operationId": "getNetworkSwitchStackRoutingStaticRoutes",
                    "parameters": {
                        "networkId": {
                            "name": "networkId",
                            "in": "path",
                            "type": "string",
                            "required": true
                        },
                        "switchStackId": {
                            "name": "switchStackId",
                            "in": "path",
                            "type": "string",
                            "required": true
                        }
                    },
                    "responses": {
                        "200": {
                            "description": "Successful operation",
                            "examples": {
                                "application/json": [{
                                    "staticRouteId": "1234",
                                    "name": "My route",
                                    "subnet": "192.168.1.0/24",
                                    "nextHopIp": "1.2.3.4",
                                    "advertiseViaOspfEnabled": false,
                                    "preferOverOspfRoutesEnabled": false
                                }]
                            }
                        }
                    },
                    "summary": "List layer 3 static routes for a switch stack",
                    "tags": [
                        "switch",
                        "configure",
                        "stacks",
                        "routing",
                        "staticRoutes"
                    ],
                    "consumes": [
                        "application/json"
                    ],
                    "produces": [
                        "application/json"
                    ],
                    "schemes": [
                        "https"
                    ],
                    "security": [{
                        "meraki_api_key": []
                    }]
                },
                "post": {
                    "description": "Create a layer 3 static route for a switch stack",
                    "operationId": "createNetworkSwitchStackRoutingStaticRoute",
                    "parameters": {
                        "networkId": {
                            "name": "networkId",
                            "in": "path",
                            "type": "string",
                            "required": true
                        },
                        "switchStackId": {
                            "name": "switchStackId",
                            "in": "path",
                            "type": "string",
                            "required": true
                        },
                        "createNetworkSwitchStackRoutingStaticRoute": {
                            "name": "createNetworkSwitchStackRoutingStaticRoute",
                            "in": "body",
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "description": "Name or description for layer 3 static route"
                                    },
                                    "subnet": {
                                        "type": "string",
                                        "description": "The subnet which is routed via this static route and should be specified in CIDR notation (ex. 1.2.3.0/24)",
                                        "required": true
                                    },
                                    "nextHopIp": {
                                        "type": "string",
                                        "description": "IP address of the next hop device to which the device sends its traffic for the subnet",
                                        "required": true
                                    },
                                    "advertiseViaOspfEnabled": {
                                        "type": "boolean",
                                        "description": "Option to advertise static route via OSPF"
                                    },
                                    "preferOverOspfRoutesEnabled": {
                                        "type": "boolean",
                                        "description": "Option to prefer static route over OSPF routes"
                                    }
                                },
                                "example": {
                                    "name": "My route",
                                    "subnet": "192.168.1.0/24",
                                    "nextHopIp": "1.2.3.4",
                                    "advertiseViaOspfEnabled": false,
                                    "preferOverOspfRoutesEnabled": false
                                }
                            },
                            "required": true
                        }
                    },
                    "responses": {
                        "201": {
                            "description": "Successful operation",
                            "examples": {
                                "application/json": {
                                    "staticRouteId": "1234",
                                    "name": "My route",
                                    "subnet": "192.168.1.0/24",
                                    "nextHopIp": "1.2.3.4",
                                    "advertiseViaOspfEnabled": false,
                                    "preferOverOspfRoutesEnabled": false
                                }
                            }
                        }
                    },
                    "summary": "Create a layer 3 static route for a switch stack",
                    "tags": [
                        "switch",
                        "configure",
                        "stacks",
                        "routing",
                        "staticRoutes"
                    ],
                    "consumes": [
                        "application/json"
                    ],
                    "produces": [
                        "application/json"
                    ],
                    "schemes": [
                        "https"
                    ],
                    "security": [{
                        "meraki_api_key": []
                    }]
                }
            },
            "type": "infos",
            "name": "What's Updated",
            "group": "switch",
            "apiDetails": {
                "get": {
                    "description": "List layer 3 static routes for a switch stack",
                    "operationId": "getNetworkSwitchStackRoutingStaticRoutes",
                    "parameters": [{
                            "name": "networkId",
                            "in": "path",
                            "type": "string",
                            "required": true
                        },
                        {
                            "name": "switchStackId",
                            "in": "path",
                            "type": "string",
                            "required": true
                        }
                    ],
                    "responses": {
                        "200": {
                            "description": "Successful operation",
                            "examples": {
                                "application/json": [{
                                    "staticRouteId": "1234",
                                    "name": "My route",
                                    "subnet": "192.168.1.0/24",
                                    "nextHopIp": "1.2.3.4",
                                    "advertiseViaOspfEnabled": false,
                                    "preferOverOspfRoutesEnabled": false
                                }]
                            }
                        }
                    },
                    "summary": "List layer 3 static routes for a switch stack",
                    "tags": [
                        "switch",
                        "configure",
                        "stacks",
                        "routing",
                        "staticRoutes"
                    ]
                },
                "post": {
                    "description": "Create a layer 3 static route for a switch stack",
                    "operationId": "createNetworkSwitchStackRoutingStaticRoute",
                    "parameters": [{
                            "name": "networkId",
                            "in": "path",
                            "type": "string",
                            "required": true
                        },
                        {
                            "name": "switchStackId",
                            "in": "path",
                            "type": "string",
                            "required": true
                        },
                        {
                            "name": "createNetworkSwitchStackRoutingStaticRoute",
                            "in": "body",
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "description": "Name or description for layer 3 static route"
                                    },
                                    "subnet": {
                                        "type": "string",
                                        "description": "The subnet which is routed via this static route and should be specified in CIDR notation (ex. 1.2.3.0/24)",
                                        "required": true
                                    },
                                    "nextHopIp": {
                                        "type": "string",
                                        "description": "IP address of the next hop device to which the device sends its traffic for the subnet",
                                        "required": true
                                    },
                                    "advertiseViaOspfEnabled": {
                                        "type": "boolean",
                                        "description": "Option to advertise static route via OSPF"
                                    },
                                    "preferOverOspfRoutesEnabled": {
                                        "type": "boolean",
                                        "description": "Option to prefer static route over OSPF routes"
                                    }
                                },
                                "example": {
                                    "name": "My route",
                                    "subnet": "192.168.1.0/24",
                                    "nextHopIp": "1.2.3.4",
                                    "advertiseViaOspfEnabled": false,
                                    "preferOverOspfRoutesEnabled": false
                                }
                            },
                            "required": true
                        }
                    ],
                    "responses": {
                        "201": {
                            "description": "Successful operation",
                            "examples": {
                                "application/json": {
                                    "staticRouteId": "1234",
                                    "name": "My route",
                                    "subnet": "192.168.1.0/24",
                                    "nextHopIp": "1.2.3.4",
                                    "advertiseViaOspfEnabled": false,
                                    "preferOverOspfRoutesEnabled": false
                                }
                            }
                        }
                    },
                    "summary": "Create a layer 3 static route for a switch stack",
                    "tags": [
                        "switch",
                        "configure",
                        "stacks",
                        "routing",
                        "staticRoutes"
                    ]
                }
            }
        },
        {
            "ruleId": "add-path",
            "message": "`/networks/{networkId}/switch/stacks/{switchStackId}/routing/staticRoutes/{staticRouteId}` - Added",
            "messageHtml": "Path added   <br>\n      <br>\n      - New endpoint\n      <h4>Return a layer 3 static route for a switch stack</h4>\n      <p>   \n      <b class=\"mr-4 badge get\">GET</b>  <code>/networks/{networkId}/switch/stacks/{switchStackId}/routing/staticRoutes/{staticRouteId}</code>\n      <br>  \n      <pre><code>{\n    &quot;staticRouteId&quot;: &quot;1234&quot;,\n    &quot;name&quot;: &quot;My route&quot;,\n    &quot;subnet&quot;: &quot;192.168.1.0/24&quot;,\n    &quot;nextHopIp&quot;: &quot;1.2.3.4&quot;,\n    &quot;advertiseViaOspfEnabled&quot;: false,\n    &quot;preferOverOspfRoutesEnabled&quot;: false\n}</code></pre>\n      </p>\n      <hr>\n      \n      <br>\n      - New endpoint\n      <h4>Update a layer 3 static route for a switch stack</h4>\n      <p>   \n      <b class=\"mr-4 badge put\">PUT</b>  <code>/networks/{networkId}/switch/stacks/{switchStackId}/routing/staticRoutes/{staticRouteId}</code>\n      <br>  \n      <pre><code>{\n    &quot;staticRouteId&quot;: &quot;1234&quot;,\n    &quot;name&quot;: &quot;My route&quot;,\n    &quot;subnet&quot;: &quot;192.168.1.0/24&quot;,\n    &quot;nextHopIp&quot;: &quot;1.2.3.4&quot;,\n    &quot;advertiseViaOspfEnabled&quot;: false,\n    &quot;preferOverOspfRoutesEnabled&quot;: false\n}</code></pre>\n      </p>\n      <hr>\n      \n      <br>\n      - New endpoint\n      <h4>Delete a layer 3 static route for a switch stack</h4>\n      <p>   \n      <b class=\"mr-4 badge delete\">DELETE</b>  <code>/networks/{networkId}/switch/stacks/{switchStackId}/routing/staticRoutes/{staticRouteId}</code>\n      <br>  \n      <pre><code></code></pre>\n      </p>\n      <hr>\n      ",
            "path": "/networks/{networkId}/switch/stacks/{switchStackId}/routing/staticRoutes/{staticRouteId}",
            "details": {
                "get": {
                    "description": "Return a layer 3 static route for a switch stack",
                    "operationId": "getNetworkSwitchStackRoutingStaticRoute",
                    "parameters": {
                        "networkId": {
                            "name": "networkId",
                            "in": "path",
                            "type": "string",
                            "required": true
                        },
                        "switchStackId": {
                            "name": "switchStackId",
                            "in": "path",
                            "type": "string",
                            "required": true
                        },
                        "staticRouteId": {
                            "name": "staticRouteId",
                            "in": "path",
                            "type": "string",
                            "required": true
                        }
                    },
                    "responses": {
                        "200": {
                            "description": "Successful operation",
                            "examples": {
                                "application/json": {
                                    "staticRouteId": "1234",
                                    "name": "My route",
                                    "subnet": "192.168.1.0/24",
                                    "nextHopIp": "1.2.3.4",
                                    "advertiseViaOspfEnabled": false,
                                    "preferOverOspfRoutesEnabled": false
                                }
                            }
                        }
                    },
                    "summary": "Return a layer 3 static route for a switch stack",
                    "tags": [
                        "switch",
                        "configure",
                        "stacks",
                        "routing",
                        "staticRoutes"
                    ],
                    "consumes": [
                        "application/json"
                    ],
                    "produces": [
                        "application/json"
                    ],
                    "schemes": [
                        "https"
                    ],
                    "security": [{
                        "meraki_api_key": []
                    }]
                },
                "put": {
                    "description": "Update a layer 3 static route for a switch stack",
                    "operationId": "updateNetworkSwitchStackRoutingStaticRoute",
                    "parameters": {
                        "networkId": {
                            "name": "networkId",
                            "in": "path",
                            "type": "string",
                            "required": true
                        },
                        "switchStackId": {
                            "name": "switchStackId",
                            "in": "path",
                            "type": "string",
                            "required": true
                        },
                        "staticRouteId": {
                            "name": "staticRouteId",
                            "in": "path",
                            "type": "string",
                            "required": true
                        },
                        "updateNetworkSwitchStackRoutingStaticRoute": {
                            "name": "updateNetworkSwitchStackRoutingStaticRoute",
                            "in": "body",
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "description": "Name or description for layer 3 static route"
                                    },
                                    "subnet": {
                                        "type": "string",
                                        "description": "The subnet which is routed via this static route and should be specified in CIDR notation (ex. 1.2.3.0/24)"
                                    },
                                    "nextHopIp": {
                                        "type": "string",
                                        "description": "IP address of the next hop device to which the device sends its traffic for the subnet"
                                    },
                                    "advertiseViaOspfEnabled": {
                                        "type": "boolean",
                                        "description": "Option to advertise static route via OSPF"
                                    },
                                    "preferOverOspfRoutesEnabled": {
                                        "type": "boolean",
                                        "description": "Option to prefer static route over OSPF routes"
                                    }
                                },
                                "example": {
                                    "name": "My route",
                                    "subnet": "192.168.1.0/24",
                                    "nextHopIp": "1.2.3.4",
                                    "advertiseViaOspfEnabled": false,
                                    "preferOverOspfRoutesEnabled": false
                                }
                            }
                        }
                    },
                    "responses": {
                        "200": {
                            "description": "Successful operation",
                            "examples": {
                                "application/json": {
                                    "staticRouteId": "1234",
                                    "name": "My route",
                                    "subnet": "192.168.1.0/24",
                                    "nextHopIp": "1.2.3.4",
                                    "advertiseViaOspfEnabled": false,
                                    "preferOverOspfRoutesEnabled": false
                                }
                            }
                        }
                    },
                    "summary": "Update a layer 3 static route for a switch stack",
                    "tags": [
                        "switch",
                        "configure",
                        "stacks",
                        "routing",
                        "staticRoutes"
                    ],
                    "consumes": [
                        "application/json"
                    ],
                    "produces": [
                        "application/json"
                    ],
                    "schemes": [
                        "https"
                    ],
                    "security": [{
                        "meraki_api_key": []
                    }]
                },
                "delete": {
                    "description": "Delete a layer 3 static route for a switch stack",
                    "operationId": "deleteNetworkSwitchStackRoutingStaticRoute",
                    "parameters": {
                        "networkId": {
                            "name": "networkId",
                            "in": "path",
                            "type": "string",
                            "required": true
                        },
                        "switchStackId": {
                            "name": "switchStackId",
                            "in": "path",
                            "type": "string",
                            "required": true
                        },
                        "staticRouteId": {
                            "name": "staticRouteId",
                            "in": "path",
                            "type": "string",
                            "required": true
                        }
                    },
                    "responses": {
                        "204": {
                            "description": "Successful operation"
                        }
                    },
                    "summary": "Delete a layer 3 static route for a switch stack",
                    "tags": [
                        "switch",
                        "configure",
                        "stacks",
                        "routing",
                        "staticRoutes"
                    ],
                    "consumes": [
                        "application/json"
                    ],
                    "produces": [
                        "application/json"
                    ],
                    "schemes": [
                        "https"
                    ],
                    "security": [{
                        "meraki_api_key": []
                    }]
                }
            },
            "type": "infos",
            "name": "What's Updated",
            "group": "switch",
            "apiDetails": {
                "get": {
                    "description": "Return a layer 3 static route for a switch stack",
                    "operationId": "getNetworkSwitchStackRoutingStaticRoute",
                    "parameters": [{
                            "name": "networkId",
                            "in": "path",
                            "type": "string",
                            "required": true
                        },
                        {
                            "name": "switchStackId",
                            "in": "path",
                            "type": "string",
                            "required": true
                        },
                        {
                            "name": "staticRouteId",
                            "in": "path",
                            "type": "string",
                            "required": true
                        }
                    ],
                    "responses": {
                        "200": {
                            "description": "Successful operation",
                            "examples": {
                                "application/json": {
                                    "staticRouteId": "1234",
                                    "name": "My route",
                                    "subnet": "192.168.1.0/24",
                                    "nextHopIp": "1.2.3.4",
                                    "advertiseViaOspfEnabled": false,
                                    "preferOverOspfRoutesEnabled": false
                                }
                            }
                        }
                    },
                    "summary": "Return a layer 3 static route for a switch stack",
                    "tags": [
                        "switch",
                        "configure",
                        "stacks",
                        "routing",
                        "staticRoutes"
                    ]
                },
                "put": {
                    "description": "Update a layer 3 static route for a switch stack",
                    "operationId": "updateNetworkSwitchStackRoutingStaticRoute",
                    "parameters": [{
                            "name": "networkId",
                            "in": "path",
                            "type": "string",
                            "required": true
                        },
                        {
                            "name": "switchStackId",
                            "in": "path",
                            "type": "string",
                            "required": true
                        },
                        {
                            "name": "staticRouteId",
                            "in": "path",
                            "type": "string",
                            "required": true
                        },
                        {
                            "name": "updateNetworkSwitchStackRoutingStaticRoute",
                            "in": "body",
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "description": "Name or description for layer 3 static route"
                                    },
                                    "subnet": {
                                        "type": "string",
                                        "description": "The subnet which is routed via this static route and should be specified in CIDR notation (ex. 1.2.3.0/24)"
                                    },
                                    "nextHopIp": {
                                        "type": "string",
                                        "description": "IP address of the next hop device to which the device sends its traffic for the subnet"
                                    },
                                    "advertiseViaOspfEnabled": {
                                        "type": "boolean",
                                        "description": "Option to advertise static route via OSPF"
                                    },
                                    "preferOverOspfRoutesEnabled": {
                                        "type": "boolean",
                                        "description": "Option to prefer static route over OSPF routes"
                                    }
                                },
                                "example": {
                                    "name": "My route",
                                    "subnet": "192.168.1.0/24",
                                    "nextHopIp": "1.2.3.4",
                                    "advertiseViaOspfEnabled": false,
                                    "preferOverOspfRoutesEnabled": false
                                }
                            }
                        }
                    ],
                    "responses": {
                        "200": {
                            "description": "Successful operation",
                            "examples": {
                                "application/json": {
                                    "staticRouteId": "1234",
                                    "name": "My route",
                                    "subnet": "192.168.1.0/24",
                                    "nextHopIp": "1.2.3.4",
                                    "advertiseViaOspfEnabled": false,
                                    "preferOverOspfRoutesEnabled": false
                                }
                            }
                        }
                    },
                    "summary": "Update a layer 3 static route for a switch stack",
                    "tags": [
                        "switch",
                        "configure",
                        "stacks",
                        "routing",
                        "staticRoutes"
                    ]
                },
                "delete": {
                    "description": "Delete a layer 3 static route for a switch stack",
                    "operationId": "deleteNetworkSwitchStackRoutingStaticRoute",
                    "parameters": [{
                            "name": "networkId",
                            "in": "path",
                            "type": "string",
                            "required": true
                        },
                        {
                            "name": "switchStackId",
                            "in": "path",
                            "type": "string",
                            "required": true
                        },
                        {
                            "name": "staticRouteId",
                            "in": "path",
                            "type": "string",
                            "required": true
                        }
                    ],
                    "responses": {
                        "204": {
                            "description": "Successful operation"
                        }
                    },
                    "summary": "Delete a layer 3 static route for a switch stack",
                    "tags": [
                        "switch",
                        "configure",
                        "stacks",
                        "routing",
                        "staticRoutes"
                    ]
                }
            }
        },
        {
            "ruleId": "add-path",
            "message": "`/networks/{networkId}/wireless/alternateManagementInterface` - Added",
            "messageHtml": "Path added   <br>\n      <br>\n      - New endpoint\n      <h4>Return alternate management interface and devices with IP assigned</h4>\n      <p>   \n      <b class=\"mr-4 badge get\">GET</b>  <code>/networks/{networkId}/wireless/alternateManagementInterface</code>\n      <br>  \n      <pre><code>{\n    &quot;enabled&quot;: true,\n    &quot;vlanId&quot;: 100,\n    &quot;protocols&quot;: [\n        &quot;radius&quot;,\n        &quot;snmp&quot;,\n        &quot;syslog&quot;,\n        &quot;ldap&quot;\n    ],\n    &quot;accessPoints&quot;: [\n        {\n            &quot;serial&quot;: &quot;Q234-ABCD-5678&quot;,\n            &quot;alternateManagementIp&quot;: &quot;1.2.3.4&quot;,\n            &quot;subnetMask&quot;: &quot;255.255.255.0&quot;,\n            &quot;gateway&quot;: &quot;1.2.3.5&quot;,\n            &quot;dns1&quot;: &quot;8.8.8.8&quot;,\n            &quot;dns2&quot;: &quot;8.8.4.4&quot;\n        }\n    ]\n}</code></pre>\n      </p>\n      <hr>\n      \n      <br>\n      - New endpoint\n      <h4>Update alternate management interface and device static IP</h4>\n      <p>   \n      <b class=\"mr-4 badge put\">PUT</b>  <code>/networks/{networkId}/wireless/alternateManagementInterface</code>\n      <br>  \n      <pre><code>{\n    &quot;enabled&quot;: true,\n    &quot;vlanId&quot;: 100,\n    &quot;protocols&quot;: [\n        &quot;radius&quot;,\n        &quot;snmp&quot;,\n        &quot;syslog&quot;,\n        &quot;ldap&quot;\n    ],\n    &quot;accessPoints&quot;: [\n        {\n            &quot;serial&quot;: &quot;Q234-ABCD-5678&quot;,\n            &quot;alternateManagementIp&quot;: &quot;1.2.3.4&quot;,\n            &quot;subnetMask&quot;: &quot;255.255.255.0&quot;,\n            &quot;gateway&quot;: &quot;1.2.3.5&quot;,\n            &quot;dns1&quot;: &quot;8.8.8.8&quot;,\n            &quot;dns2&quot;: &quot;8.8.4.4&quot;\n        }\n    ]\n}</code></pre>\n      </p>\n      <hr>\n      ",
            "path": "/networks/{networkId}/wireless/alternateManagementInterface",
            "details": {
                "get": {
                    "description": "Return alternate management interface and devices with IP assigned",
                    "operationId": "getNetworkWirelessAlternateManagementInterface",
                    "parameters": {
                        "networkId": {
                            "name": "networkId",
                            "in": "path",
                            "type": "string",
                            "required": true
                        }
                    },
                    "responses": {
                        "200": {
                            "description": "Successful operation",
                            "examples": {
                                "application/json": {
                                    "enabled": true,
                                    "vlanId": 100,
                                    "protocols": [
                                        "radius",
                                        "snmp",
                                        "syslog",
                                        "ldap"
                                    ],
                                    "accessPoints": [{
                                        "serial": "Q234-ABCD-5678",
                                        "alternateManagementIp": "1.2.3.4",
                                        "subnetMask": "255.255.255.0",
                                        "gateway": "1.2.3.5",
                                        "dns1": "8.8.8.8",
                                        "dns2": "8.8.4.4"
                                    }]
                                }
                            }
                        }
                    },
                    "summary": "Return alternate management interface and devices with IP assigned",
                    "tags": [
                        "wireless",
                        "configure",
                        "alternateManagementInterface"
                    ],
                    "consumes": [
                        "application/json"
                    ],
                    "produces": [
                        "application/json"
                    ],
                    "schemes": [
                        "https"
                    ],
                    "security": [{
                        "meraki_api_key": []
                    }]
                },
                "put": {
                    "description": "Update alternate management interface and device static IP",
                    "operationId": "updateNetworkWirelessAlternateManagementInterface",
                    "parameters": {
                        "networkId": {
                            "name": "networkId",
                            "in": "path",
                            "type": "string",
                            "required": true
                        },
                        "updateNetworkWirelessAlternateManagementInterface": {
                            "name": "updateNetworkWirelessAlternateManagementInterface",
                            "in": "body",
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "enabled": {
                                        "type": "boolean",
                                        "description": "Boolean value to enable or disable alternate management interface"
                                    },
                                    "vlanId": {
                                        "type": "integer",
                                        "description": "Alternate management interface VLAN, must be between 1 and 4094"
                                    },
                                    "protocols": {
                                        "type": "array",
                                        "items": {
                                            "type": "string",
                                            "enum": [
                                                "radius",
                                                "snmp",
                                                "syslog",
                                                "ldap"
                                            ]
                                        },
                                        "description": "Can be one or more of the following values: 'radius', 'snmp', 'syslog' or 'ldap'"
                                    },
                                    "accessPoints": {
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "serial": {
                                                    "type": "string",
                                                    "description": "Serial number of access point to be configured with alternate management IP",
                                                    "required": true
                                                },
                                                "alternateManagementIp": {
                                                    "type": "string",
                                                    "description": "Wireless alternate management interface device IP. Provide an empty string to remove alternate management IP assignment",
                                                    "required": true
                                                },
                                                "subnetMask": {
                                                    "type": "string",
                                                    "description": "Subnet mask must be in IP format"
                                                },
                                                "gateway": {
                                                    "type": "string",
                                                    "description": "Gateway must be in IP format"
                                                },
                                                "dns1": {
                                                    "type": "string",
                                                    "description": "Primary DNS must be in IP format"
                                                },
                                                "dns2": {
                                                    "type": "string",
                                                    "description": "Optional secondary DNS must be in IP format"
                                                }
                                            }
                                        },
                                        "description": "Array of access point serial number and IP assignment. Note: accessPoints IP assignment is not applicable for template networks, in other words, do not put 'accessPoints' in the body when updating template networks. Also, an empty 'accessPoints' array will remove all previous static IP assignments"
                                    }
                                },
                                "example": {
                                    "enabled": true,
                                    "vlanId": 100,
                                    "protocols": [
                                        "radius",
                                        "snmp",
                                        "syslog",
                                        "ldap"
                                    ],
                                    "accessPoints": [{
                                        "serial": "Q234-ABCD-5678",
                                        "alternateManagementIp": "1.2.3.4",
                                        "subnetMask": "255.255.255.0",
                                        "gateway": "1.2.3.5",
                                        "dns1": "8.8.8.8",
                                        "dns2": "8.8.4.4"
                                    }]
                                }
                            }
                        }
                    },
                    "responses": {
                        "200": {
                            "description": "Successful operation",
                            "examples": {
                                "application/json": {
                                    "enabled": true,
                                    "vlanId": 100,
                                    "protocols": [
                                        "radius",
                                        "snmp",
                                        "syslog",
                                        "ldap"
                                    ],
                                    "accessPoints": [{
                                        "serial": "Q234-ABCD-5678",
                                        "alternateManagementIp": "1.2.3.4",
                                        "subnetMask": "255.255.255.0",
                                        "gateway": "1.2.3.5",
                                        "dns1": "8.8.8.8",
                                        "dns2": "8.8.4.4"
                                    }]
                                }
                            }
                        }
                    },
                    "summary": "Update alternate management interface and device static IP",
                    "tags": [
                        "wireless",
                        "configure",
                        "alternateManagementInterface"
                    ],
                    "consumes": [
                        "application/json"
                    ],
                    "produces": [
                        "application/json"
                    ],
                    "schemes": [
                        "https"
                    ],
                    "security": [{
                        "meraki_api_key": []
                    }]
                }
            },
            "type": "infos",
            "name": "What's Updated",
            "group": "wireless",
            "apiDetails": {
                "get": {
                    "description": "Return alternate management interface and devices with IP assigned",
                    "operationId": "getNetworkWirelessAlternateManagementInterface",
                    "parameters": [{
                        "name": "networkId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }],
                    "responses": {
                        "200": {
                            "description": "Successful operation",
                            "examples": {
                                "application/json": {
                                    "enabled": true,
                                    "vlanId": 100,
                                    "protocols": [
                                        "radius",
                                        "snmp",
                                        "syslog",
                                        "ldap"
                                    ],
                                    "accessPoints": [{
                                        "serial": "Q234-ABCD-5678",
                                        "alternateManagementIp": "1.2.3.4",
                                        "subnetMask": "255.255.255.0",
                                        "gateway": "1.2.3.5",
                                        "dns1": "8.8.8.8",
                                        "dns2": "8.8.4.4"
                                    }]
                                }
                            }
                        }
                    },
                    "summary": "Return alternate management interface and devices with IP assigned",
                    "tags": [
                        "wireless",
                        "configure",
                        "alternateManagementInterface"
                    ]
                },
                "put": {
                    "description": "Update alternate management interface and device static IP",
                    "operationId": "updateNetworkWirelessAlternateManagementInterface",
                    "parameters": [{
                            "name": "networkId",
                            "in": "path",
                            "type": "string",
                            "required": true
                        },
                        {
                            "name": "updateNetworkWirelessAlternateManagementInterface",
                            "in": "body",
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "enabled": {
                                        "type": "boolean",
                                        "description": "Boolean value to enable or disable alternate management interface"
                                    },
                                    "vlanId": {
                                        "type": "integer",
                                        "description": "Alternate management interface VLAN, must be between 1 and 4094"
                                    },
                                    "protocols": {
                                        "type": "array",
                                        "items": {
                                            "type": "string",
                                            "enum": [
                                                "radius",
                                                "snmp",
                                                "syslog",
                                                "ldap"
                                            ]
                                        },
                                        "description": "Can be one or more of the following values: 'radius', 'snmp', 'syslog' or 'ldap'"
                                    },
                                    "accessPoints": {
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "serial": {
                                                    "type": "string",
                                                    "description": "Serial number of access point to be configured with alternate management IP",
                                                    "required": true
                                                },
                                                "alternateManagementIp": {
                                                    "type": "string",
                                                    "description": "Wireless alternate management interface device IP. Provide an empty string to remove alternate management IP assignment",
                                                    "required": true
                                                },
                                                "subnetMask": {
                                                    "type": "string",
                                                    "description": "Subnet mask must be in IP format"
                                                },
                                                "gateway": {
                                                    "type": "string",
                                                    "description": "Gateway must be in IP format"
                                                },
                                                "dns1": {
                                                    "type": "string",
                                                    "description": "Primary DNS must be in IP format"
                                                },
                                                "dns2": {
                                                    "type": "string",
                                                    "description": "Optional secondary DNS must be in IP format"
                                                }
                                            }
                                        },
                                        "description": "Array of access point serial number and IP assignment. Note: accessPoints IP assignment is not applicable for template networks, in other words, do not put 'accessPoints' in the body when updating template networks. Also, an empty 'accessPoints' array will remove all previous static IP assignments"
                                    }
                                },
                                "example": {
                                    "enabled": true,
                                    "vlanId": 100,
                                    "protocols": [
                                        "radius",
                                        "snmp",
                                        "syslog",
                                        "ldap"
                                    ],
                                    "accessPoints": [{
                                        "serial": "Q234-ABCD-5678",
                                        "alternateManagementIp": "1.2.3.4",
                                        "subnetMask": "255.255.255.0",
                                        "gateway": "1.2.3.5",
                                        "dns1": "8.8.8.8",
                                        "dns2": "8.8.4.4"
                                    }]
                                }
                            }
                        }
                    ],
                    "responses": {
                        "200": {
                            "description": "Successful operation",
                            "examples": {
                                "application/json": {
                                    "enabled": true,
                                    "vlanId": 100,
                                    "protocols": [
                                        "radius",
                                        "snmp",
                                        "syslog",
                                        "ldap"
                                    ],
                                    "accessPoints": [{
                                        "serial": "Q234-ABCD-5678",
                                        "alternateManagementIp": "1.2.3.4",
                                        "subnetMask": "255.255.255.0",
                                        "gateway": "1.2.3.5",
                                        "dns1": "8.8.8.8",
                                        "dns2": "8.8.4.4"
                                    }]
                                }
                            }
                        }
                    },
                    "summary": "Update alternate management interface and device static IP",
                    "tags": [
                        "wireless",
                        "configure",
                        "alternateManagementInterface"
                    ]
                }
            }
        },
        {
            "ruleId": "add-path",
            "message": "`/networks/{networkId}/wireless/channelUtilizationHistory` - Added",
            "messageHtml": "Path added   <br>\n      <br>\n      - New endpoint\n      <h4>Return AP channel utilization over time for a device or network client</h4>\n      <p>   \n      <b class=\"mr-4 badge get\">GET</b>  <code>/networks/{networkId}/wireless/channelUtilizationHistory</code>\n      <br>  \n      <pre><code>[\n    {\n        &quot;startTs&quot;: &quot;2020-01-01T00:00:00Z&quot;,\n        &quot;endTs&quot;: &quot;2020-01-01T01:00:00Z&quot;,\n        &quot;utilizationTotal&quot;: 9.89,\n        &quot;utilization80211&quot;: 7.22,\n        &quot;utilizationNon80211&quot;: 2.67\n    },\n    {\n        &quot;startTs&quot;: &quot;2020-01-01T01:00:00Z&quot;,\n        &quot;endTs&quot;: &quot;2020-01-01T02:00:00Z&quot;,\n        &quot;utilizationTotal&quot;: 8.78,\n        &quot;utilization80211&quot;: 6.38,\n        &quot;utilizationNon80211&quot;: 2.41\n    }\n]</code></pre>\n      </p>\n      <hr>\n      ",
            "path": "/networks/{networkId}/wireless/channelUtilizationHistory",
            "details": {
                "get": {
                    "description": "Return AP channel utilization over time for a device or network client",
                    "operationId": "getNetworkWirelessChannelUtilizationHistory",
                    "parameters": {
                        "networkId": {
                            "name": "networkId",
                            "in": "path",
                            "type": "string",
                            "required": true
                        },
                        "t0": {
                            "type": "string",
                            "name": "t0",
                            "in": "query",
                            "description": "The beginning of the timespan for the data. The maximum lookback period is 31 days from today."
                        },
                        "t1": {
                            "type": "string",
                            "name": "t1",
                            "in": "query",
                            "description": "The end of the timespan for the data. t1 can be a maximum of 31 days after t0."
                        },
                        "timespan": {
                            "type": "number",
                            "format": "float",
                            "name": "timespan",
                            "in": "query",
                            "description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 31 days. The default is 7 days."
                        },
                        "resolution": {
                            "type": "integer",
                            "name": "resolution",
                            "in": "query",
                            "description": "The time resolution in seconds for returned data. The valid resolutions are: 600, 1200, 3600, 14400, 86400. The default is 86400."
                        },
                        "autoResolution": {
                            "type": "boolean",
                            "name": "autoResolution",
                            "in": "query",
                            "description": "Automatically select a data resolution based on the given timespan; this overrides the value specified by the 'resolution' parameter. The default setting is false."
                        },
                        "clientId": {
                            "type": "string",
                            "name": "clientId",
                            "in": "query",
                            "description": "Filter results by network client to return per-device, per-band AP channel utilization metrics inner joined by the queried client's connection history."
                        },
                        "deviceSerial": {
                            "type": "string",
                            "name": "deviceSerial",
                            "in": "query",
                            "description": "Filter results by device to return AP channel utilization metrics for the queried device; either :band or :clientId must be jointly specified."
                        },
                        "apTag": {
                            "type": "string",
                            "name": "apTag",
                            "in": "query",
                            "description": "Filter results by AP tag to return AP channel utilization metrics for devices labeled with the given tag; either :clientId or :deviceSerial must be jointly specified."
                        },
                        "band": {
                            "type": "string",
                            "enum": [
                                "2.4",
                                "5"
                            ],
                            "name": "band",
                            "in": "query",
                            "description": "Filter results by band (either '2.4' or '5')."
                        }
                    },
                    "responses": {
                        "200": {
                            "description": "Successful operation",
                            "examples": {
                                "application/json": [{
                                        "startTs": "2020-01-01T00:00:00Z",
                                        "endTs": "2020-01-01T01:00:00Z",
                                        "utilizationTotal": 9.89,
                                        "utilization80211": 7.22,
                                        "utilizationNon80211": 2.67
                                    },
                                    {
                                        "startTs": "2020-01-01T01:00:00Z",
                                        "endTs": "2020-01-01T02:00:00Z",
                                        "utilizationTotal": 8.78,
                                        "utilization80211": 6.38,
                                        "utilizationNon80211": 2.41
                                    }
                                ]
                            }
                        }
                    },
                    "summary": "Return AP channel utilization over time for a device or network client",
                    "tags": [
                        "wireless",
                        "monitor",
                        "channelUtilizationHistory"
                    ],
                    "consumes": [
                        "application/json"
                    ],
                    "produces": [
                        "application/json"
                    ],
                    "schemes": [
                        "https"
                    ],
                    "security": [{
                        "meraki_api_key": []
                    }]
                }
            },
            "type": "infos",
            "name": "What's Updated",
            "group": "wireless",
            "apiDetails": {
                "get": {
                    "description": "Return AP channel utilization over time for a device or network client",
                    "operationId": "getNetworkWirelessChannelUtilizationHistory",
                    "parameters": [{
                            "name": "networkId",
                            "in": "path",
                            "type": "string",
                            "required": true
                        },
                        {
                            "type": "string",
                            "name": "t0",
                            "in": "query",
                            "description": "The beginning of the timespan for the data. The maximum lookback period is 31 days from today."
                        },
                        {
                            "type": "string",
                            "name": "t1",
                            "in": "query",
                            "description": "The end of the timespan for the data. t1 can be a maximum of 31 days after t0."
                        },
                        {
                            "type": "number",
                            "format": "float",
                            "name": "timespan",
                            "in": "query",
                            "description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 31 days. The default is 7 days."
                        },
                        {
                            "type": "integer",
                            "name": "resolution",
                            "in": "query",
                            "description": "The time resolution in seconds for returned data. The valid resolutions are: 600, 1200, 3600, 14400, 86400. The default is 86400."
                        },
                        {
                            "type": "boolean",
                            "name": "autoResolution",
                            "in": "query",
                            "description": "Automatically select a data resolution based on the given timespan; this overrides the value specified by the 'resolution' parameter. The default setting is false."
                        },
                        {
                            "type": "string",
                            "name": "clientId",
                            "in": "query",
                            "description": "Filter results by network client to return per-device, per-band AP channel utilization metrics inner joined by the queried client's connection history."
                        },
                        {
                            "type": "string",
                            "name": "deviceSerial",
                            "in": "query",
                            "description": "Filter results by device to return AP channel utilization metrics for the queried device; either :band or :clientId must be jointly specified."
                        },
                        {
                            "type": "string",
                            "name": "apTag",
                            "in": "query",
                            "description": "Filter results by AP tag to return AP channel utilization metrics for devices labeled with the given tag; either :clientId or :deviceSerial must be jointly specified."
                        },
                        {
                            "type": "string",
                            "enum": [
                                "2.4",
                                "5"
                            ],
                            "name": "band",
                            "in": "query",
                            "description": "Filter results by band (either '2.4' or '5')."
                        }
                    ],
                    "responses": {
                        "200": {
                            "description": "Successful operation",
                            "examples": {
                                "application/json": [{
                                        "startTs": "2020-01-01T00:00:00Z",
                                        "endTs": "2020-01-01T01:00:00Z",
                                        "utilizationTotal": 9.89,
                                        "utilization80211": 7.22,
                                        "utilizationNon80211": 2.67
                                    },
                                    {
                                        "startTs": "2020-01-01T01:00:00Z",
                                        "endTs": "2020-01-01T02:00:00Z",
                                        "utilizationTotal": 8.78,
                                        "utilization80211": 6.38,
                                        "utilizationNon80211": 2.41
                                    }
                                ]
                            }
                        }
                    },
                    "summary": "Return AP channel utilization over time for a device or network client",
                    "tags": [
                        "wireless",
                        "monitor",
                        "channelUtilizationHistory"
                    ]
                }
            }
        },
        {
            "ruleId": "add-path",
            "message": "`/networks/{networkId}/wireless/clientCountHistory` - Added",
            "messageHtml": "Path added   <br>\n      <br>\n      - New endpoint\n      <h4>Return wireless client counts over time for a network, device, or network client</h4>\n      <p>   \n      <b class=\"mr-4 badge get\">GET</b>  <code>/networks/{networkId}/wireless/clientCountHistory</code>\n      <br>  \n      <pre><code>[\n    {\n        &quot;startTs&quot;: &quot;2020-01-01T00:00:00Z&quot;,\n        &quot;endTs&quot;: &quot;2020-01-01T01:00:00Z&quot;,\n        &quot;clientCount&quot;: 14\n    },\n    {\n        &quot;startTs&quot;: &quot;2020-01-01T01:00:00Z&quot;,\n        &quot;endTs&quot;: &quot;2020-01-01T02:00:00Z&quot;,\n        &quot;clientCount&quot;: 29\n    }\n]</code></pre>\n      </p>\n      <hr>\n      ",
            "path": "/networks/{networkId}/wireless/clientCountHistory",
            "details": {
                "get": {
                    "description": "Return wireless client counts over time for a network, device, or network client",
                    "operationId": "getNetworkWirelessClientCountHistory",
                    "parameters": {
                        "networkId": {
                            "name": "networkId",
                            "in": "path",
                            "type": "string",
                            "required": true
                        },
                        "t0": {
                            "type": "string",
                            "name": "t0",
                            "in": "query",
                            "description": "The beginning of the timespan for the data. The maximum lookback period is 31 days from today."
                        },
                        "t1": {
                            "type": "string",
                            "name": "t1",
                            "in": "query",
                            "description": "The end of the timespan for the data. t1 can be a maximum of 31 days after t0."
                        },
                        "timespan": {
                            "type": "number",
                            "format": "float",
                            "name": "timespan",
                            "in": "query",
                            "description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 31 days. The default is 7 days."
                        },
                        "resolution": {
                            "type": "integer",
                            "name": "resolution",
                            "in": "query",
                            "description": "The time resolution in seconds for returned data. The valid resolutions are: 300, 600, 1200, 3600, 14400, 86400. The default is 86400."
                        },
                        "autoResolution": {
                            "type": "boolean",
                            "name": "autoResolution",
                            "in": "query",
                            "description": "Automatically select a data resolution based on the given timespan; this overrides the value specified by the 'resolution' parameter. The default setting is false."
                        },
                        "clientId": {
                            "type": "string",
                            "name": "clientId",
                            "in": "query",
                            "description": "Filter results by network client to return per-device client counts over time inner joined by the queried client's connection history."
                        },
                        "deviceSerial": {
                            "type": "string",
                            "name": "deviceSerial",
                            "in": "query",
                            "description": "Filter results by device."
                        },
                        "apTag": {
                            "type": "string",
                            "name": "apTag",
                            "in": "query",
                            "description": "Filter results by AP tag."
                        },
                        "band": {
                            "type": "string",
                            "enum": [
                                "2.4",
                                "5"
                            ],
                            "name": "band",
                            "in": "query",
                            "description": "Filter results by band (either '2.4' or '5')."
                        },
                        "ssid": {
                            "type": "integer",
                            "name": "ssid",
                            "in": "query",
                            "description": "Filter results by SSID number."
                        }
                    },
                    "responses": {
                        "200": {
                            "description": "Successful operation",
                            "examples": {
                                "application/json": [{
                                        "startTs": "2020-01-01T00:00:00Z",
                                        "endTs": "2020-01-01T01:00:00Z",
                                        "clientCount": 14
                                    },
                                    {
                                        "startTs": "2020-01-01T01:00:00Z",
                                        "endTs": "2020-01-01T02:00:00Z",
                                        "clientCount": 29
                                    }
                                ]
                            }
                        }
                    },
                    "summary": "Return wireless client counts over time for a network, device, or network client",
                    "tags": [
                        "wireless",
                        "monitor",
                        "clientCountHistory"
                    ],
                    "consumes": [
                        "application/json"
                    ],
                    "produces": [
                        "application/json"
                    ],
                    "schemes": [
                        "https"
                    ],
                    "security": [{
                        "meraki_api_key": []
                    }]
                }
            },
            "type": "infos",
            "name": "What's Updated",
            "group": "wireless",
            "apiDetails": {
                "get": {
                    "description": "Return wireless client counts over time for a network, device, or network client",
                    "operationId": "getNetworkWirelessClientCountHistory",
                    "parameters": [{
                            "name": "networkId",
                            "in": "path",
                            "type": "string",
                            "required": true
                        },
                        {
                            "type": "string",
                            "name": "t0",
                            "in": "query",
                            "description": "The beginning of the timespan for the data. The maximum lookback period is 31 days from today."
                        },
                        {
                            "type": "string",
                            "name": "t1",
                            "in": "query",
                            "description": "The end of the timespan for the data. t1 can be a maximum of 31 days after t0."
                        },
                        {
                            "type": "number",
                            "format": "float",
                            "name": "timespan",
                            "in": "query",
                            "description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 31 days. The default is 7 days."
                        },
                        {
                            "type": "integer",
                            "name": "resolution",
                            "in": "query",
                            "description": "The time resolution in seconds for returned data. The valid resolutions are: 300, 600, 1200, 3600, 14400, 86400. The default is 86400."
                        },
                        {
                            "type": "boolean",
                            "name": "autoResolution",
                            "in": "query",
                            "description": "Automatically select a data resolution based on the given timespan; this overrides the value specified by the 'resolution' parameter. The default setting is false."
                        },
                        {
                            "type": "string",
                            "name": "clientId",
                            "in": "query",
                            "description": "Filter results by network client to return per-device client counts over time inner joined by the queried client's connection history."
                        },
                        {
                            "type": "string",
                            "name": "deviceSerial",
                            "in": "query",
                            "description": "Filter results by device."
                        },
                        {
                            "type": "string",
                            "name": "apTag",
                            "in": "query",
                            "description": "Filter results by AP tag."
                        },
                        {
                            "type": "string",
                            "enum": [
                                "2.4",
                                "5"
                            ],
                            "name": "band",
                            "in": "query",
                            "description": "Filter results by band (either '2.4' or '5')."
                        },
                        {
                            "type": "integer",
                            "name": "ssid",
                            "in": "query",
                            "description": "Filter results by SSID number."
                        }
                    ],
                    "responses": {
                        "200": {
                            "description": "Successful operation",
                            "examples": {
                                "application/json": [{
                                        "startTs": "2020-01-01T00:00:00Z",
                                        "endTs": "2020-01-01T01:00:00Z",
                                        "clientCount": 14
                                    },
                                    {
                                        "startTs": "2020-01-01T01:00:00Z",
                                        "endTs": "2020-01-01T02:00:00Z",
                                        "clientCount": 29
                                    }
                                ]
                            }
                        }
                    },
                    "summary": "Return wireless client counts over time for a network, device, or network client",
                    "tags": [
                        "wireless",
                        "monitor",
                        "clientCountHistory"
                    ]
                }
            }
        },
        {
            "ruleId": "add-path",
            "message": "`/networks/{networkId}/wireless/clients/{clientId}/connectivityEvents` - Added",
            "messageHtml": "Path added   <br>\n      <br>\n      - New endpoint\n      <h4>List the wireless connectivity events for a client within a network in the timespan.</h4>\n      <p>   \n      <b class=\"mr-4 badge get\">GET</b>  <code>/networks/{networkId}/wireless/clients/{clientId}/connectivityEvents</code>\n      <br>  \n      <pre><code>[\n    {\n        &quot;occurredAt&quot;: 1518365681,\n        &quot;deviceSerial&quot;: &quot;Q234-ABCD-5678&quot;,\n        &quot;band&quot;: 5,\n        &quot;ssidNumber&quot;: 1,\n        &quot;type&quot;: &quot;bad&quot;,\n        &quot;subtype&quot;: &quot;radius&quot;,\n        &quot;severity&quot;: &quot;bad&quot;,\n        &quot;durationMs&quot;: 100.1,\n        &quot;channel&quot;: 44,\n        &quot;rssi&quot;: 80,\n        &quot;eventData&quot;: {\n            &quot;clientIp&quot;: &quot;10.1.2.3&quot;\n        }\n    }\n]</code></pre>\n      </p>\n      <hr>\n      ",
            "path": "/networks/{networkId}/wireless/clients/{clientId}/connectivityEvents",
            "details": {
                "get": {
                    "description": "List the wireless connectivity events for a client within a network in the timespan.",
                    "operationId": "getNetworkWirelessClientConnectivityEvents",
                    "parameters": {
                        "networkId": {
                            "name": "networkId",
                            "in": "path",
                            "type": "string",
                            "required": true
                        },
                        "clientId": {
                            "name": "clientId",
                            "in": "path",
                            "type": "string",
                            "required": true
                        },
                        "perPage": {
                            "type": "integer",
                            "name": "perPage",
                            "in": "query",
                            "description": "The number of entries per page returned. Acceptable range is 3 - 1000."
                        },
                        "startingAfter": {
                            "type": "string",
                            "name": "startingAfter",
                            "in": "query",
                            "description": "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
                        },
                        "endingBefore": {
                            "type": "string",
                            "name": "endingBefore",
                            "in": "query",
                            "description": "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
                        },
                        "t0": {
                            "type": "string",
                            "name": "t0",
                            "in": "query",
                            "description": "The beginning of the timespan for the data. The maximum lookback period is 31 days from today."
                        },
                        "t1": {
                            "type": "string",
                            "name": "t1",
                            "in": "query",
                            "description": "The end of the timespan for the data. t1 can be a maximum of 31 days after t0."
                        },
                        "timespan": {
                            "type": "number",
                            "format": "float",
                            "name": "timespan",
                            "in": "query",
                            "description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 31 days. The default is 1 day."
                        },
                        "types": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "assoc",
                                    "disassoc",
                                    "auth",
                                    "deauth",
                                    "dns",
                                    "dhcp",
                                    "roam",
                                    "connection"
                                ]
                            },
                            "name": "types",
                            "in": "query",
                            "description": "A list of event types to include. If not specified, events of all types will be returned. Valid types are 'assoc', 'disassoc', 'auth', 'deauth', 'dns', 'dhcp', 'roam' and/or 'connection'."
                        },
                        "includedSeverities": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "good",
                                    "info",
                                    "warn",
                                    "bad"
                                ]
                            },
                            "name": "includedSeverities",
                            "in": "query",
                            "description": "A list of severities to include. If not specified, events of all severities will be returned. Valid severities are 'good', 'info', 'warn' and/or 'bad'."
                        },
                        "band": {
                            "type": "string",
                            "enum": [
                                "2.4",
                                "5"
                            ],
                            "name": "band",
                            "in": "query",
                            "description": "Filter results by band (either '2.4' or '5')."
                        },
                        "ssidNumber": {
                            "type": "integer",
                            "enum": [
                                0,
                                1,
                                2,
                                3,
                                4,
                                5,
                                6,
                                7,
                                8,
                                9,
                                10,
                                11,
                                12,
                                13,
                                14
                            ],
                            "name": "ssidNumber",
                            "in": "query",
                            "description": "An SSID number to include. If not specified, events for all SSIDs will be returned."
                        },
                        "deviceSerial": {
                            "type": "string",
                            "name": "deviceSerial",
                            "in": "query",
                            "description": "Filter results by an AP's serial number."
                        }
                    },
                    "responses": {
                        "200": {
                            "description": "Successful operation",
                            "headers": {
                                "Link": {
                                    "type": "string",
                                    "description": "A comma-separated list of first, last, prev, and next relative links used for subsequent paginated requests."
                                }
                            },
                            "examples": {
                                "application/json": [{
                                    "occurredAt": 1518365681,
                                    "deviceSerial": "Q234-ABCD-5678",
                                    "band": 5,
                                    "ssidNumber": 1,
                                    "type": "bad",
                                    "subtype": "radius",
                                    "severity": "bad",
                                    "durationMs": 100.1,
                                    "channel": 44,
                                    "rssi": 80,
                                    "eventData": {
                                        "clientIp": "10.1.2.3"
                                    }
                                }]
                            }
                        }
                    },
                    "summary": "List the wireless connectivity events for a client within a network in the timespan.",
                    "tags": [
                        "wireless",
                        "monitor",
                        "clients",
                        "connectivityEvents"
                    ],
                    "consumes": [
                        "application/json"
                    ],
                    "produces": [
                        "application/json"
                    ],
                    "schemes": [
                        "https"
                    ],
                    "security": [{
                        "meraki_api_key": []
                    }]
                }
            },
            "type": "infos",
            "name": "What's Updated",
            "group": "wireless",
            "apiDetails": {
                "get": {
                    "description": "List the wireless connectivity events for a client within a network in the timespan.",
                    "operationId": "getNetworkWirelessClientConnectivityEvents",
                    "parameters": [{
                            "name": "networkId",
                            "in": "path",
                            "type": "string",
                            "required": true
                        },
                        {
                            "name": "clientId",
                            "in": "path",
                            "type": "string",
                            "required": true
                        },
                        {
                            "type": "integer",
                            "name": "perPage",
                            "in": "query",
                            "description": "The number of entries per page returned. Acceptable range is 3 - 1000."
                        },
                        {
                            "type": "string",
                            "name": "startingAfter",
                            "in": "query",
                            "description": "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
                        },
                        {
                            "type": "string",
                            "name": "endingBefore",
                            "in": "query",
                            "description": "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
                        },
                        {
                            "type": "string",
                            "name": "t0",
                            "in": "query",
                            "description": "The beginning of the timespan for the data. The maximum lookback period is 31 days from today."
                        },
                        {
                            "type": "string",
                            "name": "t1",
                            "in": "query",
                            "description": "The end of the timespan for the data. t1 can be a maximum of 31 days after t0."
                        },
                        {
                            "type": "number",
                            "format": "float",
                            "name": "timespan",
                            "in": "query",
                            "description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 31 days. The default is 1 day."
                        },
                        {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "assoc",
                                    "disassoc",
                                    "auth",
                                    "deauth",
                                    "dns",
                                    "dhcp",
                                    "roam",
                                    "connection"
                                ]
                            },
                            "name": "types",
                            "in": "query",
                            "description": "A list of event types to include. If not specified, events of all types will be returned. Valid types are 'assoc', 'disassoc', 'auth', 'deauth', 'dns', 'dhcp', 'roam' and/or 'connection'."
                        },
                        {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "good",
                                    "info",
                                    "warn",
                                    "bad"
                                ]
                            },
                            "name": "includedSeverities",
                            "in": "query",
                            "description": "A list of severities to include. If not specified, events of all severities will be returned. Valid severities are 'good', 'info', 'warn' and/or 'bad'."
                        },
                        {
                            "type": "string",
                            "enum": [
                                "2.4",
                                "5"
                            ],
                            "name": "band",
                            "in": "query",
                            "description": "Filter results by band (either '2.4' or '5')."
                        },
                        {
                            "type": "integer",
                            "enum": [
                                0,
                                1,
                                2,
                                3,
                                4,
                                5,
                                6,
                                7,
                                8,
                                9,
                                10,
                                11,
                                12,
                                13,
                                14
                            ],
                            "name": "ssidNumber",
                            "in": "query",
                            "description": "An SSID number to include. If not specified, events for all SSIDs will be returned."
                        },
                        {
                            "type": "string",
                            "name": "deviceSerial",
                            "in": "query",
                            "description": "Filter results by an AP's serial number."
                        }
                    ],
                    "responses": {
                        "200": {
                            "description": "Successful operation",
                            "headers": {
                                "Link": {
                                    "type": "string",
                                    "description": "A comma-separated list of first, last, prev, and next relative links used for subsequent paginated requests."
                                }
                            },
                            "examples": {
                                "application/json": [{
                                    "occurredAt": 1518365681,
                                    "deviceSerial": "Q234-ABCD-5678",
                                    "band": 5,
                                    "ssidNumber": 1,
                                    "type": "bad",
                                    "subtype": "radius",
                                    "severity": "bad",
                                    "durationMs": 100.1,
                                    "channel": 44,
                                    "rssi": 80,
                                    "eventData": {
                                        "clientIp": "10.1.2.3"
                                    }
                                }]
                            }
                        }
                    },
                    "summary": "List the wireless connectivity events for a client within a network in the timespan.",
                    "tags": [
                        "wireless",
                        "monitor",
                        "clients",
                        "connectivityEvents"
                    ]
                }
            }
        },
        {
            "ruleId": "add-path",
            "message": "`/networks/{networkId}/wireless/dataRateHistory` - Added",
            "messageHtml": "Path added   <br>\n      <br>\n      - New endpoint\n      <h4>Return PHY data rates over time for a network, device, or network client</h4>\n      <p>   \n      <b class=\"mr-4 badge get\">GET</b>  <code>/networks/{networkId}/wireless/dataRateHistory</code>\n      <br>  \n      <pre><code>[\n    {\n        &quot;startTs&quot;: &quot;2020-01-01T00:00:00Z&quot;,\n        &quot;endTs&quot;: &quot;2020-01-01T01:00:00Z&quot;,\n        &quot;averageKbps&quot;: 151806,\n        &quot;downloadKbps&quot;: 144839,\n        &quot;uploadKbps&quot;: 158837\n    },\n    {\n        &quot;startTs&quot;: &quot;2020-01-01T01:00:00Z&quot;,\n        &quot;endTs&quot;: &quot;2020-01-01T02:00:00Z&quot;,\n        &quot;averageKbps&quot;: 167864,\n        &quot;downloadKbps&quot;: 156179,\n        &quot;uploadKbps&quot;: 188375\n    }\n]</code></pre>\n      </p>\n      <hr>\n      ",
            "path": "/networks/{networkId}/wireless/dataRateHistory",
            "details": {
                "get": {
                    "description": "Return PHY data rates over time for a network, device, or network client",
                    "operationId": "getNetworkWirelessDataRateHistory",
                    "parameters": {
                        "networkId": {
                            "name": "networkId",
                            "in": "path",
                            "type": "string",
                            "required": true
                        },
                        "t0": {
                            "type": "string",
                            "name": "t0",
                            "in": "query",
                            "description": "The beginning of the timespan for the data. The maximum lookback period is 31 days from today."
                        },
                        "t1": {
                            "type": "string",
                            "name": "t1",
                            "in": "query",
                            "description": "The end of the timespan for the data. t1 can be a maximum of 31 days after t0."
                        },
                        "timespan": {
                            "type": "number",
                            "format": "float",
                            "name": "timespan",
                            "in": "query",
                            "description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 31 days. The default is 7 days."
                        },
                        "resolution": {
                            "type": "integer",
                            "name": "resolution",
                            "in": "query",
                            "description": "The time resolution in seconds for returned data. The valid resolutions are: 300, 600, 1200, 3600, 14400, 86400. The default is 86400."
                        },
                        "autoResolution": {
                            "type": "boolean",
                            "name": "autoResolution",
                            "in": "query",
                            "description": "Automatically select a data resolution based on the given timespan; this overrides the value specified by the 'resolution' parameter. The default setting is false."
                        },
                        "clientId": {
                            "type": "string",
                            "name": "clientId",
                            "in": "query",
                            "description": "Filter results by network client."
                        },
                        "deviceSerial": {
                            "type": "string",
                            "name": "deviceSerial",
                            "in": "query",
                            "description": "Filter results by device."
                        },
                        "apTag": {
                            "type": "string",
                            "name": "apTag",
                            "in": "query",
                            "description": "Filter results by AP tag."
                        },
                        "band": {
                            "type": "string",
                            "enum": [
                                "2.4",
                                "5"
                            ],
                            "name": "band",
                            "in": "query",
                            "description": "Filter results by band (either '2.4' or '5')."
                        },
                        "ssid": {
                            "type": "integer",
                            "name": "ssid",
                            "in": "query",
                            "description": "Filter results by SSID number."
                        }
                    },
                    "responses": {
                        "200": {
                            "description": "Successful operation",
                            "examples": {
                                "application/json": [{
                                        "startTs": "2020-01-01T00:00:00Z",
                                        "endTs": "2020-01-01T01:00:00Z",
                                        "averageKbps": 151806,
                                        "downloadKbps": 144839,
                                        "uploadKbps": 158837
                                    },
                                    {
                                        "startTs": "2020-01-01T01:00:00Z",
                                        "endTs": "2020-01-01T02:00:00Z",
                                        "averageKbps": 167864,
                                        "downloadKbps": 156179,
                                        "uploadKbps": 188375
                                    }
                                ]
                            }
                        }
                    },
                    "summary": "Return PHY data rates over time for a network, device, or network client",
                    "tags": [
                        "wireless",
                        "monitor",
                        "dataRateHistory"
                    ],
                    "consumes": [
                        "application/json"
                    ],
                    "produces": [
                        "application/json"
                    ],
                    "schemes": [
                        "https"
                    ],
                    "security": [{
                        "meraki_api_key": []
                    }]
                }
            },
            "type": "infos",
            "name": "What's Updated",
            "group": "wireless",
            "apiDetails": {
                "get": {
                    "description": "Return PHY data rates over time for a network, device, or network client",
                    "operationId": "getNetworkWirelessDataRateHistory",
                    "parameters": [{
                            "name": "networkId",
                            "in": "path",
                            "type": "string",
                            "required": true
                        },
                        {
                            "type": "string",
                            "name": "t0",
                            "in": "query",
                            "description": "The beginning of the timespan for the data. The maximum lookback period is 31 days from today."
                        },
                        {
                            "type": "string",
                            "name": "t1",
                            "in": "query",
                            "description": "The end of the timespan for the data. t1 can be a maximum of 31 days after t0."
                        },
                        {
                            "type": "number",
                            "format": "float",
                            "name": "timespan",
                            "in": "query",
                            "description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 31 days. The default is 7 days."
                        },
                        {
                            "type": "integer",
                            "name": "resolution",
                            "in": "query",
                            "description": "The time resolution in seconds for returned data. The valid resolutions are: 300, 600, 1200, 3600, 14400, 86400. The default is 86400."
                        },
                        {
                            "type": "boolean",
                            "name": "autoResolution",
                            "in": "query",
                            "description": "Automatically select a data resolution based on the given timespan; this overrides the value specified by the 'resolution' parameter. The default setting is false."
                        },
                        {
                            "type": "string",
                            "name": "clientId",
                            "in": "query",
                            "description": "Filter results by network client."
                        },
                        {
                            "type": "string",
                            "name": "deviceSerial",
                            "in": "query",
                            "description": "Filter results by device."
                        },
                        {
                            "type": "string",
                            "name": "apTag",
                            "in": "query",
                            "description": "Filter results by AP tag."
                        },
                        {
                            "type": "string",
                            "enum": [
                                "2.4",
                                "5"
                            ],
                            "name": "band",
                            "in": "query",
                            "description": "Filter results by band (either '2.4' or '5')."
                        },
                        {
                            "type": "integer",
                            "name": "ssid",
                            "in": "query",
                            "description": "Filter results by SSID number."
                        }
                    ],
                    "responses": {
                        "200": {
                            "description": "Successful operation",
                            "examples": {
                                "application/json": [{
                                        "startTs": "2020-01-01T00:00:00Z",
                                        "endTs": "2020-01-01T01:00:00Z",
                                        "averageKbps": 151806,
                                        "downloadKbps": 144839,
                                        "uploadKbps": 158837
                                    },
                                    {
                                        "startTs": "2020-01-01T01:00:00Z",
                                        "endTs": "2020-01-01T02:00:00Z",
                                        "averageKbps": 167864,
                                        "downloadKbps": 156179,
                                        "uploadKbps": 188375
                                    }
                                ]
                            }
                        }
                    },
                    "summary": "Return PHY data rates over time for a network, device, or network client",
                    "tags": [
                        "wireless",
                        "monitor",
                        "dataRateHistory"
                    ]
                }
            }
        },
        {
            "ruleId": "add-path",
            "message": "`/networks/{networkId}/wireless/latencyHistory` - Added",
            "messageHtml": "Path added   <br>\n      <br>\n      - New endpoint\n      <h4>Return average wireless latency over time for a network, device, or network client</h4>\n      <p>   \n      <b class=\"mr-4 badge get\">GET</b>  <code>/networks/{networkId}/wireless/latencyHistory</code>\n      <br>  \n      <pre><code>[\n    {\n        &quot;startTs&quot;: &quot;2020-01-01T00:00:00Z&quot;,\n        &quot;endTs&quot;: &quot;2020-01-01T01:00:00Z&quot;,\n        &quot;avgLatencyMs&quot;: 29\n    },\n    {\n        &quot;startTs&quot;: &quot;2020-01-01T01:00:00Z&quot;,\n        &quot;endTs&quot;: &quot;2020-01-01T02:00:00Z&quot;,\n        &quot;avgLatencyMs&quot;: 76\n    }\n]</code></pre>\n      </p>\n      <hr>\n      ",
            "path": "/networks/{networkId}/wireless/latencyHistory",
            "details": {
                "get": {
                    "description": "Return average wireless latency over time for a network, device, or network client",
                    "operationId": "getNetworkWirelessLatencyHistory",
                    "parameters": {
                        "networkId": {
                            "name": "networkId",
                            "in": "path",
                            "type": "string",
                            "required": true
                        },
                        "t0": {
                            "type": "string",
                            "name": "t0",
                            "in": "query",
                            "description": "The beginning of the timespan for the data. The maximum lookback period is 31 days from today."
                        },
                        "t1": {
                            "type": "string",
                            "name": "t1",
                            "in": "query",
                            "description": "The end of the timespan for the data. t1 can be a maximum of 31 days after t0."
                        },
                        "timespan": {
                            "type": "number",
                            "format": "float",
                            "name": "timespan",
                            "in": "query",
                            "description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 31 days. The default is 7 days."
                        },
                        "resolution": {
                            "type": "integer",
                            "name": "resolution",
                            "in": "query",
                            "description": "The time resolution in seconds for returned data. The valid resolutions are: 300, 600, 1200, 3600, 14400, 86400. The default is 86400."
                        },
                        "autoResolution": {
                            "type": "boolean",
                            "name": "autoResolution",
                            "in": "query",
                            "description": "Automatically select a data resolution based on the given timespan; this overrides the value specified by the 'resolution' parameter. The default setting is false."
                        },
                        "clientId": {
                            "type": "string",
                            "name": "clientId",
                            "in": "query",
                            "description": "Filter results by network client."
                        },
                        "deviceSerial": {
                            "type": "string",
                            "name": "deviceSerial",
                            "in": "query",
                            "description": "Filter results by device."
                        },
                        "apTag": {
                            "type": "string",
                            "name": "apTag",
                            "in": "query",
                            "description": "Filter results by AP tag."
                        },
                        "band": {
                            "type": "string",
                            "enum": [
                                "2.4",
                                "5"
                            ],
                            "name": "band",
                            "in": "query",
                            "description": "Filter results by band (either '2.4' or '5')."
                        },
                        "ssid": {
                            "type": "integer",
                            "name": "ssid",
                            "in": "query",
                            "description": "Filter results by SSID number."
                        },
                        "accessCategory": {
                            "type": "string",
                            "enum": [
                                "backgroundTraffic",
                                "bestEffortTraffic",
                                "videoTraffic",
                                "voiceTraffic"
                            ],
                            "name": "accessCategory",
                            "in": "query",
                            "description": "Filter by access category."
                        }
                    },
                    "responses": {
                        "200": {
                            "description": "Successful operation",
                            "examples": {
                                "application/json": [{
                                        "startTs": "2020-01-01T00:00:00Z",
                                        "endTs": "2020-01-01T01:00:00Z",
                                        "avgLatencyMs": 29
                                    },
                                    {
                                        "startTs": "2020-01-01T01:00:00Z",
                                        "endTs": "2020-01-01T02:00:00Z",
                                        "avgLatencyMs": 76
                                    }
                                ]
                            }
                        }
                    },
                    "summary": "Return average wireless latency over time for a network, device, or network client",
                    "tags": [
                        "wireless",
                        "monitor",
                        "latencyHistory"
                    ],
                    "consumes": [
                        "application/json"
                    ],
                    "produces": [
                        "application/json"
                    ],
                    "schemes": [
                        "https"
                    ],
                    "security": [{
                        "meraki_api_key": []
                    }]
                }
            },
            "type": "infos",
            "name": "What's Updated",
            "group": "wireless",
            "apiDetails": {
                "get": {
                    "description": "Return average wireless latency over time for a network, device, or network client",
                    "operationId": "getNetworkWirelessLatencyHistory",
                    "parameters": [{
                            "name": "networkId",
                            "in": "path",
                            "type": "string",
                            "required": true
                        },
                        {
                            "type": "string",
                            "name": "t0",
                            "in": "query",
                            "description": "The beginning of the timespan for the data. The maximum lookback period is 31 days from today."
                        },
                        {
                            "type": "string",
                            "name": "t1",
                            "in": "query",
                            "description": "The end of the timespan for the data. t1 can be a maximum of 31 days after t0."
                        },
                        {
                            "type": "number",
                            "format": "float",
                            "name": "timespan",
                            "in": "query",
                            "description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 31 days. The default is 7 days."
                        },
                        {
                            "type": "integer",
                            "name": "resolution",
                            "in": "query",
                            "description": "The time resolution in seconds for returned data. The valid resolutions are: 300, 600, 1200, 3600, 14400, 86400. The default is 86400."
                        },
                        {
                            "type": "boolean",
                            "name": "autoResolution",
                            "in": "query",
                            "description": "Automatically select a data resolution based on the given timespan; this overrides the value specified by the 'resolution' parameter. The default setting is false."
                        },
                        {
                            "type": "string",
                            "name": "clientId",
                            "in": "query",
                            "description": "Filter results by network client."
                        },
                        {
                            "type": "string",
                            "name": "deviceSerial",
                            "in": "query",
                            "description": "Filter results by device."
                        },
                        {
                            "type": "string",
                            "name": "apTag",
                            "in": "query",
                            "description": "Filter results by AP tag."
                        },
                        {
                            "type": "string",
                            "enum": [
                                "2.4",
                                "5"
                            ],
                            "name": "band",
                            "in": "query",
                            "description": "Filter results by band (either '2.4' or '5')."
                        },
                        {
                            "type": "integer",
                            "name": "ssid",
                            "in": "query",
                            "description": "Filter results by SSID number."
                        },
                        {
                            "type": "string",
                            "enum": [
                                "backgroundTraffic",
                                "bestEffortTraffic",
                                "videoTraffic",
                                "voiceTraffic"
                            ],
                            "name": "accessCategory",
                            "in": "query",
                            "description": "Filter by access category."
                        }
                    ],
                    "responses": {
                        "200": {
                            "description": "Successful operation",
                            "examples": {
                                "application/json": [{
                                        "startTs": "2020-01-01T00:00:00Z",
                                        "endTs": "2020-01-01T01:00:00Z",
                                        "avgLatencyMs": 29
                                    },
                                    {
                                        "startTs": "2020-01-01T01:00:00Z",
                                        "endTs": "2020-01-01T02:00:00Z",
                                        "avgLatencyMs": 76
                                    }
                                ]
                            }
                        }
                    },
                    "summary": "Return average wireless latency over time for a network, device, or network client",
                    "tags": [
                        "wireless",
                        "monitor",
                        "latencyHistory"
                    ]
                }
            }
        },
        {
            "ruleId": "add-path",
            "message": "`/networks/{networkId}/wireless/meshStatuses` - Added",
            "messageHtml": "Path added   <br>\n      <br>\n      - New endpoint\n      <h4>List wireless mesh statuses for repeaters</h4>\n      <p>   \n      <b class=\"mr-4 badge get\">GET</b>  <code>/networks/{networkId}/wireless/meshStatuses</code>\n      <br>  \n      <pre><code>{\n    &quot;serial&quot;: &quot;Q234-ABCD-5678&quot;,\n    &quot;meshRoute&quot;: [\n        &quot;Q234-ABCD-5678&quot;,\n        &quot;QWEY-SKTD-ST01&quot;,\n        &quot;QWEY-SKTD-ST02&quot;\n    ],\n    &quot;latestMeshPerformance&quot;: {\n        &quot;mbps&quot;: 43,\n        &quot;metric&quot;: 12345,\n        &quot;usagePercentage&quot;: &quot;100%&quot;\n    }\n}</code></pre>\n      </p>\n      <hr>\n      ",
            "path": "/networks/{networkId}/wireless/meshStatuses",
            "details": {
                "get": {
                    "description": "List wireless mesh statuses for repeaters",
                    "operationId": "getNetworkWirelessMeshStatuses",
                    "parameters": {
                        "networkId": {
                            "name": "networkId",
                            "in": "path",
                            "type": "string",
                            "required": true
                        },
                        "perPage": {
                            "type": "integer",
                            "name": "perPage",
                            "in": "query",
                            "description": "The number of entries per page returned. Acceptable range is 3 - 500. Default is 50."
                        },
                        "startingAfter": {
                            "type": "string",
                            "name": "startingAfter",
                            "in": "query",
                            "description": "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
                        },
                        "endingBefore": {
                            "type": "string",
                            "name": "endingBefore",
                            "in": "query",
                            "description": "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
                        }
                    },
                    "responses": {
                        "200": {
                            "description": "Successful operation",
                            "headers": {
                                "Link": {
                                    "type": "string",
                                    "description": "A comma-separated list of first, last, prev, and next relative links used for subsequent paginated requests."
                                }
                            },
                            "examples": {
                                "application/json": {
                                    "serial": "Q234-ABCD-5678",
                                    "meshRoute": [
                                        "Q234-ABCD-5678",
                                        "QWEY-SKTD-ST01",
                                        "QWEY-SKTD-ST02"
                                    ],
                                    "latestMeshPerformance": {
                                        "mbps": 43,
                                        "metric": 12345,
                                        "usagePercentage": "100%"
                                    }
                                }
                            }
                        }
                    },
                    "summary": "List wireless mesh statuses for repeaters",
                    "tags": [
                        "wireless",
                        "monitor",
                        "meshStatuses"
                    ],
                    "consumes": [
                        "application/json"
                    ],
                    "produces": [
                        "application/json"
                    ],
                    "schemes": [
                        "https"
                    ],
                    "security": [{
                        "meraki_api_key": []
                    }]
                }
            },
            "type": "infos",
            "name": "What's Updated",
            "group": "wireless",
            "apiDetails": {
                "get": {
                    "description": "List wireless mesh statuses for repeaters",
                    "operationId": "getNetworkWirelessMeshStatuses",
                    "parameters": [{
                            "name": "networkId",
                            "in": "path",
                            "type": "string",
                            "required": true
                        },
                        {
                            "type": "integer",
                            "name": "perPage",
                            "in": "query",
                            "description": "The number of entries per page returned. Acceptable range is 3 - 500. Default is 50."
                        },
                        {
                            "type": "string",
                            "name": "startingAfter",
                            "in": "query",
                            "description": "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
                        },
                        {
                            "type": "string",
                            "name": "endingBefore",
                            "in": "query",
                            "description": "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
                        }
                    ],
                    "responses": {
                        "200": {
                            "description": "Successful operation",
                            "headers": {
                                "Link": {
                                    "type": "string",
                                    "description": "A comma-separated list of first, last, prev, and next relative links used for subsequent paginated requests."
                                }
                            },
                            "examples": {
                                "application/json": {
                                    "serial": "Q234-ABCD-5678",
                                    "meshRoute": [
                                        "Q234-ABCD-5678",
                                        "QWEY-SKTD-ST01",
                                        "QWEY-SKTD-ST02"
                                    ],
                                    "latestMeshPerformance": {
                                        "mbps": 43,
                                        "metric": 12345,
                                        "usagePercentage": "100%"
                                    }
                                }
                            }
                        }
                    },
                    "summary": "List wireless mesh statuses for repeaters",
                    "tags": [
                        "wireless",
                        "monitor",
                        "meshStatuses"
                    ]
                }
            }
        },
        {
            "ruleId": "add-path",
            "message": "`/networks/{networkId}/wireless/signalQualityHistory` - Added",
            "messageHtml": "Path added   <br>\n      <br>\n      - New endpoint\n      <h4>Return signal quality (SNR/RSSI) over time for a device or network client</h4>\n      <p>   \n      <b class=\"mr-4 badge get\">GET</b>  <code>/networks/{networkId}/wireless/signalQualityHistory</code>\n      <br>  \n      <pre><code>[\n    {\n        &quot;startTs&quot;: &quot;2020-01-01T00:00:00Z&quot;,\n        &quot;endTs&quot;: &quot;2020-01-01T01:00:00Z&quot;,\n        &quot;snr&quot;: 27,\n        &quot;rssi&quot;: -77\n    },\n    {\n        &quot;startTs&quot;: &quot;2020-01-01T01:00:00Z&quot;,\n        &quot;endTs&quot;: &quot;2020-01-01T02:00:00Z&quot;,\n        &quot;snr&quot;: 28,\n        &quot;rssi&quot;: -76\n    }\n]</code></pre>\n      </p>\n      <hr>\n      ",
            "path": "/networks/{networkId}/wireless/signalQualityHistory",
            "details": {
                "get": {
                    "description": "Return signal quality (SNR/RSSI) over time for a device or network client",
                    "operationId": "getNetworkWirelessSignalQualityHistory",
                    "parameters": {
                        "networkId": {
                            "name": "networkId",
                            "in": "path",
                            "type": "string",
                            "required": true
                        },
                        "t0": {
                            "type": "string",
                            "name": "t0",
                            "in": "query",
                            "description": "The beginning of the timespan for the data. The maximum lookback period is 31 days from today."
                        },
                        "t1": {
                            "type": "string",
                            "name": "t1",
                            "in": "query",
                            "description": "The end of the timespan for the data. t1 can be a maximum of 31 days after t0."
                        },
                        "timespan": {
                            "type": "number",
                            "format": "float",
                            "name": "timespan",
                            "in": "query",
                            "description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 31 days. The default is 7 days."
                        },
                        "resolution": {
                            "type": "integer",
                            "name": "resolution",
                            "in": "query",
                            "description": "The time resolution in seconds for returned data. The valid resolutions are: 300, 600, 1200, 3600, 14400, 86400. The default is 86400."
                        },
                        "autoResolution": {
                            "type": "boolean",
                            "name": "autoResolution",
                            "in": "query",
                            "description": "Automatically select a data resolution based on the given timespan; this overrides the value specified by the 'resolution' parameter. The default setting is false."
                        },
                        "clientId": {
                            "type": "string",
                            "name": "clientId",
                            "in": "query",
                            "description": "Filter results by network client."
                        },
                        "deviceSerial": {
                            "type": "string",
                            "name": "deviceSerial",
                            "in": "query",
                            "description": "Filter results by device."
                        },
                        "apTag": {
                            "type": "string",
                            "name": "apTag",
                            "in": "query",
                            "description": "Filter results by AP tag; either :clientId or :deviceSerial must be jointly specified."
                        },
                        "band": {
                            "type": "string",
                            "enum": [
                                "2.4",
                                "5"
                            ],
                            "name": "band",
                            "in": "query",
                            "description": "Filter results by band (either '2.4' or '5')."
                        },
                        "ssid": {
                            "type": "integer",
                            "name": "ssid",
                            "in": "query",
                            "description": "Filter results by SSID number."
                        }
                    },
                    "responses": {
                        "200": {
                            "description": "Successful operation",
                            "examples": {
                                "application/json": [{
                                        "startTs": "2020-01-01T00:00:00Z",
                                        "endTs": "2020-01-01T01:00:00Z",
                                        "snr": 27,
                                        "rssi": -77
                                    },
                                    {
                                        "startTs": "2020-01-01T01:00:00Z",
                                        "endTs": "2020-01-01T02:00:00Z",
                                        "snr": 28,
                                        "rssi": -76
                                    }
                                ]
                            }
                        }
                    },
                    "summary": "Return signal quality (SNR/RSSI) over time for a device or network client",
                    "tags": [
                        "wireless",
                        "monitor",
                        "signalQualityHistory"
                    ],
                    "consumes": [
                        "application/json"
                    ],
                    "produces": [
                        "application/json"
                    ],
                    "schemes": [
                        "https"
                    ],
                    "security": [{
                        "meraki_api_key": []
                    }]
                }
            },
            "type": "infos",
            "name": "What's Updated",
            "group": "wireless",
            "apiDetails": {
                "get": {
                    "description": "Return signal quality (SNR/RSSI) over time for a device or network client",
                    "operationId": "getNetworkWirelessSignalQualityHistory",
                    "parameters": [{
                            "name": "networkId",
                            "in": "path",
                            "type": "string",
                            "required": true
                        },
                        {
                            "type": "string",
                            "name": "t0",
                            "in": "query",
                            "description": "The beginning of the timespan for the data. The maximum lookback period is 31 days from today."
                        },
                        {
                            "type": "string",
                            "name": "t1",
                            "in": "query",
                            "description": "The end of the timespan for the data. t1 can be a maximum of 31 days after t0."
                        },
                        {
                            "type": "number",
                            "format": "float",
                            "name": "timespan",
                            "in": "query",
                            "description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 31 days. The default is 7 days."
                        },
                        {
                            "type": "integer",
                            "name": "resolution",
                            "in": "query",
                            "description": "The time resolution in seconds for returned data. The valid resolutions are: 300, 600, 1200, 3600, 14400, 86400. The default is 86400."
                        },
                        {
                            "type": "boolean",
                            "name": "autoResolution",
                            "in": "query",
                            "description": "Automatically select a data resolution based on the given timespan; this overrides the value specified by the 'resolution' parameter. The default setting is false."
                        },
                        {
                            "type": "string",
                            "name": "clientId",
                            "in": "query",
                            "description": "Filter results by network client."
                        },
                        {
                            "type": "string",
                            "name": "deviceSerial",
                            "in": "query",
                            "description": "Filter results by device."
                        },
                        {
                            "type": "string",
                            "name": "apTag",
                            "in": "query",
                            "description": "Filter results by AP tag; either :clientId or :deviceSerial must be jointly specified."
                        },
                        {
                            "type": "string",
                            "enum": [
                                "2.4",
                                "5"
                            ],
                            "name": "band",
                            "in": "query",
                            "description": "Filter results by band (either '2.4' or '5')."
                        },
                        {
                            "type": "integer",
                            "name": "ssid",
                            "in": "query",
                            "description": "Filter results by SSID number."
                        }
                    ],
                    "responses": {
                        "200": {
                            "description": "Successful operation",
                            "examples": {
                                "application/json": [{
                                        "startTs": "2020-01-01T00:00:00Z",
                                        "endTs": "2020-01-01T01:00:00Z",
                                        "snr": 27,
                                        "rssi": -77
                                    },
                                    {
                                        "startTs": "2020-01-01T01:00:00Z",
                                        "endTs": "2020-01-01T02:00:00Z",
                                        "snr": 28,
                                        "rssi": -76
                                    }
                                ]
                            }
                        }
                    },
                    "summary": "Return signal quality (SNR/RSSI) over time for a device or network client",
                    "tags": [
                        "wireless",
                        "monitor",
                        "signalQualityHistory"
                    ]
                }
            }
        },
        {
            "ruleId": "add-path",
            "message": "`/networks/{networkId}/wireless/ssids` - Added",
            "messageHtml": "Path added   <br>\n      <br>\n      - New endpoint\n      <h4>List the MR SSIDs in a network</h4>\n      <p>   \n      <b class=\"mr-4 badge get\">GET</b>  <code>/networks/{networkId}/wireless/ssids</code>\n      <br>  \n      <pre><code>[\n    {\n        &quot;number&quot;: 0,\n        &quot;name&quot;: &quot;My SSID&quot;,\n        &quot;enabled&quot;: true,\n        &quot;splashPage&quot;: &quot;Click-through splash page&quot;,\n        &quot;ssidAdminAccessible&quot;: false,\n        &quot;authMode&quot;: &quot;8021x-radius&quot;,\n        &quot;encryptionMode&quot;: &quot;wpa-eap&quot;,\n        &quot;wpaEncryptionMode&quot;: &quot;WPA2 only&quot;,\n        &quot;radiusServers&quot;: [\n            {\n                &quot;host&quot;: &quot;0.0.0.0&quot;,\n                &quot;port&quot;: 3000\n            }\n        ],\n        &quot;radiusAccountingEnabled&quot;: false,\n        &quot;radiusEnabled&quot;: true,\n        &quot;radiusAttributeForGroupPolicies&quot;: &quot;Filter-Id&quot;,\n        &quot;radiusFailoverPolicy&quot;: &quot;null&quot;,\n        &quot;radiusLoadBalancingPolicy&quot;: &quot;null&quot;,\n        &quot;ipAssignmentMode&quot;: &quot;NAT mode&quot;,\n        &quot;adminSplashUrl&quot;: &quot;http://example.com&quot;,\n        &quot;splashTimeout&quot;: &quot;30 minutes&quot;,\n        &quot;walledGardenEnabled&quot;: true,\n        &quot;walledGardenRanges&quot;: [\n            &quot;example.com&quot;,\n            &quot;1.1.1.1\&quot;\n        ],\n        &quot;minBitrate&quot;: 11,\n        &quot;bandSelection&quot;: &quot;5 GHz band only&quot;,\n        &quot;perClientBandwidthLimitUp&quot;: 0,\n        &quot;perClientBandwidthLimitDown&quot;: 0,\n        &quot;visible&quot;: true,\n        &quot;availableOnAllAps&quot;: false,\n        &quot;availabilityTags&quot;: [\n            &quot;test-tag&quot;\n        ],\n        &quot;perSsidBandwidthLimitUp&quot;: 0,\n        &quot;perSsidBandwidthLimitDown&quot;: 0,\n        &quot;mandatoryDhcpEnabled&quot;: false\n    }\n]</code></pre>\n      </p>\n      <hr>\n      ",
            "path": "/networks/{networkId}/wireless/ssids",
            "details": {
                "get": {
                    "description": "List the MR SSIDs in a network",
                    "operationId": "getNetworkWirelessSsids",
                    "parameters": {
                        "networkId": {
                            "name": "networkId",
                            "in": "path",
                            "type": "string",
                            "required": true
                        }
                    },
                    "responses": {
                        "200": {
                            "description": "Successful operation",
                            "examples": {
                                "application/json": [{
                                    "number": 0,
                                    "name": "My SSID",
                                    "enabled": true,
                                    "splashPage": "Click-through splash page",
                                    "ssidAdminAccessible": false,
                                    "authMode": "8021x-radius",
                                    "encryptionMode": "wpa-eap",
                                    "wpaEncryptionMode": "WPA2 only",
                                    "radiusServers": [{
                                        "host": "0.0.0.0",
                                        "port": 3000
                                    }],
                                    "radiusAccountingEnabled": false,
                                    "radiusEnabled": true,
                                    "radiusAttributeForGroupPolicies": "Filter-Id",
                                    "radiusFailoverPolicy": "null",
                                    "radiusLoadBalancingPolicy": "null",
                                    "ipAssignmentMode": "NAT mode",
                                    "adminSplashUrl": "http://example.com",
                                    "splashTimeout": "30 minutes",
                                    "walledGardenEnabled": true,
                                    "walledGardenRanges": [
                                        "example.com", "1.1.1.1"
                                    ],
                                    "minBitrate": 11,
                                    "bandSelection": "5 GHz band only",
                                    "perClientBandwidthLimitUp": 0,
                                    "perClientBandwidthLimitDown": 0,
                                    "visible": true,
                                    "availableOnAllAps": false,
                                    "availabilityTags": [
                                        "test-tag"
                                    ],
                                    "perSsidBandwidthLimitUp": 0,
                                    "perSsidBandwidthLimitDown": 0,
                                    "mandatoryDhcpEnabled": false
                                }]
                            }
                        }
                    },
                    "summary": "List the MR SSIDs in a network",
                    "tags": [
                        "wireless",
                        "configure",
                        "ssids"
                    ],
                    "consumes": [
                        "application/json"
                    ],
                    "produces": [
                        "application/json"
                    ],
                    "schemes": [
                        "https"
                    ],
                    "security": [{
                        "meraki_api_key": []
                    }]
                }
            },
            "type": "infos",
            "name": "What's Updated",
            "group": "wireless",
            "apiDetails": {
                "get": {
                    "description": "List the MR SSIDs in a network",
                    "operationId": "getNetworkWirelessSsids",
                    "parameters": [{
                        "name": "networkId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }],
                    "responses": {
                        "200": {
                            "description": "Successful operation",
                            "examples": {
                                "application/json": [{
                                    "number": 0,
                                    "name": "My SSID",
                                    "enabled": true,
                                    "splashPage": "Click-through splash page",
                                    "ssidAdminAccessible": false,
                                    "authMode": "8021x-radius",
                                    "encryptionMode": "wpa-eap",
                                    "wpaEncryptionMode": "WPA2 only",
                                    "radiusServers": [{
                                        "host": "0.0.0.0",
                                        "port": 3000
                                    }],
                                    "radiusAccountingEnabled": false,
                                    "radiusEnabled": true,
                                    "radiusAttributeForGroupPolicies": "Filter-Id",
                                    "radiusFailoverPolicy": "null",
                                    "radiusLoadBalancingPolicy": "null",
                                    "ipAssignmentMode": "NAT mode",
                                    "adminSplashUrl": "http://example.com",
                                    "splashTimeout": "30 minutes",
                                    "walledGardenEnabled": true,
                                    "walledGardenRanges": [
                                        "example.com", "1.1.1.1"
                                    ],
                                    "minBitrate": 11,
                                    "bandSelection": "5 GHz band only",
                                    "perClientBandwidthLimitUp": 0,
                                    "perClientBandwidthLimitDown": 0,
                                    "visible": true,
                                    "availableOnAllAps": false,
                                    "availabilityTags": [
                                        "test-tag"
                                    ],
                                    "perSsidBandwidthLimitUp": 0,
                                    "perSsidBandwidthLimitDown": 0,
                                    "mandatoryDhcpEnabled": false
                                }]
                            }
                        }
                    },
                    "summary": "List the MR SSIDs in a network",
                    "tags": [
                        "wireless",
                        "configure",
                        "ssids"
                    ]
                }
            }
        },
        {
            "ruleId": "add-path",
            "message": "`/networks/{networkId}/wireless/ssids/{number}` - Added",
            "messageHtml": "Path added   <br>\n      <br>\n      - New endpoint\n      <h4>Return a single MR SSID</h4>\n      <p>   \n      <b class=\"mr-4 badge get\">GET</b>  <code>/networks/{networkId}/wireless/ssids/{number}</code>\n      <br>  \n      <pre><code>{\n    &quot;number&quot;: 0,\n    &quot;name&quot;: &quot;My SSID&quot;,\n    &quot;enabled&quot;: true,\n    &quot;splashPage&quot;: &quot;Click-through splash page&quot;,\n    &quot;ssidAdminAccessible&quot;: false,\n    &quot;authMode&quot;: &quot;8021x-radius&quot;,\n    &quot;encryptionMode&quot;: &quot;wpa-eap&quot;,\n    &quot;wpaEncryptionMode&quot;: &quot;WPA2 only&quot;,\n    &quot;radiusServers&quot;: [\n        {\n            &quot;host&quot;: &quot;0.0.0.0&quot;,\n            &quot;port&quot;: 3000\n        }\n    ],\n    &quot;radiusAccountingEnabled&quot;: false,\n    &quot;radiusEnabled&quot;: true,\n    &quot;radiusAttributeForGroupPolicies&quot;: &quot;Filter-Id&quot;,\n    &quot;radiusFailoverPolicy&quot;: &quot;null&quot;,\n    &quot;radiusLoadBalancingPolicy&quot;: &quot;null&quot;,\n    &quot;ipAssignmentMode&quot;: &quot;NAT mode&quot;,\n    &quot;adminSplashUrl&quot;: &quot;http://example.com&quot;,\n    &quot;splashTimeout&quot;: &quot;30 minutes&quot;,\n    &quot;walledGardenEnabled&quot;: true,\n    &quot;walledGardenRanges&quot;: [\n        &quot;example.com&quot;,\n        &quot;1.1.1.1\&quot;\n    ],\n    &quot;minBitrate&quot;: 11,\n    &quot;bandSelection&quot;: &quot;5 GHz band only&quot;,\n    &quot;perClientBandwidthLimitUp&quot;: 0,\n    &quot;perClientBandwidthLimitDown&quot;: 0,\n    &quot;visible&quot;: true,\n    &quot;availableOnAllAps&quot;: false,\n    &quot;availabilityTags&quot;: [\n        &quot;test-tag&quot;\n    ],\n    &quot;perSsidBandwidthLimitUp&quot;: 0,\n    &quot;perSsidBandwidthLimitDown&quot;: 0,\n    &quot;mandatoryDhcpEnabled&quot;: false\n}</code></pre>\n      </p>\n      <hr>\n      \n      <br>\n      - New endpoint\n      <h4>Update the attributes of an MR SSID</h4>\n      <p>   \n      <b class=\"mr-4 badge put\">PUT</b>  <code>/networks/{networkId}/wireless/ssids/{number}</code>\n      <br>  \n      <pre><code>{\n    &quot;number&quot;: 0,\n    &quot;name&quot;: &quot;My SSID&quot;,\n    &quot;enabled&quot;: true,\n    &quot;splashPage&quot;: &quot;Click-through splash page&quot;,\n    &quot;ssidAdminAccessible&quot;: false,\n    &quot;authMode&quot;: &quot;8021x-radius&quot;,\n    &quot;encryptionMode&quot;: &quot;wpa-eap&quot;,\n    &quot;wpaEncryptionMode&quot;: &quot;WPA2 only&quot;,\n    &quot;radiusServers&quot;: [\n        {\n            &quot;host&quot;: &quot;0.0.0.0&quot;,\n            &quot;port&quot;: 3000\n        }\n    ],\n    &quot;radiusAccountingEnabled&quot;: false,\n    &quot;radiusEnabled&quot;: true,\n    &quot;radiusAttributeForGroupPolicies&quot;: &quot;Filter-Id&quot;,\n    &quot;radiusFailoverPolicy&quot;: &quot;null&quot;,\n    &quot;radiusLoadBalancingPolicy&quot;: &quot;null&quot;,\n    &quot;ipAssignmentMode&quot;: &quot;NAT mode&quot;,\n    &quot;adminSplashUrl&quot;: &quot;http://example.com&quot;,\n    &quot;splashTimeout&quot;: &quot;30 minutes&quot;,\n    &quot;walledGardenEnabled&quot;: true,\n    &quot;walledGardenRanges&quot;: [\n        &quot;example.com&quot;,\n        &quot;1.1.1.1\&quot;\n    ],\n    &quot;minBitrate&quot;: 11,\n    &quot;bandSelection&quot;: &quot;5 GHz band only&quot;,\n    &quot;perClientBandwidthLimitUp&quot;: 0,\n    &quot;perClientBandwidthLimitDown&quot;: 0,\n    &quot;visible&quot;: true,\n    &quot;availableOnAllAps&quot;: false,\n    &quot;availabilityTags&quot;: [\n        &quot;test-tag&quot;\n    ],\n    &quot;perSsidBandwidthLimitUp&quot;: 0,\n    &quot;perSsidBandwidthLimitDown&quot;: 0,\n    &quot;mandatoryDhcpEnabled&quot;: false\n}</code></pre>\n      </p>\n      <hr>\n      ",
            "path": "/networks/{networkId}/wireless/ssids/{number}",
            "details": {
                "get": {
                    "description": "Return a single MR SSID",
                    "operationId": "getNetworkWirelessSsid",
                    "parameters": {
                        "networkId": {
                            "name": "networkId",
                            "in": "path",
                            "type": "string",
                            "required": true
                        },
                        "number": {
                            "name": "number",
                            "in": "path",
                            "type": "string",
                            "required": true
                        }
                    },
                    "responses": {
                        "200": {
                            "description": "Successful operation",
                            "examples": {
                                "application/json": {
                                    "number": 0,
                                    "name": "My SSID",
                                    "enabled": true,
                                    "splashPage": "Click-through splash page",
                                    "ssidAdminAccessible": false,
                                    "authMode": "8021x-radius",
                                    "encryptionMode": "wpa-eap",
                                    "wpaEncryptionMode": "WPA2 only",
                                    "radiusServers": [{
                                        "host": "0.0.0.0",
                                        "port": 3000
                                    }],
                                    "radiusAccountingEnabled": false,
                                    "radiusEnabled": true,
                                    "radiusAttributeForGroupPolicies": "Filter-Id",
                                    "radiusFailoverPolicy": "null",
                                    "radiusLoadBalancingPolicy": "null",
                                    "ipAssignmentMode": "NAT mode",
                                    "adminSplashUrl": "http://example.com",
                                    "splashTimeout": "30 minutes",
                                    "walledGardenEnabled": true,
                                    "walledGardenRanges": [
                                        "example.com", "1.1.1.1"
                                    ],
                                    "minBitrate": 11,
                                    "bandSelection": "5 GHz band only",
                                    "perClientBandwidthLimitUp": 0,
                                    "perClientBandwidthLimitDown": 0,
                                    "visible": true,
                                    "availableOnAllAps": false,
                                    "availabilityTags": [
                                        "test-tag"
                                    ],
                                    "perSsidBandwidthLimitUp": 0,
                                    "perSsidBandwidthLimitDown": 0,
                                    "mandatoryDhcpEnabled": false
                                }
                            }
                        }
                    },
                    "summary": "Return a single MR SSID",
                    "tags": [
                        "wireless",
                        "configure",
                        "ssids"
                    ],
                    "consumes": [
                        "application/json"
                    ],
                    "produces": [
                        "application/json"
                    ],
                    "schemes": [
                        "https"
                    ],
                    "security": [{
                        "meraki_api_key": []
                    }]
                },
                "put": {
                    "description": "Update the attributes of an MR SSID",
                    "operationId": "updateNetworkWirelessSsid",
                    "parameters": {
                        "networkId": {
                            "name": "networkId",
                            "in": "path",
                            "type": "string",
                            "required": true
                        },
                        "number": {
                            "name": "number",
                            "in": "path",
                            "type": "string",
                            "required": true
                        },
                        "updateNetworkWirelessSsid": {
                            "name": "updateNetworkWirelessSsid",
                            "in": "body",
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "description": "The name of the SSID"
                                    },
                                    "enabled": {
                                        "type": "boolean",
                                        "description": "Whether or not the SSID is enabled"
                                    },
                                    "authMode": {
                                        "type": "string",
                                        "enum": [
                                            "open",
                                            "psk",
                                            "open-with-radius",
                                            "8021x-meraki",
                                            "8021x-radius",
                                            "ipsk-with-radius",
                                            "ipsk-without-radius"
                                        ],
                                        "description": "The association control method for the SSID ('open', 'psk', 'open-with-radius', '8021x-meraki', '8021x-radius', 'ipsk-with-radius' or 'ipsk-without-radius')"
                                    },
                                    "enterpriseAdminAccess": {
                                        "type": "string",
                                        "enum": [
                                            "access disabled",
                                            "access enabled"
                                        ],
                                        "description": "Whether or not an SSID is accessible by 'enterprise' administrators ('access disabled' or 'access enabled')"
                                    },
                                    "encryptionMode": {
                                        "type": "string",
                                        "enum": [
                                            "wep",
                                            "wpa"
                                        ],
                                        "description": "The psk encryption mode for the SSID ('wep' or 'wpa'). This param is only valid if the authMode is 'psk'"
                                    },
                                    "psk": {
                                        "type": "string",
                                        "description": "The passkey for the SSID. This param is only valid if the authMode is 'psk'"
                                    },
                                    "wpaEncryptionMode": {
                                        "type": "string",
                                        "enum": [
                                            "WPA1 only",
                                            "WPA1 and WPA2",
                                            "WPA2 only",
                                            "WPA3 Transition Mode",
                                            "WPA3 only"
                                        ],
                                        "description": "The types of WPA encryption. ('WPA1 only', 'WPA1 and WPA2', 'WPA2 only', 'WPA3 Transition Mode' or 'WPA3 only')"
                                    },
                                    "splashPage": {
                                        "type": "string",
                                        "enum": [
                                            "None",
                                            "Click-through splash page",
                                            "Billing",
                                            "Password-protected with Meraki RADIUS",
                                            "Password-protected with custom RADIUS",
                                            "Password-protected with Active Directory",
                                            "Password-protected with LDAP",
                                            "SMS authentication",
                                            "Systems Manager Sentry",
                                            "Facebook Wi-Fi",
                                            "Google OAuth",
                                            "Sponsored guest",
                                            "Cisco ISE"
                                        ],
                                        "description": "The type of splash page for the SSID ('None', 'Click-through splash page', 'Billing', 'Password-protected with Meraki RADIUS', 'Password-protected with custom RADIUS', 'Password-protected with Active Directory', 'Password-protected with LDAP', 'SMS authentication', 'Systems Manager Sentry', 'Facebook Wi-Fi', 'Google OAuth', 'Sponsored guest' or 'Cisco ISE'). This attribute is not supported for template children."
                                    },
                                    "radiusServers": {
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "host": {
                                                    "type": "string",
                                                    "description": "IP address of your RADIUS server",
                                                    "required": true
                                                },
                                                "port": {
                                                    "type": "integer",
                                                    "description": "UDP port the RADIUS server listens on for Access-requests"
                                                },
                                                "secret": {
                                                    "type": "string",
                                                    "description": "RADIUS client shared secret",
                                                    "required": true
                                                }
                                            }
                                        },
                                        "description": "The RADIUS 802.1X servers to be used for authentication. This param is only valid if the authMode is 'open-with-radius', '8021x-radius' or 'ipsk-with-radius'"
                                    },
                                    "radiusProxyEnabled": {
                                        "type": "boolean",
                                        "description": "If true, Meraki devices will proxy RADIUS messages through the Meraki cloud to the configured RADIUS auth and accounting servers."
                                    },
                                    "radiusCoaEnabled": {
                                        "type": "boolean",
                                        "description": "If true, Meraki devices will act as a RADIUS Dynamic Authorization Server and will respond to RADIUS Change-of-Authorization and Disconnect messages sent by the RADIUS server."
                                    },
                                    "radiusFailoverPolicy": {
                                        "type": "string",
                                        "enum": [
                                            "Deny access",
                                            "Allow access"
                                        ],
                                        "description": "This policy determines how authentication requests should be handled in the event that all of the configured RADIUS servers are unreachable ('Deny access' or 'Allow access')"
                                    },
                                    "radiusLoadBalancingPolicy": {
                                        "type": "string",
                                        "enum": [
                                            "Strict priority order",
                                            "Round robin"
                                        ],
                                        "description": "This policy determines which RADIUS server will be contacted first in an authentication attempt and the ordering of any necessary retry attempts ('Strict priority order' or 'Round robin')"
                                    },
                                    "radiusAccountingEnabled": {
                                        "type": "boolean",
                                        "description": "Whether or not RADIUS accounting is enabled. This param is only valid if the authMode is 'open-with-radius', '8021x-radius' or 'ipsk-with-radius'"
                                    },
                                    "radiusAccountingServers": {
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "host": {
                                                    "type": "string",
                                                    "description": "IP address to which the APs will send RADIUS accounting messages",
                                                    "required": true
                                                },
                                                "port": {
                                                    "type": "integer",
                                                    "description": "Port on the RADIUS server that is listening for accounting messages"
                                                },
                                                "secret": {
                                                    "type": "string",
                                                    "description": "Shared key used to authenticate messages between the APs and RADIUS server",
                                                    "required": true
                                                }
                                            }
                                        },
                                        "description": "The RADIUS accounting 802.1X servers to be used for authentication. This param is only valid if the authMode is 'open-with-radius', '8021x-radius' or 'ipsk-with-radius' and radiusAccountingEnabled is 'true'"
                                    },
                                    "radiusAttributeForGroupPolicies": {
                                        "type": "string",
                                        "enum": [
                                            "Filter-Id",
                                            "Reply-Message",
                                            "Airespace-ACL-Name",
                                            "Aruba-User-Role"
                                        ],
                                        "description": "Specify the RADIUS attribute used to look up group policies ('Filter-Id', 'Reply-Message', 'Airespace-ACL-Name' or 'Aruba-User-Role'). Access points must receive this attribute in the RADIUS Access-Accept message"
                                    },
                                    "ipAssignmentMode": {
                                        "type": "string",
                                        "description": "The client IP assignment mode ('NAT mode', 'Bridge mode', 'Layer 3 roaming', 'Layer 3 roaming with a concentrator' or 'VPN')"
                                    },
                                    "useVlanTagging": {
                                        "type": "boolean",
                                        "description": "Whether or not traffic should be directed to use specific VLANs. This param is only valid if the ipAssignmentMode is 'Bridge mode' or 'Layer 3 roaming'"
                                    },
                                    "concentratorNetworkId": {
                                        "type": "string",
                                        "description": "The concentrator to use when the ipAssignmentMode is 'Layer 3 roaming with a concentrator' or 'VPN'."
                                    },
                                    "vlanId": {
                                        "type": "integer",
                                        "description": "The VLAN ID used for VLAN tagging. This param is only valid when the ipAssignmentMode is 'Layer 3 roaming with a concentrator' or 'VPN'"
                                    },
                                    "defaultVlanId": {
                                        "type": "integer",
                                        "description": "The default VLAN ID used for 'all other APs'. This param is only valid when the ipAssignmentMode is 'Bridge mode' or 'Layer 3 roaming'"
                                    },
                                    "apTagsAndVlanIds": {
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "tags": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    },
                                                    "description": "Array of AP tags"
                                                },
                                                "vlanId": {
                                                    "type": "integer",
                                                    "description": "Numerical identifier that is assigned to the VLAN"
                                                }
                                            }
                                        },
                                        "description": "The list of tags and VLAN IDs used for VLAN tagging. This param is only valid when the ipAssignmentMode is 'Bridge mode' or 'Layer 3 roaming'"
                                    },
                                    "walledGardenEnabled": {
                                        "type": "boolean",
                                        "description": "Allow access to a configurable list of IP ranges, which users may access prior to sign-on."
                                    },
                                    "walledGardenRanges": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        },
                                        "description": "Specify your walled garden by entering an array of addresses, ranges using CIDR notation, domain names, and domain wildcards (e.g. '192.168.1.1/24', '192.168.37.10/32', 'www.yahoo.com', '*.google.com']). Meraki's splash page is automatically included in your walled garden."
                                    },
                                    "radiusOverride": {
                                        "type": "boolean",
                                        "description": "If true, the RADIUS response can override VLAN tag. This is not valid when ipAssignmentMode is 'NAT mode'."
                                    },
                                    "radiusGuestVlanEnabled": {
                                        "type": "boolean",
                                        "description": "Whether or not RADIUS Guest VLAN is enabled. This param is only valid if the authMode is 'open-with-radius' and addressing mode is not set to 'isolated' or 'nat' mode"
                                    },
                                    "radiusGuestVlanId": {
                                        "type": "integer",
                                        "description": "VLAN ID of the RADIUS Guest VLAN. This param is only valid if the authMode is 'open-with-radius' and addressing mode is not set to 'isolated' or 'nat' mode"
                                    },
                                    "minBitrate": {
                                        "type": "number",
                                        "format": "float",
                                        "description": "The minimum bitrate in Mbps. ('1', '2', '5.5', '6', '9', '11', '12', '18', '24', '36', '48' or '54')"
                                    },
                                    "bandSelection": {
                                        "type": "string",
                                        "description": "The client-serving radio frequencies. ('Dual band operation', '5 GHz band only' or 'Dual band operation with Band Steering')"
                                    },
                                    "perClientBandwidthLimitUp": {
                                        "type": "integer",
                                        "description": "The upload bandwidth limit in Kbps. (0 represents no limit.)"
                                    },
                                    "perClientBandwidthLimitDown": {
                                        "type": "integer",
                                        "description": "The download bandwidth limit in Kbps. (0 represents no limit.)"
                                    },
                                    "perSsidBandwidthLimitUp": {
                                        "type": "integer",
                                        "description": "The total upload bandwidth limit in Kbps. (0 represents no limit.)"
                                    },
                                    "perSsidBandwidthLimitDown": {
                                        "type": "integer",
                                        "description": "The total download bandwidth limit in Kbps. (0 represents no limit.)"
                                    },
                                    "lanIsolationEnabled": {
                                        "type": "boolean",
                                        "description": "Boolean indicating whether Layer 2 LAN isolation should be enabled or disabled. Only configurable when ipAssignmentMode is 'Bridge mode'."
                                    },
                                    "visible": {
                                        "type": "boolean",
                                        "description": "Boolean indicating whether APs should advertise or hide this SSID. APs will only broadcast this SSID if set to true"
                                    },
                                    "availableOnAllAps": {
                                        "type": "boolean",
                                        "description": "Boolean indicating whether all APs should broadcast the SSID or if it should be restricted to APs matching any availability tags. Can only be false if the SSID has availability tags."
                                    },
                                    "availabilityTags": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        },
                                        "description": "Accepts a list of tags for this SSID. If availableOnAllAps is false, then the SSID will only be broadcast by APs with tags matching any of the tags in this list."
                                    },
                                    "mandatoryDhcpEnabled": {
                                        "type": "boolean",
                                        "description": "If true, Mandatory DHCP will enforce that clients connecting to this SSID must use the IP address assigned by the DHCP server. Clients who use a static IP address won’t be able to associate."
                                    }
                                },
                                "example": {
                                    "name": "My SSID",
                                    "enabled": true
                                }
                            }
                        }
                    },
                    "responses": {
                        "200": {
                            "description": "Successful operation",
                            "examples": {
                                "application/json": {
                                    "number": 0,
                                    "name": "My SSID",
                                    "enabled": true,
                                    "splashPage": "Click-through splash page",
                                    "ssidAdminAccessible": false,
                                    "authMode": "8021x-radius",
                                    "encryptionMode": "wpa-eap",
                                    "wpaEncryptionMode": "WPA2 only",
                                    "radiusServers": [{
                                        "host": "0.0.0.0",
                                        "port": 3000
                                    }],
                                    "radiusAccountingEnabled": false,
                                    "radiusEnabled": true,
                                    "radiusAttributeForGroupPolicies": "Filter-Id",
                                    "radiusFailoverPolicy": "null",
                                    "radiusLoadBalancingPolicy": "null",
                                    "ipAssignmentMode": "NAT mode",
                                    "adminSplashUrl": "http://example.com",
                                    "splashTimeout": "30 minutes",
                                    "walledGardenEnabled": true,
                                    "walledGardenRanges": [
                                        "example.com", "1.1.1.1"
                                    ],
                                    "minBitrate": 11,
                                    "bandSelection": "5 GHz band only",
                                    "perClientBandwidthLimitUp": 0,
                                    "perClientBandwidthLimitDown": 0,
                                    "visible": true,
                                    "availableOnAllAps": false,
                                    "availabilityTags": [
                                        "test-tag"
                                    ],
                                    "perSsidBandwidthLimitUp": 0,
                                    "perSsidBandwidthLimitDown": 0,
                                    "mandatoryDhcpEnabled": false
                                }
                            }
                        }
                    },
                    "summary": "Update the attributes of an MR SSID",
                    "tags": [
                        "wireless",
                        "configure",
                        "ssids"
                    ],
                    "consumes": [
                        "application/json"
                    ],
                    "produces": [
                        "application/json"
                    ],
                    "schemes": [
                        "https"
                    ],
                    "security": [{
                        "meraki_api_key": []
                    }]
                }
            },
            "type": "infos",
            "name": "What's Updated",
            "group": "wireless",
            "apiDetails": {
                "get": {
                    "description": "Return a single MR SSID",
                    "operationId": "getNetworkWirelessSsid",
                    "parameters": [{
                            "name": "networkId",
                            "in": "path",
                            "type": "string",
                            "required": true
                        },
                        {
                            "name": "number",
                            "in": "path",
                            "type": "string",
                            "required": true
                        }
                    ],
                    "responses": {
                        "200": {
                            "description": "Successful operation",
                            "examples": {
                                "application/json": {
                                    "number": 0,
                                    "name": "My SSID",
                                    "enabled": true,
                                    "splashPage": "Click-through splash page",
                                    "ssidAdminAccessible": false,
                                    "authMode": "8021x-radius",
                                    "encryptionMode": "wpa-eap",
                                    "wpaEncryptionMode": "WPA2 only",
                                    "radiusServers": [{
                                        "host": "0.0.0.0",
                                        "port": 3000
                                    }],
                                    "radiusAccountingEnabled": false,
                                    "radiusEnabled": true,
                                    "radiusAttributeForGroupPolicies": "Filter-Id",
                                    "radiusFailoverPolicy": "null",
                                    "radiusLoadBalancingPolicy": "null",
                                    "ipAssignmentMode": "NAT mode",
                                    "adminSplashUrl": "http://example.com",
                                    "splashTimeout": "30 minutes",
                                    "walledGardenEnabled": true,
                                    "walledGardenRanges": [
                                        "example.com", "1.1.1.1"
                                    ],
                                    "minBitrate": 11,
                                    "bandSelection": "5 GHz band only",
                                    "perClientBandwidthLimitUp": 0,
                                    "perClientBandwidthLimitDown": 0,
                                    "visible": true,
                                    "availableOnAllAps": false,
                                    "availabilityTags": [
                                        "test-tag"
                                    ],
                                    "perSsidBandwidthLimitUp": 0,
                                    "perSsidBandwidthLimitDown": 0,
                                    "mandatoryDhcpEnabled": false
                                }
                            }
                        }
                    },
                    "summary": "Return a single MR SSID",
                    "tags": [
                        "wireless",
                        "configure",
                        "ssids"
                    ]
                },
                "put": {
                    "description": "Update the attributes of an MR SSID",
                    "operationId": "updateNetworkWirelessSsid",
                    "parameters": [{
                            "name": "networkId",
                            "in": "path",
                            "type": "string",
                            "required": true
                        },
                        {
                            "name": "number",
                            "in": "path",
                            "type": "string",
                            "required": true
                        },
                        {
                            "name": "updateNetworkWirelessSsid",
                            "in": "body",
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "description": "The name of the SSID"
                                    },
                                    "enabled": {
                                        "type": "boolean",
                                        "description": "Whether or not the SSID is enabled"
                                    },
                                    "authMode": {
                                        "type": "string",
                                        "enum": [
                                            "open",
                                            "psk",
                                            "open-with-radius",
                                            "8021x-meraki",
                                            "8021x-radius",
                                            "ipsk-with-radius",
                                            "ipsk-without-radius"
                                        ],
                                        "description": "The association control method for the SSID ('open', 'psk', 'open-with-radius', '8021x-meraki', '8021x-radius', 'ipsk-with-radius' or 'ipsk-without-radius')"
                                    },
                                    "enterpriseAdminAccess": {
                                        "type": "string",
                                        "enum": [
                                            "access disabled",
                                            "access enabled"
                                        ],
                                        "description": "Whether or not an SSID is accessible by 'enterprise' administrators ('access disabled' or 'access enabled')"
                                    },
                                    "encryptionMode": {
                                        "type": "string",
                                        "enum": [
                                            "wep",
                                            "wpa"
                                        ],
                                        "description": "The psk encryption mode for the SSID ('wep' or 'wpa'). This param is only valid if the authMode is 'psk'"
                                    },
                                    "psk": {
                                        "type": "string",
                                        "description": "The passkey for the SSID. This param is only valid if the authMode is 'psk'"
                                    },
                                    "wpaEncryptionMode": {
                                        "type": "string",
                                        "enum": [
                                            "WPA1 only",
                                            "WPA1 and WPA2",
                                            "WPA2 only",
                                            "WPA3 Transition Mode",
                                            "WPA3 only"
                                        ],
                                        "description": "The types of WPA encryption. ('WPA1 only', 'WPA1 and WPA2', 'WPA2 only', 'WPA3 Transition Mode' or 'WPA3 only')"
                                    },
                                    "splashPage": {
                                        "type": "string",
                                        "enum": [
                                            "None",
                                            "Click-through splash page",
                                            "Billing",
                                            "Password-protected with Meraki RADIUS",
                                            "Password-protected with custom RADIUS",
                                            "Password-protected with Active Directory",
                                            "Password-protected with LDAP",
                                            "SMS authentication",
                                            "Systems Manager Sentry",
                                            "Facebook Wi-Fi",
                                            "Google OAuth",
                                            "Sponsored guest",
                                            "Cisco ISE"
                                        ],
                                        "description": "The type of splash page for the SSID ('None', 'Click-through splash page', 'Billing', 'Password-protected with Meraki RADIUS', 'Password-protected with custom RADIUS', 'Password-protected with Active Directory', 'Password-protected with LDAP', 'SMS authentication', 'Systems Manager Sentry', 'Facebook Wi-Fi', 'Google OAuth', 'Sponsored guest' or 'Cisco ISE'). This attribute is not supported for template children."
                                    },
                                    "radiusServers": {
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "host": {
                                                    "type": "string",
                                                    "description": "IP address of your RADIUS server",
                                                    "required": true
                                                },
                                                "port": {
                                                    "type": "integer",
                                                    "description": "UDP port the RADIUS server listens on for Access-requests"
                                                },
                                                "secret": {
                                                    "type": "string",
                                                    "description": "RADIUS client shared secret",
                                                    "required": true
                                                }
                                            }
                                        },
                                        "description": "The RADIUS 802.1X servers to be used for authentication. This param is only valid if the authMode is 'open-with-radius', '8021x-radius' or 'ipsk-with-radius'"
                                    },
                                    "radiusProxyEnabled": {
                                        "type": "boolean",
                                        "description": "If true, Meraki devices will proxy RADIUS messages through the Meraki cloud to the configured RADIUS auth and accounting servers."
                                    },
                                    "radiusCoaEnabled": {
                                        "type": "boolean",
                                        "description": "If true, Meraki devices will act as a RADIUS Dynamic Authorization Server and will respond to RADIUS Change-of-Authorization and Disconnect messages sent by the RADIUS server."
                                    },
                                    "radiusFailoverPolicy": {
                                        "type": "string",
                                        "enum": [
                                            "Deny access",
                                            "Allow access"
                                        ],
                                        "description": "This policy determines how authentication requests should be handled in the event that all of the configured RADIUS servers are unreachable ('Deny access' or 'Allow access')"
                                    },
                                    "radiusLoadBalancingPolicy": {
                                        "type": "string",
                                        "enum": [
                                            "Strict priority order",
                                            "Round robin"
                                        ],
                                        "description": "This policy determines which RADIUS server will be contacted first in an authentication attempt and the ordering of any necessary retry attempts ('Strict priority order' or 'Round robin')"
                                    },
                                    "radiusAccountingEnabled": {
                                        "type": "boolean",
                                        "description": "Whether or not RADIUS accounting is enabled. This param is only valid if the authMode is 'open-with-radius', '8021x-radius' or 'ipsk-with-radius'"
                                    },
                                    "radiusAccountingServers": {
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "host": {
                                                    "type": "string",
                                                    "description": "IP address to which the APs will send RADIUS accounting messages",
                                                    "required": true
                                                },
                                                "port": {
                                                    "type": "integer",
                                                    "description": "Port on the RADIUS server that is listening for accounting messages"
                                                },
                                                "secret": {
                                                    "type": "string",
                                                    "description": "Shared key used to authenticate messages between the APs and RADIUS server",
                                                    "required": true
                                                }
                                            }
                                        },
                                        "description": "The RADIUS accounting 802.1X servers to be used for authentication. This param is only valid if the authMode is 'open-with-radius', '8021x-radius' or 'ipsk-with-radius' and radiusAccountingEnabled is 'true'"
                                    },
                                    "radiusAttributeForGroupPolicies": {
                                        "type": "string",
                                        "enum": [
                                            "Filter-Id",
                                            "Reply-Message",
                                            "Airespace-ACL-Name",
                                            "Aruba-User-Role"
                                        ],
                                        "description": "Specify the RADIUS attribute used to look up group policies ('Filter-Id', 'Reply-Message', 'Airespace-ACL-Name' or 'Aruba-User-Role'). Access points must receive this attribute in the RADIUS Access-Accept message"
                                    },
                                    "ipAssignmentMode": {
                                        "type": "string",
                                        "description": "The client IP assignment mode ('NAT mode', 'Bridge mode', 'Layer 3 roaming', 'Layer 3 roaming with a concentrator' or 'VPN')"
                                    },
                                    "useVlanTagging": {
                                        "type": "boolean",
                                        "description": "Whether or not traffic should be directed to use specific VLANs. This param is only valid if the ipAssignmentMode is 'Bridge mode' or 'Layer 3 roaming'"
                                    },
                                    "concentratorNetworkId": {
                                        "type": "string",
                                        "description": "The concentrator to use when the ipAssignmentMode is 'Layer 3 roaming with a concentrator' or 'VPN'."
                                    },
                                    "vlanId": {
                                        "type": "integer",
                                        "description": "The VLAN ID used for VLAN tagging. This param is only valid when the ipAssignmentMode is 'Layer 3 roaming with a concentrator' or 'VPN'"
                                    },
                                    "defaultVlanId": {
                                        "type": "integer",
                                        "description": "The default VLAN ID used for 'all other APs'. This param is only valid when the ipAssignmentMode is 'Bridge mode' or 'Layer 3 roaming'"
                                    },
                                    "apTagsAndVlanIds": {
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "tags": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    },
                                                    "description": "Array of AP tags"
                                                },
                                                "vlanId": {
                                                    "type": "integer",
                                                    "description": "Numerical identifier that is assigned to the VLAN"
                                                }
                                            }
                                        },
                                        "description": "The list of tags and VLAN IDs used for VLAN tagging. This param is only valid when the ipAssignmentMode is 'Bridge mode' or 'Layer 3 roaming'"
                                    },
                                    "walledGardenEnabled": {
                                        "type": "boolean",
                                        "description": "Allow access to a configurable list of IP ranges, which users may access prior to sign-on."
                                    },
                                    "walledGardenRanges": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        },
                                        "description": "Specify your walled garden by entering an array of addresses, ranges using CIDR notation, domain names, and domain wildcards (e.g. '192.168.1.1/24', '192.168.37.10/32', 'www.yahoo.com', '*.google.com']). Meraki's splash page is automatically included in your walled garden."
                                    },
                                    "radiusOverride": {
                                        "type": "boolean",
                                        "description": "If true, the RADIUS response can override VLAN tag. This is not valid when ipAssignmentMode is 'NAT mode'."
                                    },
                                    "radiusGuestVlanEnabled": {
                                        "type": "boolean",
                                        "description": "Whether or not RADIUS Guest VLAN is enabled. This param is only valid if the authMode is 'open-with-radius' and addressing mode is not set to 'isolated' or 'nat' mode"
                                    },
                                    "radiusGuestVlanId": {
                                        "type": "integer",
                                        "description": "VLAN ID of the RADIUS Guest VLAN. This param is only valid if the authMode is 'open-with-radius' and addressing mode is not set to 'isolated' or 'nat' mode"
                                    },
                                    "minBitrate": {
                                        "type": "number",
                                        "format": "float",
                                        "description": "The minimum bitrate in Mbps. ('1', '2', '5.5', '6', '9', '11', '12', '18', '24', '36', '48' or '54')"
                                    },
                                    "bandSelection": {
                                        "type": "string",
                                        "description": "The client-serving radio frequencies. ('Dual band operation', '5 GHz band only' or 'Dual band operation with Band Steering')"
                                    },
                                    "perClientBandwidthLimitUp": {
                                        "type": "integer",
                                        "description": "The upload bandwidth limit in Kbps. (0 represents no limit.)"
                                    },
                                    "perClientBandwidthLimitDown": {
                                        "type": "integer",
                                        "description": "The download bandwidth limit in Kbps. (0 represents no limit.)"
                                    },
                                    "perSsidBandwidthLimitUp": {
                                        "type": "integer",
                                        "description": "The total upload bandwidth limit in Kbps. (0 represents no limit.)"
                                    },
                                    "perSsidBandwidthLimitDown": {
                                        "type": "integer",
                                        "description": "The total download bandwidth limit in Kbps. (0 represents no limit.)"
                                    },
                                    "lanIsolationEnabled": {
                                        "type": "boolean",
                                        "description": "Boolean indicating whether Layer 2 LAN isolation should be enabled or disabled. Only configurable when ipAssignmentMode is 'Bridge mode'."
                                    },
                                    "visible": {
                                        "type": "boolean",
                                        "description": "Boolean indicating whether APs should advertise or hide this SSID. APs will only broadcast this SSID if set to true"
                                    },
                                    "availableOnAllAps": {
                                        "type": "boolean",
                                        "description": "Boolean indicating whether all APs should broadcast the SSID or if it should be restricted to APs matching any availability tags. Can only be false if the SSID has availability tags."
                                    },
                                    "availabilityTags": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        },
                                        "description": "Accepts a list of tags for this SSID. If availableOnAllAps is false, then the SSID will only be broadcast by APs with tags matching any of the tags in this list."
                                    },
                                    "mandatoryDhcpEnabled": {
                                        "type": "boolean",
                                        "description": "If true, Mandatory DHCP will enforce that clients connecting to this SSID must use the IP address assigned by the DHCP server. Clients who use a static IP address won’t be able to associate."
                                    }
                                },
                                "example": {
                                    "name": "My SSID",
                                    "enabled": true
                                }
                            }
                        }
                    ],
                    "responses": {
                        "200": {
                            "description": "Successful operation",
                            "examples": {
                                "application/json": {
                                    "number": 0,
                                    "name": "My SSID",
                                    "enabled": true,
                                    "splashPage": "Click-through splash page",
                                    "ssidAdminAccessible": false,
                                    "authMode": "8021x-radius",
                                    "encryptionMode": "wpa-eap",
                                    "wpaEncryptionMode": "WPA2 only",
                                    "radiusServers": [{
                                        "host": "0.0.0.0",
                                        "port": 3000
                                    }],
                                    "radiusAccountingEnabled": false,
                                    "radiusEnabled": true,
                                    "radiusAttributeForGroupPolicies": "Filter-Id",
                                    "radiusFailoverPolicy": "null",
                                    "radiusLoadBalancingPolicy": "null",
                                    "ipAssignmentMode": "NAT mode",
                                    "adminSplashUrl": "http://example.com",
                                    "splashTimeout": "30 minutes",
                                    "walledGardenEnabled": true,
                                    "walledGardenRanges": [
                                        "example.com", "1.1.1.1"
                                    ],
                                    "minBitrate": 11,
                                    "bandSelection": "5 GHz band only",
                                    "perClientBandwidthLimitUp": 0,
                                    "perClientBandwidthLimitDown": 0,
                                    "visible": true,
                                    "availableOnAllAps": false,
                                    "availabilityTags": [
                                        "test-tag"
                                    ],
                                    "perSsidBandwidthLimitUp": 0,
                                    "perSsidBandwidthLimitDown": 0,
                                    "mandatoryDhcpEnabled": false
                                }
                            }
                        }
                    },
                    "summary": "Update the attributes of an MR SSID",
                    "tags": [
                        "wireless",
                        "configure",
                        "ssids"
                    ]
                }
            }
        },
        {
            "ruleId": "add-path",
            "message": "`/networks/{networkId}/wireless/ssids/{number}/firewall/l7FirewallRules` - Added",
            "messageHtml": "Path added   <br>\n      <br>\n      - New endpoint\n      <h4>Return the L7 firewall rules for an SSID on an MR network</h4>\n      <p>   \n      <b class=\"mr-4 badge get\">GET</b>  <code>/networks/{networkId}/wireless/ssids/{number}/firewall/l7FirewallRules</code>\n      <br>  \n      <pre><code>{\n    &quot;rules&quot;: [\n        {\n            &quot;policy&quot;: &quot;deny&quot;,\n            &quot;type&quot;: &quot;application&quot;,\n            &quot;value&quot;: {\n                &quot;id&quot;: &quot;meraki:layer7/application/67&quot;,\n                &quot;name&quot;: &quot;Xbox LIVE&quot;\n            }\n        },\n        {\n            &quot;policy&quot;: &quot;deny&quot;,\n            &quot;type&quot;: &quot;applicationCategory&quot;,\n            &quot;value&quot;: {\n                &quot;id&quot;: &quot;meraki:layer7/category/2&quot;,\n                &quot;name&quot;: &quot;Blogging&quot;\n            }\n        },\n        {\n            &quot;policy&quot;: &quot;deny&quot;,\n            &quot;type&quot;: &quot;host&quot;,\n            &quot;value&quot;: &quot;google.com&quot;\n        },\n        {\n            &quot;policy&quot;: &quot;deny&quot;,\n            &quot;type&quot;: &quot;port&quot;,\n            &quot;value&quot;: &quot;23&quot;\n        },\n        {\n            &quot;policy&quot;: &quot;deny&quot;,\n            &quot;type&quot;: &quot;ipRange&quot;,\n            &quot;value&quot;: &quot;10.11.12.00/24&quot;\n        },\n        {\n            &quot;policy&quot;: &quot;deny&quot;,\n            &quot;type&quot;: &quot;ipRange&quot;,\n            &quot;value&quot;: &quot;10.11.12.00/24:5555&quot;\n        }\n    ]\n}</code></pre>\n      </p>\n      <hr>\n      \n      <br>\n      - New endpoint\n      <h4>Update the L7 firewall rules of an SSID on an MR network</h4>\n      <p>   \n      <b class=\"mr-4 badge put\">PUT</b>  <code>/networks/{networkId}/wireless/ssids/{number}/firewall/l7FirewallRules</code>\n      <br>  \n      <pre><code>{\n    &quot;rules&quot;: [\n        {\n            &quot;policy&quot;: &quot;deny&quot;,\n            &quot;type&quot;: &quot;application&quot;,\n            &quot;value&quot;: {\n                &quot;id&quot;: &quot;meraki:layer7/application/67&quot;,\n                &quot;name&quot;: &quot;Xbox LIVE&quot;\n            }\n        },\n        {\n            &quot;policy&quot;: &quot;deny&quot;,\n            &quot;type&quot;: &quot;applicationCategory&quot;,\n            &quot;value&quot;: {\n                &quot;id&quot;: &quot;meraki:layer7/category/2&quot;,\n                &quot;name&quot;: &quot;Blogging&quot;\n            }\n        },\n        {\n            &quot;policy&quot;: &quot;deny&quot;,\n            &quot;type&quot;: &quot;host&quot;,\n            &quot;value&quot;: &quot;google.com&quot;\n        },\n        {\n            &quot;policy&quot;: &quot;deny&quot;,\n            &quot;type&quot;: &quot;port&quot;,\n            &quot;value&quot;: &quot;23&quot;\n        },\n        {\n            &quot;policy&quot;: &quot;deny&quot;,\n            &quot;type&quot;: &quot;ipRange&quot;,\n            &quot;value&quot;: &quot;10.11.12.00/24&quot;\n        },\n        {\n            &quot;policy&quot;: &quot;deny&quot;,\n            &quot;type&quot;: &quot;ipRange&quot;,\n            &quot;value&quot;: &quot;10.11.12.00/24:5555&quot;\n        }\n    ]\n}</code></pre>\n      </p>\n      <hr>\n      ",
            "path": "/networks/{networkId}/wireless/ssids/{number}/firewall/l7FirewallRules",
            "details": {
                "get": {
                    "description": "Return the L7 firewall rules for an SSID on an MR network",
                    "operationId": "getNetworkWirelessSsidFirewallL7FirewallRules",
                    "parameters": {
                        "networkId": {
                            "name": "networkId",
                            "in": "path",
                            "type": "string",
                            "required": true
                        },
                        "number": {
                            "name": "number",
                            "in": "path",
                            "type": "string",
                            "required": true
                        }
                    },
                    "responses": {
                        "200": {
                            "description": "Successful operation",
                            "examples": {
                                "application/json": {
                                    "rules": [{
                                            "policy": "deny",
                                            "type": "application",
                                            "value": {
                                                "id": "meraki:layer7/application/67",
                                                "name": "Xbox LIVE"
                                            }
                                        },
                                        {
                                            "policy": "deny",
                                            "type": "applicationCategory",
                                            "value": {
                                                "id": "meraki:layer7/category/2",
                                                "name": "Blogging"
                                            }
                                        },
                                        {
                                            "policy": "deny",
                                            "type": "host",
                                            "value": "google.com"
                                        },
                                        {
                                            "policy": "deny",
                                            "type": "port",
                                            "value": "23"
                                        },
                                        {
                                            "policy": "deny",
                                            "type": "ipRange",
                                            "value": "10.11.12.00/24"
                                        },
                                        {
                                            "policy": "deny",
                                            "type": "ipRange",
                                            "value": "10.11.12.00/24:5555"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "summary": "Return the L7 firewall rules for an SSID on an MR network",
                    "tags": [
                        "wireless",
                        "configure",
                        "ssids",
                        "firewall",
                        "l7FirewallRules"
                    ],
                    "consumes": [
                        "application/json"
                    ],
                    "produces": [
                        "application/json"
                    ],
                    "schemes": [
                        "https"
                    ],
                    "security": [{
                        "meraki_api_key": []
                    }]
                },
                "put": {
                    "description": "Update the L7 firewall rules of an SSID on an MR network",
                    "operationId": "updateNetworkWirelessSsidFirewallL7FirewallRules",
                    "parameters": {
                        "networkId": {
                            "name": "networkId",
                            "in": "path",
                            "type": "string",
                            "required": true
                        },
                        "number": {
                            "name": "number",
                            "in": "path",
                            "type": "string",
                            "required": true
                        },
                        "updateNetworkWirelessSsidFirewallL7FirewallRules": {
                            "name": "updateNetworkWirelessSsidFirewallL7FirewallRules",
                            "in": "body",
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "rules": {
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "policy": {
                                                    "type": "string",
                                                    "enum": [
                                                        "deny"
                                                    ],
                                                    "description": "'Deny' traffic specified by this rule"
                                                },
                                                "type": {
                                                    "type": "string",
                                                    "enum": [
                                                        "application",
                                                        "applicationCategory",
                                                        "host",
                                                        "port",
                                                        "ipRange"
                                                    ],
                                                    "description": "Type of the L7 firewall rule. One of: 'application', 'applicationCategory', 'host', 'port', 'ipRange'"
                                                },
                                                "value": {
                                                    "type": "string",
                                                    "description": "The value of what needs to get blocked. Format of the value varies depending on type of the firewall rule selected."
                                                }
                                            }
                                        },
                                        "description": "An array of L7 firewall rules for this SSID. Rules will get applied in the same order user has specified in request. Empty array will clear the L7 firewall rule configuration."
                                    }
                                },
                                "example": {
                                    "rules": [{
                                            "policy": "deny",
                                            "type": "application",
                                            "value": {
                                                "id": "meraki:layer7/application/67",
                                                "name": "Xbox LIVE"
                                            }
                                        },
                                        {
                                            "policy": "deny",
                                            "type": "applicationCategory",
                                            "value": {
                                                "id": "meraki:layer7/category/2",
                                                "name": "Blogging"
                                            }
                                        },
                                        {
                                            "policy": "deny",
                                            "type": "host",
                                            "value": "google.com"
                                        },
                                        {
                                            "policy": "deny",
                                            "type": "port",
                                            "value": "23"
                                        },
                                        {
                                            "policy": "deny",
                                            "type": "ipRange",
                                            "value": "10.11.12.00/24"
                                        },
                                        {
                                            "policy": "deny",
                                            "type": "ipRange",
                                            "value": "10.11.12.00/24:5555"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "responses": {
                        "200": {
                            "description": "Successful operation",
                            "examples": {
                                "application/json": {
                                    "rules": [{
                                            "policy": "deny",
                                            "type": "application",
                                            "value": {
                                                "id": "meraki:layer7/application/67",
                                                "name": "Xbox LIVE"
                                            }
                                        },
                                        {
                                            "policy": "deny",
                                            "type": "applicationCategory",
                                            "value": {
                                                "id": "meraki:layer7/category/2",
                                                "name": "Blogging"
                                            }
                                        },
                                        {
                                            "policy": "deny",
                                            "type": "host",
                                            "value": "google.com"
                                        },
                                        {
                                            "policy": "deny",
                                            "type": "port",
                                            "value": "23"
                                        },
                                        {
                                            "policy": "deny",
                                            "type": "ipRange",
                                            "value": "10.11.12.00/24"
                                        },
                                        {
                                            "policy": "deny",
                                            "type": "ipRange",
                                            "value": "10.11.12.00/24:5555"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "summary": "Update the L7 firewall rules of an SSID on an MR network",
                    "tags": [
                        "wireless",
                        "configure",
                        "ssids",
                        "firewall",
                        "l7FirewallRules"
                    ],
                    "consumes": [
                        "application/json"
                    ],
                    "produces": [
                        "application/json"
                    ],
                    "schemes": [
                        "https"
                    ],
                    "security": [{
                        "meraki_api_key": []
                    }]
                }
            },
            "type": "infos",
            "name": "What's Updated",
            "group": "wireless",
            "apiDetails": {
                "get": {
                    "description": "Return the L7 firewall rules for an SSID on an MR network",
                    "operationId": "getNetworkWirelessSsidFirewallL7FirewallRules",
                    "parameters": [{
                            "name": "networkId",
                            "in": "path",
                            "type": "string",
                            "required": true
                        },
                        {
                            "name": "number",
                            "in": "path",
                            "type": "string",
                            "required": true
                        }
                    ],
                    "responses": {
                        "200": {
                            "description": "Successful operation",
                            "examples": {
                                "application/json": {
                                    "rules": [{
                                            "policy": "deny",
                                            "type": "application",
                                            "value": {
                                                "id": "meraki:layer7/application/67",
                                                "name": "Xbox LIVE"
                                            }
                                        },
                                        {
                                            "policy": "deny",
                                            "type": "applicationCategory",
                                            "value": {
                                                "id": "meraki:layer7/category/2",
                                                "name": "Blogging"
                                            }
                                        },
                                        {
                                            "policy": "deny",
                                            "type": "host",
                                            "value": "google.com"
                                        },
                                        {
                                            "policy": "deny",
                                            "type": "port",
                                            "value": "23"
                                        },
                                        {
                                            "policy": "deny",
                                            "type": "ipRange",
                                            "value": "10.11.12.00/24"
                                        },
                                        {
                                            "policy": "deny",
                                            "type": "ipRange",
                                            "value": "10.11.12.00/24:5555"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "summary": "Return the L7 firewall rules for an SSID on an MR network",
                    "tags": [
                        "wireless",
                        "configure",
                        "ssids",
                        "firewall",
                        "l7FirewallRules"
                    ]
                },
                "put": {
                    "description": "Update the L7 firewall rules of an SSID on an MR network",
                    "operationId": "updateNetworkWirelessSsidFirewallL7FirewallRules",
                    "parameters": [{
                            "name": "networkId",
                            "in": "path",
                            "type": "string",
                            "required": true
                        },
                        {
                            "name": "number",
                            "in": "path",
                            "type": "string",
                            "required": true
                        },
                        {
                            "name": "updateNetworkWirelessSsidFirewallL7FirewallRules",
                            "in": "body",
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "rules": {
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "policy": {
                                                    "type": "string",
                                                    "enum": [
                                                        "deny"
                                                    ],
                                                    "description": "'Deny' traffic specified by this rule"
                                                },
                                                "type": {
                                                    "type": "string",
                                                    "enum": [
                                                        "application",
                                                        "applicationCategory",
                                                        "host",
                                                        "port",
                                                        "ipRange"
                                                    ],
                                                    "description": "Type of the L7 firewall rule. One of: 'application', 'applicationCategory', 'host', 'port', 'ipRange'"
                                                },
                                                "value": {
                                                    "type": "string",
                                                    "description": "The value of what needs to get blocked. Format of the value varies depending on type of the firewall rule selected."
                                                }
                                            }
                                        },
                                        "description": "An array of L7 firewall rules for this SSID. Rules will get applied in the same order user has specified in request. Empty array will clear the L7 firewall rule configuration."
                                    }
                                },
                                "example": {
                                    "rules": [{
                                            "policy": "deny",
                                            "type": "application",
                                            "value": {
                                                "id": "meraki:layer7/application/67",
                                                "name": "Xbox LIVE"
                                            }
                                        },
                                        {
                                            "policy": "deny",
                                            "type": "applicationCategory",
                                            "value": {
                                                "id": "meraki:layer7/category/2",
                                                "name": "Blogging"
                                            }
                                        },
                                        {
                                            "policy": "deny",
                                            "type": "host",
                                            "value": "google.com"
                                        },
                                        {
                                            "policy": "deny",
                                            "type": "port",
                                            "value": "23"
                                        },
                                        {
                                            "policy": "deny",
                                            "type": "ipRange",
                                            "value": "10.11.12.00/24"
                                        },
                                        {
                                            "policy": "deny",
                                            "type": "ipRange",
                                            "value": "10.11.12.00/24:5555"
                                        }
                                    ]
                                }
                            }
                        }
                    ],
                    "responses": {
                        "200": {
                            "description": "Successful operation",
                            "examples": {
                                "application/json": {
                                    "rules": [{
                                            "policy": "deny",
                                            "type": "application",
                                            "value": {
                                                "id": "meraki:layer7/application/67",
                                                "name": "Xbox LIVE"
                                            }
                                        },
                                        {
                                            "policy": "deny",
                                            "type": "applicationCategory",
                                            "value": {
                                                "id": "meraki:layer7/category/2",
                                                "name": "Blogging"
                                            }
                                        },
                                        {
                                            "policy": "deny",
                                            "type": "host",
                                            "value": "google.com"
                                        },
                                        {
                                            "policy": "deny",
                                            "type": "port",
                                            "value": "23"
                                        },
                                        {
                                            "policy": "deny",
                                            "type": "ipRange",
                                            "value": "10.11.12.00/24"
                                        },
                                        {
                                            "policy": "deny",
                                            "type": "ipRange",
                                            "value": "10.11.12.00/24:5555"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "summary": "Update the L7 firewall rules of an SSID on an MR network",
                    "tags": [
                        "wireless",
                        "configure",
                        "ssids",
                        "firewall",
                        "l7FirewallRules"
                    ]
                }
            }
        },
        {
            "ruleId": "add-path",
            "message": "`/networks/{networkId}/wireless/ssids/{number}/identityPsks` - Added",
            "messageHtml": "Path added   <br>\n      <br>\n      - New endpoint\n      <h4>List all Identity PSKs in a wireless network</h4>\n      <p>   \n      <b class=\"mr-4 badge get\">GET</b>  <code>/networks/{networkId}/wireless/ssids/{number}/identityPsks</code>\n      <br>  \n      <pre><code>[\n    {\n        &quot;identityPskId&quot;: &quot;1284392014819&quot;,\n        &quot;name&quot;: &quot;Sample Identity PSK&quot;,\n        &quot;passphrase&quot;: &quot;NIalareK&quot;,\n        &quot;groupPolicyId&quot;: &quot;101&quot;\n    }\n]</code></pre>\n      </p>\n      <hr>\n      \n      <br>\n      - New endpoint\n      <h4>Create an Identity PSK</h4>\n      <p>   \n      <b class=\"mr-4 badge post\">POST</b>  <code>/networks/{networkId}/wireless/ssids/{number}/identityPsks</code>\n      <br>  \n      <pre><code>{\n    &quot;identityPskId&quot;: &quot;1284392014819&quot;,\n    &quot;name&quot;: &quot;Sample Identity PSK&quot;,\n    &quot;passphrase&quot;: &quot;NIalareK&quot;,\n    &quot;groupPolicyId&quot;: &quot;101&quot;\n}</code></pre>\n      </p>\n      <hr>\n      ",
            "path": "/networks/{networkId}/wireless/ssids/{number}/identityPsks",
            "details": {
                "get": {
                    "description": "List all Identity PSKs in a wireless network",
                    "operationId": "getNetworkWirelessSsidIdentityPsks",
                    "parameters": {
                        "networkId": {
                            "name": "networkId",
                            "in": "path",
                            "type": "string",
                            "required": true
                        },
                        "number": {
                            "name": "number",
                            "in": "path",
                            "type": "string",
                            "required": true
                        }
                    },
                    "responses": {
                        "200": {
                            "description": "Successful operation",
                            "examples": {
                                "application/json": [{
                                    "identityPskId": "1284392014819",
                                    "name": "Sample Identity PSK",
                                    "passphrase": "NIalareK",
                                    "groupPolicyId": "101"
                                }]
                            }
                        }
                    },
                    "summary": "List all Identity PSKs in a wireless network",
                    "tags": [
                        "wireless",
                        "configure",
                        "ssids",
                        "identityPsks"
                    ],
                    "consumes": [
                        "application/json"
                    ],
                    "produces": [
                        "application/json"
                    ],
                    "schemes": [
                        "https"
                    ],
                    "security": [{
                        "meraki_api_key": []
                    }]
                },
                "post": {
                    "description": "Create an Identity PSK",
                    "operationId": "createNetworkWirelessSsidIdentityPsk",
                    "parameters": {
                        "networkId": {
                            "name": "networkId",
                            "in": "path",
                            "type": "string",
                            "required": true
                        },
                        "number": {
                            "name": "number",
                            "in": "path",
                            "type": "string",
                            "required": true
                        },
                        "createNetworkWirelessSsidIdentityPsk": {
                            "name": "createNetworkWirelessSsidIdentityPsk",
                            "in": "body",
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "description": "The name of the Identity PSK",
                                        "required": true
                                    },
                                    "passphrase": {
                                        "type": "string",
                                        "description": "The passphrase for client authentication",
                                        "required": true
                                    },
                                    "groupPolicyId": {
                                        "type": "string",
                                        "description": "The group policy to be applied to clients",
                                        "required": true
                                    }
                                },
                                "example": {
                                    "name": "Sample Identity PSK",
                                    "passphrase": "NIalareK",
                                    "groupPolicyId": "101"
                                }
                            },
                            "required": true
                        }
                    },
                    "responses": {
                        "201": {
                            "description": "Successful operation",
                            "examples": {
                                "application/json": {
                                    "identityPskId": "1284392014819",
                                    "name": "Sample Identity PSK",
                                    "passphrase": "NIalareK",
                                    "groupPolicyId": "101"
                                }
                            }
                        }
                    },
                    "summary": "Create an Identity PSK",
                    "tags": [
                        "wireless",
                        "configure",
                        "ssids",
                        "identityPsks"
                    ],
                    "consumes": [
                        "application/json"
                    ],
                    "produces": [
                        "application/json"
                    ],
                    "schemes": [
                        "https"
                    ],
                    "security": [{
                        "meraki_api_key": []
                    }]
                }
            },
            "type": "infos",
            "name": "What's Updated",
            "group": "wireless",
            "apiDetails": {
                "get": {
                    "description": "List all Identity PSKs in a wireless network",
                    "operationId": "getNetworkWirelessSsidIdentityPsks",
                    "parameters": [{
                            "name": "networkId",
                            "in": "path",
                            "type": "string",
                            "required": true
                        },
                        {
                            "name": "number",
                            "in": "path",
                            "type": "string",
                            "required": true
                        }
                    ],
                    "responses": {
                        "200": {
                            "description": "Successful operation",
                            "examples": {
                                "application/json": [{
                                    "identityPskId": "1284392014819",
                                    "name": "Sample Identity PSK",
                                    "passphrase": "NIalareK",
                                    "groupPolicyId": "101"
                                }]
                            }
                        }
                    },
                    "summary": "List all Identity PSKs in a wireless network",
                    "tags": [
                        "wireless",
                        "configure",
                        "ssids",
                        "identityPsks"
                    ]
                },
                "post": {
                    "description": "Create an Identity PSK",
                    "operationId": "createNetworkWirelessSsidIdentityPsk",
                    "parameters": [{
                            "name": "networkId",
                            "in": "path",
                            "type": "string",
                            "required": true
                        },
                        {
                            "name": "number",
                            "in": "path",
                            "type": "string",
                            "required": true
                        },
                        {
                            "name": "createNetworkWirelessSsidIdentityPsk",
                            "in": "body",
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "description": "The name of the Identity PSK",
                                        "required": true
                                    },
                                    "passphrase": {
                                        "type": "string",
                                        "description": "The passphrase for client authentication",
                                        "required": true
                                    },
                                    "groupPolicyId": {
                                        "type": "string",
                                        "description": "The group policy to be applied to clients",
                                        "required": true
                                    }
                                },
                                "example": {
                                    "name": "Sample Identity PSK",
                                    "passphrase": "NIalareK",
                                    "groupPolicyId": "101"
                                }
                            },
                            "required": true
                        }
                    ],
                    "responses": {
                        "201": {
                            "description": "Successful operation",
                            "examples": {
                                "application/json": {
                                    "identityPskId": "1284392014819",
                                    "name": "Sample Identity PSK",
                                    "passphrase": "NIalareK",
                                    "groupPolicyId": "101"
                                }
                            }
                        }
                    },
                    "summary": "Create an Identity PSK",
                    "tags": [
                        "wireless",
                        "configure",
                        "ssids",
                        "identityPsks"
                    ]
                }
            }
        },
        {
            "ruleId": "add-path",
            "message": "`/networks/{networkId}/wireless/ssids/{number}/identityPsks/{identityPskId}` - Added",
            "messageHtml": "Path added   <br>\n      <br>\n      - New endpoint\n      <h4>Return an Identity PSK</h4>\n      <p>   \n      <b class=\"mr-4 badge get\">GET</b>  <code>/networks/{networkId}/wireless/ssids/{number}/identityPsks/{identityPskId}</code>\n      <br>  \n      <pre><code>{\n    &quot;identityPskId&quot;: &quot;1284392014819&quot;,\n    &quot;name&quot;: &quot;Sample Identity PSK&quot;,\n    &quot;passphrase&quot;: &quot;NIalareK&quot;,\n    &quot;groupPolicyId&quot;: &quot;101&quot;\n}</code></pre>\n      </p>\n      <hr>\n      \n      <br>\n      - New endpoint\n      <h4>Update an Identity PSK</h4>\n      <p>   \n      <b class=\"mr-4 badge put\">PUT</b>  <code>/networks/{networkId}/wireless/ssids/{number}/identityPsks/{identityPskId}</code>\n      <br>  \n      <pre><code>{\n    &quot;identityPskId&quot;: &quot;1284392014819&quot;,\n    &quot;name&quot;: &quot;Sample Identity PSK&quot;,\n    &quot;passphrase&quot;: &quot;NIalareK&quot;,\n    &quot;groupPolicyId&quot;: &quot;101&quot;\n}</code></pre>\n      </p>\n      <hr>\n      \n      <br>\n      - New endpoint\n      <h4>Delete an Identity PSK</h4>\n      <p>   \n      <b class=\"mr-4 badge delete\">DELETE</b>  <code>/networks/{networkId}/wireless/ssids/{number}/identityPsks/{identityPskId}</code>\n      <br>  \n      <pre><code></code></pre>\n      </p>\n      <hr>\n      ",
            "path": "/networks/{networkId}/wireless/ssids/{number}/identityPsks/{identityPskId}",
            "details": {
                "get": {
                    "description": "Return an Identity PSK",
                    "operationId": "getNetworkWirelessSsidIdentityPsk",
                    "parameters": {
                        "networkId": {
                            "name": "networkId",
                            "in": "path",
                            "type": "string",
                            "required": true
                        },
                        "number": {
                            "name": "number",
                            "in": "path",
                            "type": "string",
                            "required": true
                        },
                        "identityPskId": {
                            "name": "identityPskId",
                            "in": "path",
                            "type": "string",
                            "required": true
                        }
                    },
                    "responses": {
                        "200": {
                            "description": "Successful operation",
                            "examples": {
                                "application/json": {
                                    "identityPskId": "1284392014819",
                                    "name": "Sample Identity PSK",
                                    "passphrase": "NIalareK",
                                    "groupPolicyId": "101"
                                }
                            }
                        }
                    },
                    "summary": "Return an Identity PSK",
                    "tags": [
                        "wireless",
                        "configure",
                        "ssids",
                        "identityPsks"
                    ],
                    "consumes": [
                        "application/json"
                    ],
                    "produces": [
                        "application/json"
                    ],
                    "schemes": [
                        "https"
                    ],
                    "security": [{
                        "meraki_api_key": []
                    }]
                },
                "put": {
                    "description": "Update an Identity PSK",
                    "operationId": "updateNetworkWirelessSsidIdentityPsk",
                    "parameters": {
                        "networkId": {
                            "name": "networkId",
                            "in": "path",
                            "type": "string",
                            "required": true
                        },
                        "number": {
                            "name": "number",
                            "in": "path",
                            "type": "string",
                            "required": true
                        },
                        "identityPskId": {
                            "name": "identityPskId",
                            "in": "path",
                            "type": "string",
                            "required": true
                        },
                        "updateNetworkWirelessSsidIdentityPsk": {
                            "name": "updateNetworkWirelessSsidIdentityPsk",
                            "in": "body",
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "description": "The name of the Identity PSK"
                                    },
                                    "passphrase": {
                                        "type": "string",
                                        "description": "The passphrase for client authentication"
                                    },
                                    "groupPolicyId": {
                                        "type": "string",
                                        "description": "The group policy to be applied to clients"
                                    }
                                },
                                "example": {
                                    "name": "Sample Identity PSK",
                                    "passphrase": "NIalareK",
                                    "groupPolicyId": "101"
                                }
                            }
                        }
                    },
                    "responses": {
                        "200": {
                            "description": "Successful operation",
                            "examples": {
                                "application/json": {
                                    "identityPskId": "1284392014819",
                                    "name": "Sample Identity PSK",
                                    "passphrase": "NIalareK",
                                    "groupPolicyId": "101"
                                }
                            }
                        }
                    },
                    "summary": "Update an Identity PSK",
                    "tags": [
                        "wireless",
                        "configure",
                        "ssids",
                        "identityPsks"
                    ],
                    "consumes": [
                        "application/json"
                    ],
                    "produces": [
                        "application/json"
                    ],
                    "schemes": [
                        "https"
                    ],
                    "security": [{
                        "meraki_api_key": []
                    }]
                },
                "delete": {
                    "description": "Delete an Identity PSK",
                    "operationId": "deleteNetworkWirelessSsidIdentityPsk",
                    "parameters": {
                        "networkId": {
                            "name": "networkId",
                            "in": "path",
                            "type": "string",
                            "required": true
                        },
                        "number": {
                            "name": "number",
                            "in": "path",
                            "type": "string",
                            "required": true
                        },
                        "identityPskId": {
                            "name": "identityPskId",
                            "in": "path",
                            "type": "string",
                            "required": true
                        }
                    },
                    "responses": {
                        "204": {
                            "description": "Successful operation"
                        }
                    },
                    "summary": "Delete an Identity PSK",
                    "tags": [
                        "wireless",
                        "configure",
                        "ssids",
                        "identityPsks"
                    ],
                    "consumes": [
                        "application/json"
                    ],
                    "produces": [
                        "application/json"
                    ],
                    "schemes": [
                        "https"
                    ],
                    "security": [{
                        "meraki_api_key": []
                    }]
                }
            },
            "type": "infos",
            "name": "What's Updated",
            "group": "wireless",
            "apiDetails": {
                "get": {
                    "description": "Return an Identity PSK",
                    "operationId": "getNetworkWirelessSsidIdentityPsk",
                    "parameters": [{
                            "name": "networkId",
                            "in": "path",
                            "type": "string",
                            "required": true
                        },
                        {
                            "name": "number",
                            "in": "path",
                            "type": "string",
                            "required": true
                        },
                        {
                            "name": "identityPskId",
                            "in": "path",
                            "type": "string",
                            "required": true
                        }
                    ],
                    "responses": {
                        "200": {
                            "description": "Successful operation",
                            "examples": {
                                "application/json": {
                                    "identityPskId": "1284392014819",
                                    "name": "Sample Identity PSK",
                                    "passphrase": "NIalareK",
                                    "groupPolicyId": "101"
                                }
                            }
                        }
                    },
                    "summary": "Return an Identity PSK",
                    "tags": [
                        "wireless",
                        "configure",
                        "ssids",
                        "identityPsks"
                    ]
                },
                "put": {
                    "description": "Update an Identity PSK",
                    "operationId": "updateNetworkWirelessSsidIdentityPsk",
                    "parameters": [{
                            "name": "networkId",
                            "in": "path",
                            "type": "string",
                            "required": true
                        },
                        {
                            "name": "number",
                            "in": "path",
                            "type": "string",
                            "required": true
                        },
                        {
                            "name": "identityPskId",
                            "in": "path",
                            "type": "string",
                            "required": true
                        },
                        {
                            "name": "updateNetworkWirelessSsidIdentityPsk",
                            "in": "body",
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "description": "The name of the Identity PSK"
                                    },
                                    "passphrase": {
                                        "type": "string",
                                        "description": "The passphrase for client authentication"
                                    },
                                    "groupPolicyId": {
                                        "type": "string",
                                        "description": "The group policy to be applied to clients"
                                    }
                                },
                                "example": {
                                    "name": "Sample Identity PSK",
                                    "passphrase": "NIalareK",
                                    "groupPolicyId": "101"
                                }
                            }
                        }
                    ],
                    "responses": {
                        "200": {
                            "description": "Successful operation",
                            "examples": {
                                "application/json": {
                                    "identityPskId": "1284392014819",
                                    "name": "Sample Identity PSK",
                                    "passphrase": "NIalareK",
                                    "groupPolicyId": "101"
                                }
                            }
                        }
                    },
                    "summary": "Update an Identity PSK",
                    "tags": [
                        "wireless",
                        "configure",
                        "ssids",
                        "identityPsks"
                    ]
                },
                "delete": {
                    "description": "Delete an Identity PSK",
                    "operationId": "deleteNetworkWirelessSsidIdentityPsk",
                    "parameters": [{
                            "name": "networkId",
                            "in": "path",
                            "type": "string",
                            "required": true
                        },
                        {
                            "name": "number",
                            "in": "path",
                            "type": "string",
                            "required": true
                        },
                        {
                            "name": "identityPskId",
                            "in": "path",
                            "type": "string",
                            "required": true
                        }
                    ],
                    "responses": {
                        "204": {
                            "description": "Successful operation"
                        }
                    },
                    "summary": "Delete an Identity PSK",
                    "tags": [
                        "wireless",
                        "configure",
                        "ssids",
                        "identityPsks"
                    ]
                }
            }
        },
        {
            "ruleId": "add-path",
            "message": "`/networks/{networkId}/wireless/usageHistory` - Added",
            "messageHtml": "Path added   <br>\n      <br>\n      - New endpoint\n      <h4>Return AP usage over time for a device or network client</h4>\n      <p>   \n      <b class=\"mr-4 badge get\">GET</b>  <code>/networks/{networkId}/wireless/usageHistory</code>\n      <br>  \n      <pre><code>[\n    {\n        &quot;startTs&quot;: &quot;2020-01-01T00:00:00Z&quot;,\n        &quot;endTs&quot;: &quot;2020-01-01T01:00:00Z&quot;,\n        &quot;totalKbps&quot;: 2590,\n        &quot;sentKbps&quot;: 159,\n        &quot;receivedKbps&quot;: 2431\n    },\n    {\n        &quot;startTs&quot;: &quot;2020-01-01T01:00:00Z&quot;,\n        &quot;endTs&quot;: &quot;2020-01-01T02:00:00Z&quot;,\n        &quot;totalKbps&quot;: 1108,\n        &quot;sentKbps&quot;: 144,\n        &quot;receivedKbps&quot;: 964\n    }\n]</code></pre>\n      </p>\n      <hr>\n      ",
            "path": "/networks/{networkId}/wireless/usageHistory",
            "details": {
                "get": {
                    "description": "Return AP usage over time for a device or network client",
                    "operationId": "getNetworkWirelessUsageHistory",
                    "parameters": {
                        "networkId": {
                            "name": "networkId",
                            "in": "path",
                            "type": "string",
                            "required": true
                        },
                        "t0": {
                            "type": "string",
                            "name": "t0",
                            "in": "query",
                            "description": "The beginning of the timespan for the data. The maximum lookback period is 31 days from today."
                        },
                        "t1": {
                            "type": "string",
                            "name": "t1",
                            "in": "query",
                            "description": "The end of the timespan for the data. t1 can be a maximum of 31 days after t0."
                        },
                        "timespan": {
                            "type": "number",
                            "format": "float",
                            "name": "timespan",
                            "in": "query",
                            "description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 31 days. The default is 7 days."
                        },
                        "resolution": {
                            "type": "integer",
                            "name": "resolution",
                            "in": "query",
                            "description": "The time resolution in seconds for returned data. The valid resolutions are: 300, 600, 1200, 3600, 14400, 86400. The default is 86400."
                        },
                        "autoResolution": {
                            "type": "boolean",
                            "name": "autoResolution",
                            "in": "query",
                            "description": "Automatically select a data resolution based on the given timespan; this overrides the value specified by the 'resolution' parameter. The default setting is false."
                        },
                        "clientId": {
                            "type": "string",
                            "name": "clientId",
                            "in": "query",
                            "description": "Filter results by network client to return per-device AP usage over time inner joined by the queried client's connection history."
                        },
                        "deviceSerial": {
                            "type": "string",
                            "name": "deviceSerial",
                            "in": "query",
                            "description": "Filter results by device. Requires :band."
                        },
                        "apTag": {
                            "type": "string",
                            "name": "apTag",
                            "in": "query",
                            "description": "Filter results by AP tag; either :clientId or :deviceSerial must be jointly specified."
                        },
                        "band": {
                            "type": "string",
                            "enum": [
                                "2.4",
                                "5"
                            ],
                            "name": "band",
                            "in": "query",
                            "description": "Filter results by band (either '2.4' or '5')."
                        },
                        "ssid": {
                            "type": "integer",
                            "name": "ssid",
                            "in": "query",
                            "description": "Filter results by SSID number."
                        }
                    },
                    "responses": {
                        "200": {
                            "description": "Successful operation",
                            "examples": {
                                "application/json": [{
                                        "startTs": "2020-01-01T00:00:00Z",
                                        "endTs": "2020-01-01T01:00:00Z",
                                        "totalKbps": 2590,
                                        "sentKbps": 159,
                                        "receivedKbps": 2431
                                    },
                                    {
                                        "startTs": "2020-01-01T01:00:00Z",
                                        "endTs": "2020-01-01T02:00:00Z",
                                        "totalKbps": 1108,
                                        "sentKbps": 144,
                                        "receivedKbps": 964
                                    }
                                ]
                            }
                        }
                    },
                    "summary": "Return AP usage over time for a device or network client",
                    "tags": [
                        "wireless",
                        "monitor",
                        "usageHistory"
                    ],
                    "consumes": [
                        "application/json"
                    ],
                    "produces": [
                        "application/json"
                    ],
                    "schemes": [
                        "https"
                    ],
                    "security": [{
                        "meraki_api_key": []
                    }]
                }
            },
            "type": "infos",
            "name": "What's Updated",
            "group": "wireless",
            "apiDetails": {
                "get": {
                    "description": "Return AP usage over time for a device or network client",
                    "operationId": "getNetworkWirelessUsageHistory",
                    "parameters": [{
                            "name": "networkId",
                            "in": "path",
                            "type": "string",
                            "required": true
                        },
                        {
                            "type": "string",
                            "name": "t0",
                            "in": "query",
                            "description": "The beginning of the timespan for the data. The maximum lookback period is 31 days from today."
                        },
                        {
                            "type": "string",
                            "name": "t1",
                            "in": "query",
                            "description": "The end of the timespan for the data. t1 can be a maximum of 31 days after t0."
                        },
                        {
                            "type": "number",
                            "format": "float",
                            "name": "timespan",
                            "in": "query",
                            "description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 31 days. The default is 7 days."
                        },
                        {
                            "type": "integer",
                            "name": "resolution",
                            "in": "query",
                            "description": "The time resolution in seconds for returned data. The valid resolutions are: 300, 600, 1200, 3600, 14400, 86400. The default is 86400."
                        },
                        {
                            "type": "boolean",
                            "name": "autoResolution",
                            "in": "query",
                            "description": "Automatically select a data resolution based on the given timespan; this overrides the value specified by the 'resolution' parameter. The default setting is false."
                        },
                        {
                            "type": "string",
                            "name": "clientId",
                            "in": "query",
                            "description": "Filter results by network client to return per-device AP usage over time inner joined by the queried client's connection history."
                        },
                        {
                            "type": "string",
                            "name": "deviceSerial",
                            "in": "query",
                            "description": "Filter results by device. Requires :band."
                        },
                        {
                            "type": "string",
                            "name": "apTag",
                            "in": "query",
                            "description": "Filter results by AP tag; either :clientId or :deviceSerial must be jointly specified."
                        },
                        {
                            "type": "string",
                            "enum": [
                                "2.4",
                                "5"
                            ],
                            "name": "band",
                            "in": "query",
                            "description": "Filter results by band (either '2.4' or '5')."
                        },
                        {
                            "type": "integer",
                            "name": "ssid",
                            "in": "query",
                            "description": "Filter results by SSID number."
                        }
                    ],
                    "responses": {
                        "200": {
                            "description": "Successful operation",
                            "examples": {
                                "application/json": [{
                                        "startTs": "2020-01-01T00:00:00Z",
                                        "endTs": "2020-01-01T01:00:00Z",
                                        "totalKbps": 2590,
                                        "sentKbps": 159,
                                        "receivedKbps": 2431
                                    },
                                    {
                                        "startTs": "2020-01-01T01:00:00Z",
                                        "endTs": "2020-01-01T02:00:00Z",
                                        "totalKbps": 1108,
                                        "sentKbps": 144,
                                        "receivedKbps": 964
                                    }
                                ]
                            }
                        }
                    },
                    "summary": "Return AP usage over time for a device or network client",
                    "tags": [
                        "wireless",
                        "monitor",
                        "usageHistory"
                    ]
                }
            }
        },
        {
            "ruleId": "add-path",
            "message": "`/organizations/{organizationId}/appliance/uplink/statuses` - Added",
            "messageHtml": "Path added   <br>\n      <br>\n      - New endpoint\n      <h4>List the uplink status of every Meraki MX and Z series appliances in the organization</h4>\n      <p>   \n      <b class=\"mr-4 badge get\">GET</b>  <code>/organizations/{organizationId}/appliance/uplink/statuses</code>\n      <br>  \n      <pre><code>[\n    {\n        &quot;networkId&quot;: &quot;N_24329156&quot;,\n        &quot;serial&quot;: &quot;Q234-ABCD-5678&quot;,\n        &quot;lastReportedAt&quot;: &quot;2018-02-11T00:00:00Z&quot;,\n        &quot;uplinks&quot;: [\n            {\n                &quot;interface&quot;: &quot;wan1&quot;,\n                &quot;status&quot;: &quot;active&quot;,\n                &quot;ip&quot;: &quot;1.2.3.4&quot;,\n                &quot;gateway&quot;: &quot;1.2.3.5&quot;,\n                &quot;publicIp&quot;: &quot;123.123.123.1&quot;,\n                &quot;primaryDns&quot;: &quot;8.8.8.8&quot;,\n                &quot;secondaryDns&quot;: &quot;8.8.4.4&quot;,\n                &quot;ipAssignedBy&quot;: &quot;static&quot;\n            },\n            {\n                &quot;interface&quot;: &quot;cellular&quot;,\n                &quot;status&quot;: &quot;ready&quot;,\n                &quot;ip&quot;: &quot;1.2.3.4&quot;,\n                &quot;provider&quot;: &quot;at&amp;t&quot;,\n                &quot;publicIp&quot;: &quot;123.123.123.1&quot;,\n                &quot;model&quot;: &quot;integrated&quot;,\n                &quot;signalStat&quot;: {\n                    &quot;rsrp&quot;: &quot;-120&quot;,\n                    &quot;rsrq&quot;: &quot;-13&quot;\n                },\n                &quot;connectionType&quot;: &quot;4g&quot;,\n                &quot;apn&quot;: &quot;internet&quot;\n            }\n        ]\n    }\n]</code></pre>\n      </p>\n      <hr>\n      ",
            "path": "/organizations/{organizationId}/appliance/uplink/statuses",
            "details": {
                "get": {
                    "description": "List the uplink status of every Meraki MX and Z series appliances in the organization",
                    "operationId": "getOrganizationApplianceUplinkStatuses",
                    "parameters": {
                        "organizationId": {
                            "name": "organizationId",
                            "in": "path",
                            "type": "string",
                            "required": true
                        },
                        "perPage": {
                            "type": "integer",
                            "name": "perPage",
                            "in": "query",
                            "description": "The number of entries per page returned. Acceptable range is 3 - 1000. Default is 1000."
                        },
                        "startingAfter": {
                            "type": "string",
                            "name": "startingAfter",
                            "in": "query",
                            "description": "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
                        },
                        "endingBefore": {
                            "type": "string",
                            "name": "endingBefore",
                            "in": "query",
                            "description": "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
                        }
                    },
                    "responses": {
                        "200": {
                            "description": "Successful operation",
                            "headers": {
                                "Link": {
                                    "type": "string",
                                    "description": "A comma-separated list of first, last, prev, and next relative links used for subsequent paginated requests."
                                }
                            },
                            "examples": {
                                "application/json": [{
                                    "networkId": "N_24329156",
                                    "serial": "Q234-ABCD-5678",
                                    "lastReportedAt": "2018-02-11T00:00:00Z",
                                    "uplinks": [{
                                            "interface": "wan1",
                                            "status": "active",
                                            "ip": "1.2.3.4",
                                            "gateway": "1.2.3.5",
                                            "publicIp": "123.123.123.1",
                                            "primaryDns": "8.8.8.8",
                                            "secondaryDns": "8.8.4.4",
                                            "ipAssignedBy": "static"
                                        },
                                        {
                                            "interface": "cellular",
                                            "status": "ready",
                                            "ip": "1.2.3.4",
                                            "provider": "at&t",
                                            "publicIp": "123.123.123.1",
                                            "model": "integrated",
                                            "signalStat": {
                                                "rsrp": "-120",
                                                "rsrq": "-13"
                                            },
                                            "connectionType": "4g",
                                            "apn": "internet"
                                        }
                                    ]
                                }]
                            }
                        }
                    },
                    "summary": "List the uplink status of every Meraki MX and Z series appliances in the organization",
                    "tags": [
                        "appliance",
                        "monitor",
                        "uplink",
                        "statuses"
                    ],
                    "consumes": [
                        "application/json"
                    ],
                    "produces": [
                        "application/json"
                    ],
                    "schemes": [
                        "https"
                    ],
                    "security": [{
                        "meraki_api_key": []
                    }]
                }
            },
            "type": "infos",
            "name": "What's Updated",
            "group": "appliance",
            "apiDetails": {
                "get": {
                    "description": "List the uplink status of every Meraki MX and Z series appliances in the organization",
                    "operationId": "getOrganizationApplianceUplinkStatuses",
                    "parameters": [{
                            "name": "organizationId",
                            "in": "path",
                            "type": "string",
                            "required": true
                        },
                        {
                            "type": "integer",
                            "name": "perPage",
                            "in": "query",
                            "description": "The number of entries per page returned. Acceptable range is 3 - 1000. Default is 1000."
                        },
                        {
                            "type": "string",
                            "name": "startingAfter",
                            "in": "query",
                            "description": "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
                        },
                        {
                            "type": "string",
                            "name": "endingBefore",
                            "in": "query",
                            "description": "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
                        }
                    ],
                    "responses": {
                        "200": {
                            "description": "Successful operation",
                            "headers": {
                                "Link": {
                                    "type": "string",
                                    "description": "A comma-separated list of first, last, prev, and next relative links used for subsequent paginated requests."
                                }
                            },
                            "examples": {
                                "application/json": [{
                                    "networkId": "N_24329156",
                                    "serial": "Q234-ABCD-5678",
                                    "lastReportedAt": "2018-02-11T00:00:00Z",
                                    "uplinks": [{
                                            "interface": "wan1",
                                            "status": "active",
                                            "ip": "1.2.3.4",
                                            "gateway": "1.2.3.5",
                                            "publicIp": "123.123.123.1",
                                            "primaryDns": "8.8.8.8",
                                            "secondaryDns": "8.8.4.4",
                                            "ipAssignedBy": "static"
                                        },
                                        {
                                            "interface": "cellular",
                                            "status": "ready",
                                            "ip": "1.2.3.4",
                                            "provider": "at&t",
                                            "publicIp": "123.123.123.1",
                                            "model": "integrated",
                                            "signalStat": {
                                                "rsrp": "-120",
                                                "rsrq": "-13"
                                            },
                                            "connectionType": "4g",
                                            "apn": "internet"
                                        }
                                    ]
                                }]
                            }
                        }
                    },
                    "summary": "List the uplink status of every Meraki MX and Z series appliances in the organization",
                    "tags": [
                        "appliance",
                        "monitor",
                        "uplink",
                        "statuses"
                    ]
                }
            }
        },
        {
            "ruleId": "add-path",
            "message": "`/organizations/{organizationId}/appliance/vpn/stats` - Added",
            "messageHtml": "Path added   <br>\n      <br>\n      - New endpoint\n      <h4>Show VPN history stat for networks in an organization</h4>\n      <p>   \n      <b class=\"mr-4 badge get\">GET</b>  <code>/organizations/{organizationId}/appliance/vpn/stats</code>\n      <br>  \n      <pre><code>[\n    {\n        &quot;networkId&quot;: &quot;N_12345678&quot;,\n        &quot;networkName&quot;: &quot;San Francisco Office&quot;,\n        &quot;merakiVpnPeers&quot;: [\n            {\n                &quot;networkId&quot;: &quot;L_23456789&quot;,\n                &quot;networkName&quot;: &quot;New York Office&quot;,\n                &quot;usageSummary&quot;: {\n                    &quot;receivedInKilobytes&quot;: 1234567,\n                    &quot;sentInKilobytes&quot;: 2345678\n                },\n                &quot;latencySummaries&quot;: [\n                    {\n                        &quot;senderUplink&quot;: &quot;wan1&quot;,\n                        &quot;receiverUplink&quot;: &quot;wan1&quot;,\n                        &quot;avgLatencyMs&quot;: 15,\n                        &quot;minLatencyMs&quot;: 10,\n                        &quot;maxLatencyMs&quot;: 30\n                    },\n                    {\n                        &quot;senderUplink&quot;: &quot;wan2&quot;,\n                        &quot;receiverUplink&quot;: &quot;wan1&quot;,\n                        &quot;avgLatencyMs&quot;: 15,\n                        &quot;minLatencyMs&quot;: 10,\n                        &quot;maxLatencyMs&quot;: 30\n                    }\n                ],\n                &quot;lossPercentageSummaries&quot;: [\n                    {\n                        &quot;senderUplink&quot;: &quot;wan1&quot;,\n                        &quot;receiverUplink&quot;: &quot;wan1&quot;,\n                        &quot;avgLossPercentage&quot;: 0,\n                        &quot;minLossPercentage&quot;: 0,\n                        &quot;maxLossPercentage&quot;: 0.1\n                    },\n                    {\n                        &quot;senderUplink&quot;: &quot;wan2&quot;,\n                        &quot;receiverUplink&quot;: &quot;wan1&quot;,\n                        &quot;avgLossPercentage&quot;: 0,\n                        &quot;minLossPercentage&quot;: 0,\n                        &quot;maxLossPercentage&quot;: 0.1\n                    }\n                ],\n                &quot;jitterSummaries&quot;: [\n                    {\n                        &quot;senderUplink&quot;: &quot;wan1&quot;,\n                        &quot;receiverUplink&quot;: &quot;wan1&quot;,\n                        &quot;avgJitter&quot;: 0.01,\n                        &quot;minJitter&quot;: 0,\n                        &quot;maxJitter&quot;: 0.25\n                    },\n                    {\n                        &quot;senderUplink&quot;: &quot;wan2&quot;,\n                        &quot;receiverUplink&quot;: &quot;wan1&quot;,\n                        &quot;avgJitter&quot;: 0.01,\n                        &quot;minJitter&quot;: 0,\n                        &quot;maxJitter&quot;: 0.25\n                    }\n                ],\n                &quot;mosSummaries&quot;: [\n                    {\n                        &quot;senderUplink&quot;: &quot;wan1&quot;,\n                        &quot;receiverUplink&quot;: &quot;wan1&quot;,\n                        &quot;avgMos&quot;: 4.1,\n                        &quot;minMos&quot;: 4,\n                        &quot;maxMos&quot;: 4.2\n                    },\n                    {\n                        &quot;senderUplink&quot;: &quot;wan2&quot;,\n                        &quot;receiverUplink&quot;: &quot;wan1&quot;,\n                        &quot;avgMos&quot;: 4.1,\n                        &quot;minMos&quot;: 4,\n                        &quot;maxMos&quot;: 4.2\n                    }\n                ]\n            }\n        ]\n    },\n    {\n        &quot;networkId&quot;: &quot;L_23456789&quot;,\n        &quot;networkName&quot;: &quot;New York Office&quot;,\n        &quot;merakiVpnPeers&quot;: [\n            {\n                &quot;networkId&quot;: &quot;N_12345678&quot;,\n                &quot;networkName&quot;: &quot;San Francisco Office&quot;,\n                &quot;usageSummary&quot;: {\n                    &quot;receivedInKilobytes&quot;: 2345678,\n                    &quot;sentInKilobytes&quot;: 1234567\n                },\n                &quot;latencySummaries&quot;: [\n                    {\n                        &quot;senderUplink&quot;: &quot;wan1&quot;,\n                        &quot;receiverUplink&quot;: &quot;wan1&quot;,\n                        &quot;avgLatencyMs&quot;: 15,\n                        &quot;minLatencyMs&quot;: 10,\n                        &quot;maxLatencyMs&quot;: 30\n                    },\n                    {\n                        &quot;senderUplink&quot;: &quot;wan1&quot;,\n                        &quot;receiverUplink&quot;: &quot;wan2&quot;,\n                        &quot;avgLatencyMs&quot;: 15,\n                        &quot;minLatencyMs&quot;: 10,\n                        &quot;maxLatencyMs&quot;: 30\n                    }\n                ],\n                &quot;lossPercentageSummaries&quot;: [\n                    {\n                        &quot;senderUplink&quot;: &quot;wan1&quot;,\n                        &quot;receiverUplink&quot;: &quot;wan1&quot;,\n                        &quot;avgLossPercentage&quot;: 0,\n                        &quot;minLossPercentage&quot;: 0,\n                        &quot;maxLossPercentage&quot;: 0.1\n                    },\n                    {\n                        &quot;senderUplink&quot;: &quot;wan1&quot;,\n                        &quot;receiverUplink&quot;: &quot;wan2&quot;,\n                        &quot;avgLossPercentage&quot;: 0,\n                        &quot;minLossPercentage&quot;: 0,\n                        &quot;maxLossPercentage&quot;: 0.1\n                    }\n                ],\n                &quot;jitterSummaries&quot;: [\n                    {\n                        &quot;senderUplink&quot;: &quot;wan1&quot;,\n                        &quot;receiverUplink&quot;: &quot;wan1&quot;,\n                        &quot;avgJitter&quot;: 0.01,\n                        &quot;minJitter&quot;: 0,\n                        &quot;maxJitter&quot;: 0.25\n                    },\n                    {\n                        &quot;senderUplink&quot;: &quot;wan1&quot;,\n                        &quot;receiverUplink&quot;: &quot;wan2&quot;,\n                        &quot;avgJitter&quot;: 0.01,\n                        &quot;minJitter&quot;: 0,\n                        &quot;maxJitter&quot;: 0.25\n                    }\n                ],\n                &quot;mosSummaries&quot;: [\n                    {\n                        &quot;senderUplink&quot;: &quot;wan1&quot;,\n                        &quot;receiverUplink&quot;: &quot;wan1&quot;,\n                        &quot;avgMos&quot;: 4.1,\n                        &quot;minMos&quot;: 4,\n                        &quot;maxMos&quot;: 4.2\n                    },\n                    {\n                        &quot;senderUplink&quot;: &quot;wan1&quot;,\n                        &quot;receiverUplink&quot;: &quot;wan2&quot;,\n                        &quot;avgMos&quot;: 4.1,\n                        &quot;minMos&quot;: 4,\n                        &quot;maxMos&quot;: 4.2\n                    }\n                ]\n            }\n        ]\n    }\n]</code></pre>\n      </p>\n      <hr>\n      ",
            "path": "/organizations/{organizationId}/appliance/vpn/stats",
            "details": {
                "get": {
                    "description": "Show VPN history stat for networks in an organization",
                    "operationId": "getOrganizationApplianceVpnStats",
                    "parameters": {
                        "organizationId": {
                            "name": "organizationId",
                            "in": "path",
                            "type": "string",
                            "required": true
                        },
                        "perPage": {
                            "type": "integer",
                            "name": "perPage",
                            "in": "query",
                            "description": "The number of entries per page returned. Acceptable range is 3 - 300. Default is 300."
                        },
                        "startingAfter": {
                            "type": "string",
                            "name": "startingAfter",
                            "in": "query",
                            "description": "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
                        },
                        "endingBefore": {
                            "type": "string",
                            "name": "endingBefore",
                            "in": "query",
                            "description": "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
                        },
                        "networkIds": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            },
                            "name": "networkIds",
                            "in": "query",
                            "description": "A list of Meraki network IDs to filter results to contain only specified networks. E.g.: networkIds[]=N_12345678&networkIds[]=L_3456"
                        },
                        "t0": {
                            "type": "string",
                            "name": "t0",
                            "in": "query",
                            "description": "The beginning of the timespan for the data. The maximum lookback period is 31 days from today."
                        },
                        "t1": {
                            "type": "string",
                            "name": "t1",
                            "in": "query",
                            "description": "The end of the timespan for the data. t1 can be a maximum of 31 days after t0."
                        },
                        "timespan": {
                            "type": "number",
                            "format": "float",
                            "name": "timespan",
                            "in": "query",
                            "description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 31 days. The default is 1 day."
                        }
                    },
                    "responses": {
                        "200": {
                            "description": "Successful operation",
                            "headers": {
                                "Link": {
                                    "type": "string",
                                    "description": "A comma-separated list of first, last, prev, and next relative links used for subsequent paginated requests."
                                }
                            },
                            "examples": {
                                "application/json": [{
                                        "networkId": "N_12345678",
                                        "networkName": "San Francisco Office",
                                        "merakiVpnPeers": [{
                                            "networkId": "L_23456789",
                                            "networkName": "New York Office",
                                            "usageSummary": {
                                                "receivedInKilobytes": 1234567,
                                                "sentInKilobytes": 2345678
                                            },
                                            "latencySummaries": [{
                                                    "senderUplink": "wan1",
                                                    "receiverUplink": "wan1",
                                                    "avgLatencyMs": 15,
                                                    "minLatencyMs": 10,
                                                    "maxLatencyMs": 30
                                                },
                                                {
                                                    "senderUplink": "wan2",
                                                    "receiverUplink": "wan1",
                                                    "avgLatencyMs": 15,
                                                    "minLatencyMs": 10,
                                                    "maxLatencyMs": 30
                                                }
                                            ],
                                            "lossPercentageSummaries": [{
                                                    "senderUplink": "wan1",
                                                    "receiverUplink": "wan1",
                                                    "avgLossPercentage": 0,
                                                    "minLossPercentage": 0,
                                                    "maxLossPercentage": 0.1
                                                },
                                                {
                                                    "senderUplink": "wan2",
                                                    "receiverUplink": "wan1",
                                                    "avgLossPercentage": 0,
                                                    "minLossPercentage": 0,
                                                    "maxLossPercentage": 0.1
                                                }
                                            ],
                                            "jitterSummaries": [{
                                                    "senderUplink": "wan1",
                                                    "receiverUplink": "wan1",
                                                    "avgJitter": 0.01,
                                                    "minJitter": 0,
                                                    "maxJitter": 0.25
                                                },
                                                {
                                                    "senderUplink": "wan2",
                                                    "receiverUplink": "wan1",
                                                    "avgJitter": 0.01,
                                                    "minJitter": 0,
                                                    "maxJitter": 0.25
                                                }
                                            ],
                                            "mosSummaries": [{
                                                    "senderUplink": "wan1",
                                                    "receiverUplink": "wan1",
                                                    "avgMos": 4.1,
                                                    "minMos": 4,
                                                    "maxMos": 4.2
                                                },
                                                {
                                                    "senderUplink": "wan2",
                                                    "receiverUplink": "wan1",
                                                    "avgMos": 4.1,
                                                    "minMos": 4,
                                                    "maxMos": 4.2
                                                }
                                            ]
                                        }]
                                    },
                                    {
                                        "networkId": "L_23456789",
                                        "networkName": "New York Office",
                                        "merakiVpnPeers": [{
                                            "networkId": "N_12345678",
                                            "networkName": "San Francisco Office",
                                            "usageSummary": {
                                                "receivedInKilobytes": 2345678,
                                                "sentInKilobytes": 1234567
                                            },
                                            "latencySummaries": [{
                                                    "senderUplink": "wan1",
                                                    "receiverUplink": "wan1",
                                                    "avgLatencyMs": 15,
                                                    "minLatencyMs": 10,
                                                    "maxLatencyMs": 30
                                                },
                                                {
                                                    "senderUplink": "wan1",
                                                    "receiverUplink": "wan2",
                                                    "avgLatencyMs": 15,
                                                    "minLatencyMs": 10,
                                                    "maxLatencyMs": 30
                                                }
                                            ],
                                            "lossPercentageSummaries": [{
                                                    "senderUplink": "wan1",
                                                    "receiverUplink": "wan1",
                                                    "avgLossPercentage": 0,
                                                    "minLossPercentage": 0,
                                                    "maxLossPercentage": 0.1
                                                },
                                                {
                                                    "senderUplink": "wan1",
                                                    "receiverUplink": "wan2",
                                                    "avgLossPercentage": 0,
                                                    "minLossPercentage": 0,
                                                    "maxLossPercentage": 0.1
                                                }
                                            ],
                                            "jitterSummaries": [{
                                                    "senderUplink": "wan1",
                                                    "receiverUplink": "wan1",
                                                    "avgJitter": 0.01,
                                                    "minJitter": 0,
                                                    "maxJitter": 0.25
                                                },
                                                {
                                                    "senderUplink": "wan1",
                                                    "receiverUplink": "wan2",
                                                    "avgJitter": 0.01,
                                                    "minJitter": 0,
                                                    "maxJitter": 0.25
                                                }
                                            ],
                                            "mosSummaries": [{
                                                    "senderUplink": "wan1",
                                                    "receiverUplink": "wan1",
                                                    "avgMos": 4.1,
                                                    "minMos": 4,
                                                    "maxMos": 4.2
                                                },
                                                {
                                                    "senderUplink": "wan1",
                                                    "receiverUplink": "wan2",
                                                    "avgMos": 4.1,
                                                    "minMos": 4,
                                                    "maxMos": 4.2
                                                }
                                            ]
                                        }]
                                    }
                                ]
                            }
                        }
                    },
                    "summary": "Show VPN history stat for networks in an organization",
                    "tags": [
                        "appliance",
                        "monitor",
                        "vpn",
                        "stats"
                    ],
                    "consumes": [
                        "application/json"
                    ],
                    "produces": [
                        "application/json"
                    ],
                    "schemes": [
                        "https"
                    ],
                    "security": [{
                        "meraki_api_key": []
                    }]
                }
            },
            "type": "infos",
            "name": "What's Updated",
            "group": "appliance",
            "apiDetails": {
                "get": {
                    "description": "Show VPN history stat for networks in an organization",
                    "operationId": "getOrganizationApplianceVpnStats",
                    "parameters": [{
                            "name": "organizationId",
                            "in": "path",
                            "type": "string",
                            "required": true
                        },
                        {
                            "type": "integer",
                            "name": "perPage",
                            "in": "query",
                            "description": "The number of entries per page returned. Acceptable range is 3 - 300. Default is 300."
                        },
                        {
                            "type": "string",
                            "name": "startingAfter",
                            "in": "query",
                            "description": "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
                        },
                        {
                            "type": "string",
                            "name": "endingBefore",
                            "in": "query",
                            "description": "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
                        },
                        {
                            "type": "array",
                            "items": {
                                "type": "string"
                            },
                            "name": "networkIds",
                            "in": "query",
                            "description": "A list of Meraki network IDs to filter results to contain only specified networks. E.g.: networkIds[]=N_12345678&networkIds[]=L_3456"
                        },
                        {
                            "type": "string",
                            "name": "t0",
                            "in": "query",
                            "description": "The beginning of the timespan for the data. The maximum lookback period is 31 days from today."
                        },
                        {
                            "type": "string",
                            "name": "t1",
                            "in": "query",
                            "description": "The end of the timespan for the data. t1 can be a maximum of 31 days after t0."
                        },
                        {
                            "type": "number",
                            "format": "float",
                            "name": "timespan",
                            "in": "query",
                            "description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 31 days. The default is 1 day."
                        }
                    ],
                    "responses": {
                        "200": {
                            "description": "Successful operation",
                            "headers": {
                                "Link": {
                                    "type": "string",
                                    "description": "A comma-separated list of first, last, prev, and next relative links used for subsequent paginated requests."
                                }
                            },
                            "examples": {
                                "application/json": [{
                                        "networkId": "N_12345678",
                                        "networkName": "San Francisco Office",
                                        "merakiVpnPeers": [{
                                            "networkId": "L_23456789",
                                            "networkName": "New York Office",
                                            "usageSummary": {
                                                "receivedInKilobytes": 1234567,
                                                "sentInKilobytes": 2345678
                                            },
                                            "latencySummaries": [{
                                                    "senderUplink": "wan1",
                                                    "receiverUplink": "wan1",
                                                    "avgLatencyMs": 15,
                                                    "minLatencyMs": 10,
                                                    "maxLatencyMs": 30
                                                },
                                                {
                                                    "senderUplink": "wan2",
                                                    "receiverUplink": "wan1",
                                                    "avgLatencyMs": 15,
                                                    "minLatencyMs": 10,
                                                    "maxLatencyMs": 30
                                                }
                                            ],
                                            "lossPercentageSummaries": [{
                                                    "senderUplink": "wan1",
                                                    "receiverUplink": "wan1",
                                                    "avgLossPercentage": 0,
                                                    "minLossPercentage": 0,
                                                    "maxLossPercentage": 0.1
                                                },
                                                {
                                                    "senderUplink": "wan2",
                                                    "receiverUplink": "wan1",
                                                    "avgLossPercentage": 0,
                                                    "minLossPercentage": 0,
                                                    "maxLossPercentage": 0.1
                                                }
                                            ],
                                            "jitterSummaries": [{
                                                    "senderUplink": "wan1",
                                                    "receiverUplink": "wan1",
                                                    "avgJitter": 0.01,
                                                    "minJitter": 0,
                                                    "maxJitter": 0.25
                                                },
                                                {
                                                    "senderUplink": "wan2",
                                                    "receiverUplink": "wan1",
                                                    "avgJitter": 0.01,
                                                    "minJitter": 0,
                                                    "maxJitter": 0.25
                                                }
                                            ],
                                            "mosSummaries": [{
                                                    "senderUplink": "wan1",
                                                    "receiverUplink": "wan1",
                                                    "avgMos": 4.1,
                                                    "minMos": 4,
                                                    "maxMos": 4.2
                                                },
                                                {
                                                    "senderUplink": "wan2",
                                                    "receiverUplink": "wan1",
                                                    "avgMos": 4.1,
                                                    "minMos": 4,
                                                    "maxMos": 4.2
                                                }
                                            ]
                                        }]
                                    },
                                    {
                                        "networkId": "L_23456789",
                                        "networkName": "New York Office",
                                        "merakiVpnPeers": [{
                                            "networkId": "N_12345678",
                                            "networkName": "San Francisco Office",
                                            "usageSummary": {
                                                "receivedInKilobytes": 2345678,
                                                "sentInKilobytes": 1234567
                                            },
                                            "latencySummaries": [{
                                                    "senderUplink": "wan1",
                                                    "receiverUplink": "wan1",
                                                    "avgLatencyMs": 15,
                                                    "minLatencyMs": 10,
                                                    "maxLatencyMs": 30
                                                },
                                                {
                                                    "senderUplink": "wan1",
                                                    "receiverUplink": "wan2",
                                                    "avgLatencyMs": 15,
                                                    "minLatencyMs": 10,
                                                    "maxLatencyMs": 30
                                                }
                                            ],
                                            "lossPercentageSummaries": [{
                                                    "senderUplink": "wan1",
                                                    "receiverUplink": "wan1",
                                                    "avgLossPercentage": 0,
                                                    "minLossPercentage": 0,
                                                    "maxLossPercentage": 0.1
                                                },
                                                {
                                                    "senderUplink": "wan1",
                                                    "receiverUplink": "wan2",
                                                    "avgLossPercentage": 0,
                                                    "minLossPercentage": 0,
                                                    "maxLossPercentage": 0.1
                                                }
                                            ],
                                            "jitterSummaries": [{
                                                    "senderUplink": "wan1",
                                                    "receiverUplink": "wan1",
                                                    "avgJitter": 0.01,
                                                    "minJitter": 0,
                                                    "maxJitter": 0.25
                                                },
                                                {
                                                    "senderUplink": "wan1",
                                                    "receiverUplink": "wan2",
                                                    "avgJitter": 0.01,
                                                    "minJitter": 0,
                                                    "maxJitter": 0.25
                                                }
                                            ],
                                            "mosSummaries": [{
                                                    "senderUplink": "wan1",
                                                    "receiverUplink": "wan1",
                                                    "avgMos": 4.1,
                                                    "minMos": 4,
                                                    "maxMos": 4.2
                                                },
                                                {
                                                    "senderUplink": "wan1",
                                                    "receiverUplink": "wan2",
                                                    "avgMos": 4.1,
                                                    "minMos": 4,
                                                    "maxMos": 4.2
                                                }
                                            ]
                                        }]
                                    }
                                ]
                            }
                        }
                    },
                    "summary": "Show VPN history stat for networks in an organization",
                    "tags": [
                        "appliance",
                        "monitor",
                        "vpn",
                        "stats"
                    ]
                }
            }
        },
        {
            "ruleId": "add-path",
            "message": "`/organizations/{organizationId}/appliance/vpn/statuses` - Added",
            "messageHtml": "Path added   <br>\n      <br>\n      - New endpoint\n      <h4>Show VPN status for networks in an organization</h4>\n      <p>   \n      <b class=\"mr-4 badge get\">GET</b>  <code>/organizations/{organizationId}/appliance/vpn/statuses</code>\n      <br>  \n      <pre><code>[\n    {\n        &quot;networkId&quot;: &quot;N_12345678&quot;,\n        &quot;networkName&quot;: &quot;San Francisco Office&quot;,\n        &quot;deviceSerial&quot;: &quot;Q234-ABCD-1234&quot;,\n        &quot;deviceStatus&quot;: &quot;online&quot;,\n        &quot;uplinks&quot;: [\n            {\n                &quot;interface&quot;: &quot;wan1&quot;,\n                &quot;publicIp&quot;: &quot;1.2.3.4&quot;\n            },\n            {\n                &quot;interface&quot;: &quot;wan2&quot;,\n                &quot;publicIp&quot;: &quot;2.3.4.5&quot;\n            }\n        ],\n        &quot;vpnMode&quot;: &quot;hub&quot;,\n        &quot;exportedSubnets&quot;: [\n            {\n                &quot;subnet&quot;: &quot;192.168.0.0/24&quot;,\n                &quot;name&quot;: &quot;sales-vlan&quot;\n            },\n            {\n                &quot;subnet&quot;: &quot;172.16.0.0/24&quot;,\n                &quot;name&quot;: &quot;engineering-vlan&quot;\n            }\n        ],\n        &quot;merakiVpnPeers&quot;: [\n            {\n                &quot;networkId&quot;: &quot;L_1234&quot;,\n                &quot;networkName&quot;: &quot;New York Office&quot;,\n                &quot;reachability&quot;: &quot;reachable&quot;\n            }\n        ],\n        &quot;thirdPartyVpnPeers&quot;: [\n            {\n                &quot;name&quot;: &quot;London Office&quot;,\n                &quot;publicIp&quot;: &quot;111.222.333.444&quot;,\n                &quot;reachability&quot;: &quot;reachable&quot;\n            }\n        ]\n    },\n    {\n        &quot;networkId&quot;: &quot;L_1234&quot;,\n        &quot;networkName&quot;: &quot;New York Office&quot;,\n        &quot;deviceSerial&quot;: &quot;Q234-EFGH-5678&quot;,\n        &quot;deviceStatus&quot;: &quot;online&quot;,\n        &quot;uplinks&quot;: [\n            {\n                &quot;interface&quot;: &quot;wan1&quot;,\n                &quot;publicIp&quot;: &quot;3.4.5.6&quot;\n            }\n        ],\n        &quot;vpnMode&quot;: &quot;spoke&quot;,\n        &quot;exportedSubnets&quot;: [\n            {\n                &quot;subnet&quot;: &quot;192.168.1.0/24&quot;,\n                &quot;name&quot;: &quot;sales-vlan&quot;\n            },\n            {\n                &quot;subnet&quot;: &quot;172.16.1.0/24&quot;,\n                &quot;name&quot;: &quot;engineering-vlan&quot;\n            }\n        ],\n        &quot;merakiVpnPeers&quot;: [\n            {\n                &quot;networkId&quot;: &quot;N_12345678&quot;,\n                &quot;networkName&quot;: &quot;San Francisco Office&quot;,\n                &quot;reachability&quot;: &quot;reachable&quot;\n            }\n        ],\n        &quot;thirdPartyVpnPeers&quot;: [\n            {\n                &quot;name&quot;: &quot;Tokyo Office&quot;,\n                &quot;publicIp&quot;: &quot;222.333.444.555&quot;,\n                &quot;reachability&quot;: &quot;reachable&quot;\n            }\n        ]\n    }\n]</code></pre>\n      </p>\n      <hr>\n      ",
            "path": "/organizations/{organizationId}/appliance/vpn/statuses",
            "details": {
                "get": {
                    "description": "Show VPN status for networks in an organization",
                    "operationId": "getOrganizationApplianceVpnStatuses",
                    "parameters": {
                        "organizationId": {
                            "name": "organizationId",
                            "in": "path",
                            "type": "string",
                            "required": true
                        },
                        "perPage": {
                            "type": "integer",
                            "name": "perPage",
                            "in": "query",
                            "description": "The number of entries per page returned. Acceptable range is 3 - 300. Default is 300."
                        },
                        "startingAfter": {
                            "type": "string",
                            "name": "startingAfter",
                            "in": "query",
                            "description": "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
                        },
                        "endingBefore": {
                            "type": "string",
                            "name": "endingBefore",
                            "in": "query",
                            "description": "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
                        },
                        "networkIds": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            },
                            "name": "networkIds",
                            "in": "query",
                            "description": "A list of Meraki network IDs to filter results to contain only specified networks. E.g.: networkIds[]=N_12345678&networkIds[]=L_3456"
                        }
                    },
                    "responses": {
                        "200": {
                            "description": "Successful operation",
                            "headers": {
                                "Link": {
                                    "type": "string",
                                    "description": "A comma-separated list of first, last, prev, and next relative links used for subsequent paginated requests."
                                }
                            },
                            "examples": {
                                "application/json": [{
                                        "networkId": "N_12345678",
                                        "networkName": "San Francisco Office",
                                        "deviceSerial": "Q234-ABCD-1234",
                                        "deviceStatus": "online",
                                        "uplinks": [{
                                                "interface": "wan1",
                                                "publicIp": "1.2.3.4"
                                            },
                                            {
                                                "interface": "wan2",
                                                "publicIp": "2.3.4.5"
                                            }
                                        ],
                                        "vpnMode": "hub",
                                        "exportedSubnets": [{
                                                "subnet": "192.168.0.0/24",
                                                "name": "sales-vlan"
                                            },
                                            {
                                                "subnet": "172.16.0.0/24",
                                                "name": "engineering-vlan"
                                            }
                                        ],
                                        "merakiVpnPeers": [{
                                            "networkId": "L_1234",
                                            "networkName": "New York Office",
                                            "reachability": "reachable"
                                        }],
                                        "thirdPartyVpnPeers": [{
                                            "name": "London Office",
                                            "publicIp": "111.222.333.444",
                                            "reachability": "reachable"
                                        }]
                                    },
                                    {
                                        "networkId": "L_1234",
                                        "networkName": "New York Office",
                                        "deviceSerial": "Q234-EFGH-5678",
                                        "deviceStatus": "online",
                                        "uplinks": [{
                                            "interface": "wan1",
                                            "publicIp": "3.4.5.6"
                                        }],
                                        "vpnMode": "spoke",
                                        "exportedSubnets": [{
                                                "subnet": "192.168.1.0/24",
                                                "name": "sales-vlan"
                                            },
                                            {
                                                "subnet": "172.16.1.0/24",
                                                "name": "engineering-vlan"
                                            }
                                        ],
                                        "merakiVpnPeers": [{
                                            "networkId": "N_12345678",
                                            "networkName": "San Francisco Office",
                                            "reachability": "reachable"
                                        }],
                                        "thirdPartyVpnPeers": [{
                                            "name": "Tokyo Office",
                                            "publicIp": "222.333.444.555",
                                            "reachability": "reachable"
                                        }]
                                    }
                                ]
                            }
                        }
                    },
                    "summary": "Show VPN status for networks in an organization",
                    "tags": [
                        "appliance",
                        "monitor",
                        "vpn",
                        "statuses"
                    ],
                    "consumes": [
                        "application/json"
                    ],
                    "produces": [
                        "application/json"
                    ],
                    "schemes": [
                        "https"
                    ],
                    "security": [{
                        "meraki_api_key": []
                    }]
                }
            },
            "type": "infos",
            "name": "What's Updated",
            "group": "appliance",
            "apiDetails": {
                "get": {
                    "description": "Show VPN status for networks in an organization",
                    "operationId": "getOrganizationApplianceVpnStatuses",
                    "parameters": [{
                            "name": "organizationId",
                            "in": "path",
                            "type": "string",
                            "required": true
                        },
                        {
                            "type": "integer",
                            "name": "perPage",
                            "in": "query",
                            "description": "The number of entries per page returned. Acceptable range is 3 - 300. Default is 300."
                        },
                        {
                            "type": "string",
                            "name": "startingAfter",
                            "in": "query",
                            "description": "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
                        },
                        {
                            "type": "string",
                            "name": "endingBefore",
                            "in": "query",
                            "description": "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
                        },
                        {
                            "type": "array",
                            "items": {
                                "type": "string"
                            },
                            "name": "networkIds",
                            "in": "query",
                            "description": "A list of Meraki network IDs to filter results to contain only specified networks. E.g.: networkIds[]=N_12345678&networkIds[]=L_3456"
                        }
                    ],
                    "responses": {
                        "200": {
                            "description": "Successful operation",
                            "headers": {
                                "Link": {
                                    "type": "string",
                                    "description": "A comma-separated list of first, last, prev, and next relative links used for subsequent paginated requests."
                                }
                            },
                            "examples": {
                                "application/json": [{
                                        "networkId": "N_12345678",
                                        "networkName": "San Francisco Office",
                                        "deviceSerial": "Q234-ABCD-1234",
                                        "deviceStatus": "online",
                                        "uplinks": [{
                                                "interface": "wan1",
                                                "publicIp": "1.2.3.4"
                                            },
                                            {
                                                "interface": "wan2",
                                                "publicIp": "2.3.4.5"
                                            }
                                        ],
                                        "vpnMode": "hub",
                                        "exportedSubnets": [{
                                                "subnet": "192.168.0.0/24",
                                                "name": "sales-vlan"
                                            },
                                            {
                                                "subnet": "172.16.0.0/24",
                                                "name": "engineering-vlan"
                                            }
                                        ],
                                        "merakiVpnPeers": [{
                                            "networkId": "L_1234",
                                            "networkName": "New York Office",
                                            "reachability": "reachable"
                                        }],
                                        "thirdPartyVpnPeers": [{
                                            "name": "London Office",
                                            "publicIp": "111.222.333.444",
                                            "reachability": "reachable"
                                        }]
                                    },
                                    {
                                        "networkId": "L_1234",
                                        "networkName": "New York Office",
                                        "deviceSerial": "Q234-EFGH-5678",
                                        "deviceStatus": "online",
                                        "uplinks": [{
                                            "interface": "wan1",
                                            "publicIp": "3.4.5.6"
                                        }],
                                        "vpnMode": "spoke",
                                        "exportedSubnets": [{
                                                "subnet": "192.168.1.0/24",
                                                "name": "sales-vlan"
                                            },
                                            {
                                                "subnet": "172.16.1.0/24",
                                                "name": "engineering-vlan"
                                            }
                                        ],
                                        "merakiVpnPeers": [{
                                            "networkId": "N_12345678",
                                            "networkName": "San Francisco Office",
                                            "reachability": "reachable"
                                        }],
                                        "thirdPartyVpnPeers": [{
                                            "name": "Tokyo Office",
                                            "publicIp": "222.333.444.555",
                                            "reachability": "reachable"
                                        }]
                                    }
                                ]
                            }
                        }
                    },
                    "summary": "Show VPN status for networks in an organization",
                    "tags": [
                        "appliance",
                        "monitor",
                        "vpn",
                        "statuses"
                    ]
                }
            }
        },
        {
            "ruleId": "add-path",
            "message": "`/organizations/{organizationId}/configTemplates/{configTemplateId}/switch/profiles/{profileId}/ports` - Added",
            "messageHtml": "Path added   <br>\n      <br>\n      - New endpoint\n      <h4>Return all the ports of a switch profile</h4>\n      <p>   \n      <b class=\"mr-4 badge get\">GET</b>  <code>/organizations/{organizationId}/configTemplates/{configTemplateId}/switch/profiles/{profileId}/ports</code>\n      <br>  \n      <pre><code>{\n    &quot;portId&quot;: &quot;1&quot;,\n    &quot;name&quot;: &quot;My switch port&quot;,\n    &quot;tags&quot;: [\n        &quot;tag1&quot;,\n        &quot;tag2&quot;\n    ],\n    &quot;enabled&quot;: true,\n    &quot;poeEnabled&quot;: true,\n    &quot;type&quot;: &quot;access&quot;,\n    &quot;vlan&quot;: 10,\n    &quot;voiceVlan&quot;: 20,\n    &quot;isolationEnabled&quot;: false,\n    &quot;rstpEnabled&quot;: true,\n    &quot;stpGuard&quot;: &quot;disabled&quot;,\n    &quot;linkNegotiation&quot;: &quot;Auto negotiate&quot;,\n    &quot;portScheduleId&quot;: &quot;1234&quot;,\n    &quot;udld&quot;: &quot;Alert only&quot;,\n    &quot;accessPolicyType&quot;: &quot;Sticky MAC allow list&quot;,\n    &quot;stickyMacAllowList&quot;: [\n        &quot;34:56:fe:ce:8e:b0&quot;,\n        &quot;34:56:fe:ce:8e:b1&quot;\n    ],\n    &quot;stickyMacAllowListLimit&quot;: 5,\n    &quot;stormControlEnabled&quot;: true\n}</code></pre>\n      </p>\n      <hr>\n      ",
            "path": "/organizations/{organizationId}/configTemplates/{configTemplateId}/switch/profiles/{profileId}/ports",
            "details": {
                "get": {
                    "description": "Return all the ports of a switch profile",
                    "operationId": "getOrganizationConfigTemplateSwitchProfilePorts",
                    "parameters": {
                        "organizationId": {
                            "name": "organizationId",
                            "in": "path",
                            "type": "string",
                            "required": true
                        },
                        "configTemplateId": {
                            "name": "configTemplateId",
                            "in": "path",
                            "type": "string",
                            "required": true
                        },
                        "profileId": {
                            "name": "profileId",
                            "in": "path",
                            "type": "string",
                            "required": true
                        }
                    },
                    "responses": {
                        "200": {
                            "description": "Successful operation",
                            "examples": {
                                "application/json": {
                                    "portId": "1",
                                    "name": "My switch port",
                                    "tags": [
                                        "tag1",
                                        "tag2"
                                    ],
                                    "enabled": true,
                                    "poeEnabled": true,
                                    "type": "access",
                                    "vlan": 10,
                                    "voiceVlan": 20,
                                    "isolationEnabled": false,
                                    "rstpEnabled": true,
                                    "stpGuard": "disabled",
                                    "linkNegotiation": "Auto negotiate",
                                    "portScheduleId": "1234",
                                    "udld": "Alert only",
                                    "accessPolicyType": "Sticky MAC allow list",
                                    "stickyMacAllowList": [
                                        "34:56:fe:ce:8e:b0",
                                        "34:56:fe:ce:8e:b1"
                                    ],
                                    "stickyMacAllowListLimit": 5,
                                    "stormControlEnabled": true
                                }
                            }
                        }
                    },
                    "summary": "Return all the ports of a switch profile",
                    "tags": [
                        "switch",
                        "configure",
                        "configTemplates",
                        "profiles",
                        "ports"
                    ],
                    "consumes": [
                        "application/json"
                    ],
                    "produces": [
                        "application/json"
                    ],
                    "schemes": [
                        "https"
                    ],
                    "security": [{
                        "meraki_api_key": []
                    }]
                }
            },
            "type": "infos",
            "name": "What's Updated",
            "group": "switch",
            "apiDetails": {
                "get": {
                    "description": "Return all the ports of a switch profile",
                    "operationId": "getOrganizationConfigTemplateSwitchProfilePorts",
                    "parameters": [{
                            "name": "organizationId",
                            "in": "path",
                            "type": "string",
                            "required": true
                        },
                        {
                            "name": "configTemplateId",
                            "in": "path",
                            "type": "string",
                            "required": true
                        },
                        {
                            "name": "profileId",
                            "in": "path",
                            "type": "string",
                            "required": true
                        }
                    ],
                    "responses": {
                        "200": {
                            "description": "Successful operation",
                            "examples": {
                                "application/json": {
                                    "portId": "1",
                                    "name": "My switch port",
                                    "tags": [
                                        "tag1",
                                        "tag2"
                                    ],
                                    "enabled": true,
                                    "poeEnabled": true,
                                    "type": "access",
                                    "vlan": 10,
                                    "voiceVlan": 20,
                                    "isolationEnabled": false,
                                    "rstpEnabled": true,
                                    "stpGuard": "disabled",
                                    "linkNegotiation": "Auto negotiate",
                                    "portScheduleId": "1234",
                                    "udld": "Alert only",
                                    "accessPolicyType": "Sticky MAC allow list",
                                    "stickyMacAllowList": [
                                        "34:56:fe:ce:8e:b0",
                                        "34:56:fe:ce:8e:b1"
                                    ],
                                    "stickyMacAllowListLimit": 5,
                                    "stormControlEnabled": true
                                }
                            }
                        }
                    },
                    "summary": "Return all the ports of a switch profile",
                    "tags": [
                        "switch",
                        "configure",
                        "configTemplates",
                        "profiles",
                        "ports"
                    ]
                }
            }
        },
        {
            "ruleId": "add-path",
            "message": "`/organizations/{organizationId}/configTemplates/{configTemplateId}/switch/profiles/{profileId}/ports/{portId}` - Added",
            "messageHtml": "Path added   <br>\n      <br>\n      - New endpoint\n      <h4>Return a switch profile port</h4>\n      <p>   \n      <b class=\"mr-4 badge get\">GET</b>  <code>/organizations/{organizationId}/configTemplates/{configTemplateId}/switch/profiles/{profileId}/ports/{portId}</code>\n      <br>  \n      <pre><code>{\n    &quot;portId&quot;: &quot;1&quot;,\n    &quot;name&quot;: &quot;My switch port&quot;,\n    &quot;tags&quot;: [\n        &quot;tag1&quot;,\n        &quot;tag2&quot;\n    ],\n    &quot;enabled&quot;: true,\n    &quot;poeEnabled&quot;: true,\n    &quot;type&quot;: &quot;access&quot;,\n    &quot;vlan&quot;: 10,\n    &quot;voiceVlan&quot;: 20,\n    &quot;isolationEnabled&quot;: false,\n    &quot;rstpEnabled&quot;: true,\n    &quot;stpGuard&quot;: &quot;disabled&quot;,\n    &quot;linkNegotiation&quot;: &quot;Auto negotiate&quot;,\n    &quot;portScheduleId&quot;: &quot;1234&quot;,\n    &quot;udld&quot;: &quot;Alert only&quot;,\n    &quot;accessPolicyType&quot;: &quot;Sticky MAC allow list&quot;,\n    &quot;stickyMacAllowList&quot;: [\n        &quot;34:56:fe:ce:8e:b0&quot;,\n        &quot;34:56:fe:ce:8e:b1&quot;\n    ],\n    &quot;stickyMacAllowListLimit&quot;: 5,\n    &quot;stormControlEnabled&quot;: true\n}</code></pre>\n      </p>\n      <hr>\n      \n      <br>\n      - New endpoint\n      <h4>Update a switch profile port</h4>\n      <p>   \n      <b class=\"mr-4 badge put\">PUT</b>  <code>/organizations/{organizationId}/configTemplates/{configTemplateId}/switch/profiles/{profileId}/ports/{portId}</code>\n      <br>  \n      <pre><code>{\n    &quot;portId&quot;: &quot;1&quot;,\n    &quot;name&quot;: &quot;My switch port&quot;,\n    &quot;tags&quot;: [\n        &quot;tag1&quot;,\n        &quot;tag2&quot;\n    ],\n    &quot;enabled&quot;: true,\n    &quot;poeEnabled&quot;: true,\n    &quot;type&quot;: &quot;access&quot;,\n    &quot;vlan&quot;: 10,\n    &quot;voiceVlan&quot;: 20,\n    &quot;isolationEnabled&quot;: false,\n    &quot;rstpEnabled&quot;: true,\n    &quot;stpGuard&quot;: &quot;disabled&quot;,\n    &quot;linkNegotiation&quot;: &quot;Auto negotiate&quot;,\n    &quot;portScheduleId&quot;: &quot;1234&quot;,\n    &quot;udld&quot;: &quot;Alert only&quot;,\n    &quot;accessPolicyType&quot;: &quot;Sticky MAC allow list&quot;,\n    &quot;stickyMacAllowList&quot;: [\n        &quot;34:56:fe:ce:8e:b0&quot;,\n        &quot;34:56:fe:ce:8e:b1&quot;\n    ],\n    &quot;stickyMacAllowListLimit&quot;: 5,\n    &quot;stormControlEnabled&quot;: true\n}</code></pre>\n      </p>\n      <hr>\n      ",
            "path": "/organizations/{organizationId}/configTemplates/{configTemplateId}/switch/profiles/{profileId}/ports/{portId}",
            "details": {
                "get": {
                    "description": "Return a switch profile port",
                    "operationId": "getOrganizationConfigTemplateSwitchProfilePort",
                    "parameters": {
                        "organizationId": {
                            "name": "organizationId",
                            "in": "path",
                            "type": "string",
                            "required": true
                        },
                        "configTemplateId": {
                            "name": "configTemplateId",
                            "in": "path",
                            "type": "string",
                            "required": true
                        },
                        "profileId": {
                            "name": "profileId",
                            "in": "path",
                            "type": "string",
                            "required": true
                        },
                        "portId": {
                            "name": "portId",
                            "in": "path",
                            "type": "string",
                            "required": true
                        }
                    },
                    "responses": {
                        "200": {
                            "description": "Successful operation",
                            "examples": {
                                "application/json": {
                                    "portId": "1",
                                    "name": "My switch port",
                                    "tags": [
                                        "tag1",
                                        "tag2"
                                    ],
                                    "enabled": true,
                                    "poeEnabled": true,
                                    "type": "access",
                                    "vlan": 10,
                                    "voiceVlan": 20,
                                    "isolationEnabled": false,
                                    "rstpEnabled": true,
                                    "stpGuard": "disabled",
                                    "linkNegotiation": "Auto negotiate",
                                    "portScheduleId": "1234",
                                    "udld": "Alert only",
                                    "accessPolicyType": "Sticky MAC allow list",
                                    "stickyMacAllowList": [
                                        "34:56:fe:ce:8e:b0",
                                        "34:56:fe:ce:8e:b1"
                                    ],
                                    "stickyMacAllowListLimit": 5,
                                    "stormControlEnabled": true
                                }
                            }
                        }
                    },
                    "summary": "Return a switch profile port",
                    "tags": [
                        "switch",
                        "configure",
                        "configTemplates",
                        "profiles",
                        "ports"
                    ],
                    "consumes": [
                        "application/json"
                    ],
                    "produces": [
                        "application/json"
                    ],
                    "schemes": [
                        "https"
                    ],
                    "security": [{
                        "meraki_api_key": []
                    }]
                },
                "put": {
                    "description": "Update a switch profile port",
                    "operationId": "updateOrganizationConfigTemplateSwitchProfilePort",
                    "parameters": {
                        "organizationId": {
                            "name": "organizationId",
                            "in": "path",
                            "type": "string",
                            "required": true
                        },
                        "configTemplateId": {
                            "name": "configTemplateId",
                            "in": "path",
                            "type": "string",
                            "required": true
                        },
                        "profileId": {
                            "name": "profileId",
                            "in": "path",
                            "type": "string",
                            "required": true
                        },
                        "portId": {
                            "name": "portId",
                            "in": "path",
                            "type": "string",
                            "required": true
                        },
                        "updateOrganizationConfigTemplateSwitchProfilePort": {
                            "name": "updateOrganizationConfigTemplateSwitchProfilePort",
                            "in": "body",
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "description": "The name of the switch profile port"
                                    },
                                    "tags": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        },
                                        "description": "The list of tags of the switch profile port"
                                    },
                                    "enabled": {
                                        "type": "boolean",
                                        "description": "The status of the switch profile port"
                                    },
                                    "type": {
                                        "type": "string",
                                        "enum": [
                                            "trunk",
                                            "access"
                                        ],
                                        "description": "The type of the switch profile port ('trunk' or 'access')"
                                    },
                                    "vlan": {
                                        "type": "integer",
                                        "description": "The VLAN of the switch profile port. A null value will clear the value set for trunk ports."
                                    },
                                    "voiceVlan": {
                                        "type": "integer",
                                        "description": "The voice VLAN of the switch profile port. Only applicable to access ports"
                                    },
                                    "allowedVlans": {
                                        "type": "string",
                                        "description": "The VLANs allowed on the switch profile port. Only applicable to trunk ports"
                                    },
                                    "poeEnabled": {
                                        "type": "boolean",
                                        "description": "The PoE status of the switch profile port"
                                    },
                                    "isolationEnabled": {
                                        "type": "boolean",
                                        "description": "The isolation status of the switch profile port"
                                    },
                                    "rstpEnabled": {
                                        "type": "boolean",
                                        "description": "The rapid spanning tree protocol status"
                                    },
                                    "stpGuard": {
                                        "type": "string",
                                        "enum": [
                                            "disabled",
                                            "root guard",
                                            "bpdu guard",
                                            "loop guard"
                                        ],
                                        "description": "The state of the STP guard ('disabled', 'root guard', 'bpdu guard' or 'loop guard')"
                                    },
                                    "linkNegotiation": {
                                        "type": "string",
                                        "description": "The link speed for the switch profile port"
                                    },
                                    "portScheduleId": {
                                        "type": "string",
                                        "description": "The ID of the port schedule. A value of null will clear the port schedule."
                                    },
                                    "udld": {
                                        "type": "string",
                                        "enum": [
                                            "Alert only",
                                            "Enforce"
                                        ],
                                        "description": "The action to take when Unidirectional Link is detected (Alert only, Enforce). Default configuration is Alert only."
                                    },
                                    "accessPolicyType": {
                                        "type": "string",
                                        "enum": [
                                            "Open",
                                            "Custom access policy",
                                            "MAC allow list",
                                            "Sticky MAC allow list"
                                        ],
                                        "description": "The type of the access policy of the switch profile port. Only applicable to access ports. Can be one of 'Open', 'Custom access policy', 'MAC allow list' or 'Sticky MAC allow list'"
                                    },
                                    "accessPolicyNumber": {
                                        "type": "integer",
                                        "description": "The number of a custom access policy to configure on the switch profile port. Only applicable when 'accessPolicyType' is 'Custom access policy'"
                                    },
                                    "macAllowList": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        },
                                        "description": "Only devices with MAC addresses specified in this list will have access to this port. Up to 20 MAC addresses can be defined. Only applicable when 'accessPolicyType' is 'MAC allow list'"
                                    },
                                    "stickyMacAllowList": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        },
                                        "description": "The initial list of MAC addresses for sticky Mac allow list. Only applicable when 'accessPolicyType' is 'Sticky MAC allow list'"
                                    },
                                    "stickyMacAllowListLimit": {
                                        "type": "integer",
                                        "description": "The maximum number of MAC addresses for sticky MAC allow list. Only applicable when 'accessPolicyType' is 'Sticky MAC allow list'"
                                    },
                                    "stormControlEnabled": {
                                        "type": "boolean",
                                        "description": "The storm control status of the switch profile port"
                                    },
                                    "flexibleStackingEnabled": {
                                        "type": "boolean",
                                        "description": "For supported switches (e.g. MS420/MS425), whether or not the port has flexible stacking enabled."
                                    }
                                },
                                "example": {
                                    "name": "My switch port",
                                    "tags": [
                                        "tag1",
                                        "tag2"
                                    ],
                                    "enabled": true,
                                    "poeEnabled": true,
                                    "type": "access",
                                    "vlan": 10,
                                    "voiceVlan": 20,
                                    "isolationEnabled": false,
                                    "rstpEnabled": true,
                                    "stpGuard": "disabled",
                                    "linkNegotiation": "Auto negotiate",
                                    "portScheduleId": "1234",
                                    "udld": "Alert only",
                                    "accessPolicyType": "Sticky MAC allow list",
                                    "stickyMacAllowList": [
                                        "34:56:fe:ce:8e:b0",
                                        "34:56:fe:ce:8e:b1"
                                    ],
                                    "stickyMacAllowListLimit": 5,
                                    "stormControlEnabled": true
                                }
                            }
                        }
                    },
                    "responses": {
                        "200": {
                            "description": "Successful operation",
                            "examples": {
                                "application/json": {
                                    "portId": "1",
                                    "name": "My switch port",
                                    "tags": [
                                        "tag1",
                                        "tag2"
                                    ],
                                    "enabled": true,
                                    "poeEnabled": true,
                                    "type": "access",
                                    "vlan": 10,
                                    "voiceVlan": 20,
                                    "isolationEnabled": false,
                                    "rstpEnabled": true,
                                    "stpGuard": "disabled",
                                    "linkNegotiation": "Auto negotiate",
                                    "portScheduleId": "1234",
                                    "udld": "Alert only",
                                    "accessPolicyType": "Sticky MAC allow list",
                                    "stickyMacAllowList": [
                                        "34:56:fe:ce:8e:b0",
                                        "34:56:fe:ce:8e:b1"
                                    ],
                                    "stickyMacAllowListLimit": 5,
                                    "stormControlEnabled": true
                                }
                            }
                        }
                    },
                    "summary": "Update a switch profile port",
                    "tags": [
                        "switch",
                        "configure",
                        "configTemplates",
                        "profiles",
                        "ports"
                    ],
                    "consumes": [
                        "application/json"
                    ],
                    "produces": [
                        "application/json"
                    ],
                    "schemes": [
                        "https"
                    ],
                    "security": [{
                        "meraki_api_key": []
                    }]
                }
            },
            "type": "infos",
            "name": "What's Updated",
            "group": "switch",
            "apiDetails": {
                "get": {
                    "description": "Return a switch profile port",
                    "operationId": "getOrganizationConfigTemplateSwitchProfilePort",
                    "parameters": [{
                            "name": "organizationId",
                            "in": "path",
                            "type": "string",
                            "required": true
                        },
                        {
                            "name": "configTemplateId",
                            "in": "path",
                            "type": "string",
                            "required": true
                        },
                        {
                            "name": "profileId",
                            "in": "path",
                            "type": "string",
                            "required": true
                        },
                        {
                            "name": "portId",
                            "in": "path",
                            "type": "string",
                            "required": true
                        }
                    ],
                    "responses": {
                        "200": {
                            "description": "Successful operation",
                            "examples": {
                                "application/json": {
                                    "portId": "1",
                                    "name": "My switch port",
                                    "tags": [
                                        "tag1",
                                        "tag2"
                                    ],
                                    "enabled": true,
                                    "poeEnabled": true,
                                    "type": "access",
                                    "vlan": 10,
                                    "voiceVlan": 20,
                                    "isolationEnabled": false,
                                    "rstpEnabled": true,
                                    "stpGuard": "disabled",
                                    "linkNegotiation": "Auto negotiate",
                                    "portScheduleId": "1234",
                                    "udld": "Alert only",
                                    "accessPolicyType": "Sticky MAC allow list",
                                    "stickyMacAllowList": [
                                        "34:56:fe:ce:8e:b0",
                                        "34:56:fe:ce:8e:b1"
                                    ],
                                    "stickyMacAllowListLimit": 5,
                                    "stormControlEnabled": true
                                }
                            }
                        }
                    },
                    "summary": "Return a switch profile port",
                    "tags": [
                        "switch",
                        "configure",
                        "configTemplates",
                        "profiles",
                        "ports"
                    ]
                },
                "put": {
                    "description": "Update a switch profile port",
                    "operationId": "updateOrganizationConfigTemplateSwitchProfilePort",
                    "parameters": [{
                            "name": "organizationId",
                            "in": "path",
                            "type": "string",
                            "required": true
                        },
                        {
                            "name": "configTemplateId",
                            "in": "path",
                            "type": "string",
                            "required": true
                        },
                        {
                            "name": "profileId",
                            "in": "path",
                            "type": "string",
                            "required": true
                        },
                        {
                            "name": "portId",
                            "in": "path",
                            "type": "string",
                            "required": true
                        },
                        {
                            "name": "updateOrganizationConfigTemplateSwitchProfilePort",
                            "in": "body",
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "description": "The name of the switch profile port"
                                    },
                                    "tags": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        },
                                        "description": "The list of tags of the switch profile port"
                                    },
                                    "enabled": {
                                        "type": "boolean",
                                        "description": "The status of the switch profile port"
                                    },
                                    "type": {
                                        "type": "string",
                                        "enum": [
                                            "trunk",
                                            "access"
                                        ],
                                        "description": "The type of the switch profile port ('trunk' or 'access')"
                                    },
                                    "vlan": {
                                        "type": "integer",
                                        "description": "The VLAN of the switch profile port. A null value will clear the value set for trunk ports."
                                    },
                                    "voiceVlan": {
                                        "type": "integer",
                                        "description": "The voice VLAN of the switch profile port. Only applicable to access ports"
                                    },
                                    "allowedVlans": {
                                        "type": "string",
                                        "description": "The VLANs allowed on the switch profile port. Only applicable to trunk ports"
                                    },
                                    "poeEnabled": {
                                        "type": "boolean",
                                        "description": "The PoE status of the switch profile port"
                                    },
                                    "isolationEnabled": {
                                        "type": "boolean",
                                        "description": "The isolation status of the switch profile port"
                                    },
                                    "rstpEnabled": {
                                        "type": "boolean",
                                        "description": "The rapid spanning tree protocol status"
                                    },
                                    "stpGuard": {
                                        "type": "string",
                                        "enum": [
                                            "disabled",
                                            "root guard",
                                            "bpdu guard",
                                            "loop guard"
                                        ],
                                        "description": "The state of the STP guard ('disabled', 'root guard', 'bpdu guard' or 'loop guard')"
                                    },
                                    "linkNegotiation": {
                                        "type": "string",
                                        "description": "The link speed for the switch profile port"
                                    },
                                    "portScheduleId": {
                                        "type": "string",
                                        "description": "The ID of the port schedule. A value of null will clear the port schedule."
                                    },
                                    "udld": {
                                        "type": "string",
                                        "enum": [
                                            "Alert only",
                                            "Enforce"
                                        ],
                                        "description": "The action to take when Unidirectional Link is detected (Alert only, Enforce). Default configuration is Alert only."
                                    },
                                    "accessPolicyType": {
                                        "type": "string",
                                        "enum": [
                                            "Open",
                                            "Custom access policy",
                                            "MAC allow list",
                                            "Sticky MAC allow list"
                                        ],
                                        "description": "The type of the access policy of the switch profile port. Only applicable to access ports. Can be one of 'Open', 'Custom access policy', 'MAC allow list' or 'Sticky MAC allow list'"
                                    },
                                    "accessPolicyNumber": {
                                        "type": "integer",
                                        "description": "The number of a custom access policy to configure on the switch profile port. Only applicable when 'accessPolicyType' is 'Custom access policy'"
                                    },
                                    "macAllowList": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        },
                                        "description": "Only devices with MAC addresses specified in this list will have access to this port. Up to 20 MAC addresses can be defined. Only applicable when 'accessPolicyType' is 'MAC allow list'"
                                    },
                                    "stickyMacAllowList": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        },
                                        "description": "The initial list of MAC addresses for sticky Mac allow list. Only applicable when 'accessPolicyType' is 'Sticky MAC allow list'"
                                    },
                                    "stickyMacAllowListLimit": {
                                        "type": "integer",
                                        "description": "The maximum number of MAC addresses for sticky MAC allow list. Only applicable when 'accessPolicyType' is 'Sticky MAC allow list'"
                                    },
                                    "stormControlEnabled": {
                                        "type": "boolean",
                                        "description": "The storm control status of the switch profile port"
                                    },
                                    "flexibleStackingEnabled": {
                                        "type": "boolean",
                                        "description": "For supported switches (e.g. MS420/MS425), whether or not the port has flexible stacking enabled."
                                    }
                                },
                                "example": {
                                    "name": "My switch port",
                                    "tags": [
                                        "tag1",
                                        "tag2"
                                    ],
                                    "enabled": true,
                                    "poeEnabled": true,
                                    "type": "access",
                                    "vlan": 10,
                                    "voiceVlan": 20,
                                    "isolationEnabled": false,
                                    "rstpEnabled": true,
                                    "stpGuard": "disabled",
                                    "linkNegotiation": "Auto negotiate",
                                    "portScheduleId": "1234",
                                    "udld": "Alert only",
                                    "accessPolicyType": "Sticky MAC allow list",
                                    "stickyMacAllowList": [
                                        "34:56:fe:ce:8e:b0",
                                        "34:56:fe:ce:8e:b1"
                                    ],
                                    "stickyMacAllowListLimit": 5,
                                    "stormControlEnabled": true
                                }
                            }
                        }
                    ],
                    "responses": {
                        "200": {
                            "description": "Successful operation",
                            "examples": {
                                "application/json": {
                                    "portId": "1",
                                    "name": "My switch port",
                                    "tags": [
                                        "tag1",
                                        "tag2"
                                    ],
                                    "enabled": true,
                                    "poeEnabled": true,
                                    "type": "access",
                                    "vlan": 10,
                                    "voiceVlan": 20,
                                    "isolationEnabled": false,
                                    "rstpEnabled": true,
                                    "stpGuard": "disabled",
                                    "linkNegotiation": "Auto negotiate",
                                    "portScheduleId": "1234",
                                    "udld": "Alert only",
                                    "accessPolicyType": "Sticky MAC allow list",
                                    "stickyMacAllowList": [
                                        "34:56:fe:ce:8e:b0",
                                        "34:56:fe:ce:8e:b1"
                                    ],
                                    "stickyMacAllowListLimit": 5,
                                    "stormControlEnabled": true
                                }
                            }
                        }
                    },
                    "summary": "Update a switch profile port",
                    "tags": [
                        "switch",
                        "configure",
                        "configTemplates",
                        "profiles",
                        "ports"
                    ]
                }
            }
        },
        {
            "ruleId": "add-path",
            "message": "`/organizations/{organizationId}/inventoryDevices` - Added",
            "messageHtml": "Path added   <br>\n      <br>\n      - New endpoint\n      <h4>Return the device inventory for an organization</h4>\n      <p>   \n      <b class=\"mr-4 badge get\">GET</b>  <code>/organizations/{organizationId}/inventoryDevices</code>\n      <br>  \n      <pre><code>[\n    {\n        &quot;mac&quot;: &quot;00:11:22:33:44:55&quot;,\n        &quot;serial&quot;: &quot;Q234-ABCD-5678&quot;,\n        &quot;name&quot;: &quot;My AP&quot;,\n        &quot;model&quot;: &quot;MR34&quot;,\n        &quot;networkId&quot;: &quot;N_24329156&quot;,\n        &quot;orderNumber&quot;: &quot;4C1234567&quot;,\n        &quot;claimedAt&quot;: &quot;2018-02-11T00:00:00.090210Z&quot;,\n        &quot;licenseExpirationDate&quot;: &quot;2020-05-02T10:52:44.012345Z&quot;\n    }\n]</code></pre>\n      </p>\n      <hr>\n      ",
            "path": "/organizations/{organizationId}/inventoryDevices",
            "details": {
                "get": {
                    "description": "Return the device inventory for an organization",
                    "operationId": "getOrganizationInventoryDevices",
                    "parameters": {
                        "organizationId": {
                            "name": "organizationId",
                            "in": "path",
                            "type": "string",
                            "required": true
                        },
                        "perPage": {
                            "type": "integer",
                            "name": "perPage",
                            "in": "query",
                            "description": "The number of entries per page returned. Acceptable range is 3 - 1000. Default is 1000."
                        },
                        "startingAfter": {
                            "type": "string",
                            "name": "startingAfter",
                            "in": "query",
                            "description": "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
                        },
                        "endingBefore": {
                            "type": "string",
                            "name": "endingBefore",
                            "in": "query",
                            "description": "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
                        },
                        "usedState": {
                            "type": "string",
                            "enum": [
                                "used",
                                "unused"
                            ],
                            "name": "usedState",
                            "in": "query",
                            "description": "Filter results by used or unused inventory. Accepted values are \"used\" or \"unused\"."
                        },
                        "search": {
                            "type": "string",
                            "name": "search",
                            "in": "query",
                            "description": "Search for devices in inventory based on serial number, mac address, or model."
                        }
                    },
                    "responses": {
                        "200": {
                            "description": "Successful operation",
                            "headers": {
                                "Link": {
                                    "type": "string",
                                    "description": "A comma-separated list of first, last, prev, and next relative links used for subsequent paginated requests."
                                }
                            },
                            "examples": {
                                "application/json": [{
                                    "mac": "00:11:22:33:44:55",
                                    "serial": "Q234-ABCD-5678",
                                    "name": "My AP",
                                    "model": "MR34",
                                    "networkId": "N_24329156",
                                    "orderNumber": "4C1234567",
                                    "claimedAt": "2018-02-11T00:00:00.090210Z",
                                    "licenseExpirationDate": "2020-05-02T10:52:44.012345Z"
                                }]
                            }
                        }
                    },
                    "summary": "Return the device inventory for an organization",
                    "tags": [
                        "organizations",
                        "configure",
                        "inventoryDevices"
                    ],
                    "consumes": [
                        "application/json"
                    ],
                    "produces": [
                        "application/json"
                    ],
                    "schemes": [
                        "https"
                    ],
                    "security": [{
                        "meraki_api_key": []
                    }]
                }
            },
            "type": "infos",
            "name": "What's Updated",
            "group": "organizations",
            "apiDetails": {
                "get": {
                    "description": "Return the device inventory for an organization",
                    "operationId": "getOrganizationInventoryDevices",
                    "parameters": [{
                            "name": "organizationId",
                            "in": "path",
                            "type": "string",
                            "required": true
                        },
                        {
                            "type": "integer",
                            "name": "perPage",
                            "in": "query",
                            "description": "The number of entries per page returned. Acceptable range is 3 - 1000. Default is 1000."
                        },
                        {
                            "type": "string",
                            "name": "startingAfter",
                            "in": "query",
                            "description": "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
                        },
                        {
                            "type": "string",
                            "name": "endingBefore",
                            "in": "query",
                            "description": "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
                        },
                        {
                            "type": "string",
                            "enum": [
                                "used",
                                "unused"
                            ],
                            "name": "usedState",
                            "in": "query",
                            "description": "Filter results by used or unused inventory. Accepted values are \"used\" or \"unused\"."
                        },
                        {
                            "type": "string",
                            "name": "search",
                            "in": "query",
                            "description": "Search for devices in inventory based on serial number, mac address, or model."
                        }
                    ],
                    "responses": {
                        "200": {
                            "description": "Successful operation",
                            "headers": {
                                "Link": {
                                    "type": "string",
                                    "description": "A comma-separated list of first, last, prev, and next relative links used for subsequent paginated requests."
                                }
                            },
                            "examples": {
                                "application/json": [{
                                    "mac": "00:11:22:33:44:55",
                                    "serial": "Q234-ABCD-5678",
                                    "name": "My AP",
                                    "model": "MR34",
                                    "networkId": "N_24329156",
                                    "orderNumber": "4C1234567",
                                    "claimedAt": "2018-02-11T00:00:00.090210Z",
                                    "licenseExpirationDate": "2020-05-02T10:52:44.012345Z"
                                }]
                            }
                        }
                    },
                    "summary": "Return the device inventory for an organization",
                    "tags": [
                        "organizations",
                        "configure",
                        "inventoryDevices"
                    ]
                }
            }
        },
        {
            "ruleId": "add-path",
            "message": "`/organizations/{organizationId}/inventoryDevices/{serial}` - Added",
            "messageHtml": "Path added   <br>\n      <br>\n      - New endpoint\n      <h4>Return a single device from the inventory of an organization</h4>\n      <p>   \n      <b class=\"mr-4 badge get\">GET</b>  <code>/organizations/{organizationId}/inventoryDevices/{serial}</code>\n      <br>  \n      <pre><code>{\n    &quot;mac&quot;: &quot;00:11:22:33:44:55&quot;,\n    &quot;serial&quot;: &quot;Q234-ABCD-5678&quot;,\n    &quot;name&quot;: &quot;My AP&quot;,\n    &quot;model&quot;: &quot;MR34&quot;,\n    &quot;networkId&quot;: &quot;N_24329156&quot;,\n    &quot;orderNumber&quot;: &quot;4C1234567&quot;,\n    &quot;claimedAt&quot;: &quot;2018-02-11T00:00:00.090210Z&quot;,\n    &quot;licenseExpirationDate&quot;: &quot;2020-05-02T10:52:44.012345Z&quot;\n}</code></pre>\n      </p>\n      <hr>\n      ",
            "path": "/organizations/{organizationId}/inventoryDevices/{serial}",
            "details": {
                "get": {
                    "description": "Return a single device from the inventory of an organization",
                    "operationId": "getOrganizationInventoryDevice",
                    "parameters": {
                        "organizationId": {
                            "name": "organizationId",
                            "in": "path",
                            "type": "string",
                            "required": true
                        },
                        "serial": {
                            "name": "serial",
                            "in": "path",
                            "type": "string",
                            "required": true
                        }
                    },
                    "responses": {
                        "200": {
                            "description": "Successful operation",
                            "examples": {
                                "application/json": {
                                    "mac": "00:11:22:33:44:55",
                                    "serial": "Q234-ABCD-5678",
                                    "name": "My AP",
                                    "model": "MR34",
                                    "networkId": "N_24329156",
                                    "orderNumber": "4C1234567",
                                    "claimedAt": "2018-02-11T00:00:00.090210Z",
                                    "licenseExpirationDate": "2020-05-02T10:52:44.012345Z"
                                }
                            }
                        }
                    },
                    "summary": "Return a single device from the inventory of an organization",
                    "tags": [
                        "organizations",
                        "configure",
                        "inventoryDevices"
                    ],
                    "consumes": [
                        "application/json"
                    ],
                    "produces": [
                        "application/json"
                    ],
                    "schemes": [
                        "https"
                    ],
                    "security": [{
                        "meraki_api_key": []
                    }]
                }
            },
            "type": "infos",
            "name": "What's Updated",
            "group": "organizations",
            "apiDetails": {
                "get": {
                    "description": "Return a single device from the inventory of an organization",
                    "operationId": "getOrganizationInventoryDevice",
                    "parameters": [{
                            "name": "organizationId",
                            "in": "path",
                            "type": "string",
                            "required": true
                        },
                        {
                            "name": "serial",
                            "in": "path",
                            "type": "string",
                            "required": true
                        }
                    ],
                    "responses": {
                        "200": {
                            "description": "Successful operation",
                            "examples": {
                                "application/json": {
                                    "mac": "00:11:22:33:44:55",
                                    "serial": "Q234-ABCD-5678",
                                    "name": "My AP",
                                    "model": "MR34",
                                    "networkId": "N_24329156",
                                    "orderNumber": "4C1234567",
                                    "claimedAt": "2018-02-11T00:00:00.090210Z",
                                    "licenseExpirationDate": "2020-05-02T10:52:44.012345Z"
                                }
                            }
                        }
                    },
                    "summary": "Return a single device from the inventory of an organization",
                    "tags": [
                        "organizations",
                        "configure",
                        "inventoryDevices"
                    ]
                }
            }
        },
        {
            "ruleId": "add-path",
            "message": "`/organizations/{organizationId}/saml` - Added",
            "messageHtml": "Path added   <br>\n      <br>\n      - New endpoint\n      <h4>Returns the SAML SSO enabled settings for an organization.</h4>\n      <p>   \n      <b class=\"mr-4 badge get\">GET</b>  <code>/organizations/{organizationId}/saml</code>\n      <br>  \n      <pre><code>{\n    &quot;enabled&quot;: true\n}</code></pre>\n      </p>\n      <hr>\n      \n      <br>\n      - New endpoint\n      <h4>Updates the SAML SSO enabled settings for an organization.</h4>\n      <p>   \n      <b class=\"mr-4 badge put\">PUT</b>  <code>/organizations/{organizationId}/saml</code>\n      <br>  \n      <pre><code>{\n    &quot;enabled&quot;: true\n}</code></pre>\n      </p>\n      <hr>\n      ",
            "path": "/organizations/{organizationId}/saml",
            "details": {
                "get": {
                    "description": "Returns the SAML SSO enabled settings for an organization.",
                    "operationId": "getOrganizationSaml",
                    "parameters": {
                        "organizationId": {
                            "name": "organizationId",
                            "in": "path",
                            "type": "string",
                            "required": true
                        }
                    },
                    "responses": {
                        "200": {
                            "description": "Successful operation",
                            "examples": {
                                "application/json": {
                                    "enabled": true
                                }
                            }
                        }
                    },
                    "summary": "Returns the SAML SSO enabled settings for an organization.",
                    "tags": [
                        "organizations",
                        "configure",
                        "saml"
                    ],
                    "consumes": [
                        "application/json"
                    ],
                    "produces": [
                        "application/json"
                    ],
                    "schemes": [
                        "https"
                    ],
                    "security": [{
                        "meraki_api_key": []
                    }]
                },
                "put": {
                    "description": "Updates the SAML SSO enabled settings for an organization.",
                    "operationId": "updateOrganizationSaml",
                    "parameters": {
                        "organizationId": {
                            "name": "organizationId",
                            "in": "path",
                            "type": "string",
                            "required": true
                        },
                        "updateOrganizationSaml": {
                            "name": "updateOrganizationSaml",
                            "in": "body",
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "enabled": {
                                        "type": "boolean",
                                        "description": "Boolean for updating SAML SSO enabled settings."
                                    }
                                },
                                "example": {
                                    "enabled": true
                                }
                            }
                        }
                    },
                    "responses": {
                        "200": {
                            "description": "Successful operation",
                            "examples": {
                                "application/json": {
                                    "enabled": true
                                }
                            }
                        }
                    },
                    "summary": "Updates the SAML SSO enabled settings for an organization.",
                    "tags": [
                        "organizations",
                        "configure",
                        "saml"
                    ],
                    "consumes": [
                        "application/json"
                    ],
                    "produces": [
                        "application/json"
                    ],
                    "schemes": [
                        "https"
                    ],
                    "security": [{
                        "meraki_api_key": []
                    }]
                }
            },
            "type": "infos",
            "name": "What's Updated",
            "group": "organizations",
            "apiDetails": {
                "get": {
                    "description": "Returns the SAML SSO enabled settings for an organization.",
                    "operationId": "getOrganizationSaml",
                    "parameters": [{
                        "name": "organizationId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }],
                    "responses": {
                        "200": {
                            "description": "Successful operation",
                            "examples": {
                                "application/json": {
                                    "enabled": true
                                }
                            }
                        }
                    },
                    "summary": "Returns the SAML SSO enabled settings for an organization.",
                    "tags": [
                        "organizations",
                        "configure",
                        "saml"
                    ]
                },
                "put": {
                    "description": "Updates the SAML SSO enabled settings for an organization.",
                    "operationId": "updateOrganizationSaml",
                    "parameters": [{
                            "name": "organizationId",
                            "in": "path",
                            "type": "string",
                            "required": true
                        },
                        {
                            "name": "updateOrganizationSaml",
                            "in": "body",
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "enabled": {
                                        "type": "boolean",
                                        "description": "Boolean for updating SAML SSO enabled settings."
                                    }
                                },
                                "example": {
                                    "enabled": true
                                }
                            }
                        }
                    ],
                    "responses": {
                        "200": {
                            "description": "Successful operation",
                            "examples": {
                                "application/json": {
                                    "enabled": true
                                }
                            }
                        }
                    },
                    "summary": "Updates the SAML SSO enabled settings for an organization.",
                    "tags": [
                        "organizations",
                        "configure",
                        "saml"
                    ]
                }
            }
        },
        {
            "ruleId": "add-path",
            "message": "`/organizations/{organizationId}/saml/idps` - Added",
            "messageHtml": "Path added   <br>\n      <br>\n      - New endpoint\n      <h4>List the SAML IdPs in your organization.</h4>\n      <p>   \n      <b class=\"mr-4 badge get\">GET</b>  <code>/organizations/{organizationId}/saml/idps</code>\n      <br>  \n      <pre><code>[\n    {\n        &quot;idpId&quot;: &quot;ab0c1de23Fg&quot;,\n        &quot;consumerUrl&quot;: &quot;https://n7.meraki.com/saml/login/XXX&quot;,\n        &quot;x509certSha1Fingerprint&quot;: &quot;00:11:22:33:44:55:66:77:88:99:00:11:22:33:44:55:66:77:88:99&quot;,\n        &quot;sloLogoutUrl&quot;: &quot;https://somewhere.com&quot;\n    }\n]</code></pre>\n      </p>\n      <hr>\n      \n      <br>\n      - New endpoint\n      <h4>Create a SAML IdP for your organization.</h4>\n      <p>   \n      <b class=\"mr-4 badge post\">POST</b>  <code>/organizations/{organizationId}/saml/idps</code>\n      <br>  \n      <pre><code>{\n    &quot;idpId&quot;: &quot;ab0c1de23Fg&quot;,\n    &quot;consumerUrl&quot;: &quot;https://n7.meraki.com/saml/login/XXX&quot;,\n    &quot;x509certSha1Fingerprint&quot;: &quot;00:11:22:33:44:55:66:77:88:99:00:11:22:33:44:55:66:77:88:99&quot;,\n    &quot;sloLogoutUrl&quot;: &quot;https://somewhere.com&quot;\n}</code></pre>\n      </p>\n      <hr>\n      ",
            "path": "/organizations/{organizationId}/saml/idps",
            "details": {
                "get": {
                    "description": "List the SAML IdPs in your organization.",
                    "operationId": "getOrganizationSamlIdps",
                    "parameters": {
                        "organizationId": {
                            "name": "organizationId",
                            "in": "path",
                            "type": "string",
                            "required": true
                        }
                    },
                    "responses": {
                        "200": {
                            "description": "Successful operation",
                            "examples": {
                                "application/json": [{
                                    "idpId": "ab0c1de23Fg",
                                    "consumerUrl": "https://n7.meraki.com/saml/login/XXX",
                                    "x509certSha1Fingerprint": "00:11:22:33:44:55:66:77:88:99:00:11:22:33:44:55:66:77:88:99",
                                    "sloLogoutUrl": "https://somewhere.com"
                                }]
                            }
                        }
                    },
                    "summary": "List the SAML IdPs in your organization.",
                    "tags": [
                        "organizations",
                        "configure",
                        "saml",
                        "idps"
                    ],
                    "consumes": [
                        "application/json"
                    ],
                    "produces": [
                        "application/json"
                    ],
                    "schemes": [
                        "https"
                    ],
                    "security": [{
                        "meraki_api_key": []
                    }]
                },
                "post": {
                    "description": "Create a SAML IdP for your organization.",
                    "operationId": "createOrganizationSamlIdp",
                    "parameters": {
                        "organizationId": {
                            "name": "organizationId",
                            "in": "path",
                            "type": "string",
                            "required": true
                        },
                        "createOrganizationSamlIdp": {
                            "name": "createOrganizationSamlIdp",
                            "in": "body",
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "x509certSha1Fingerprint": {
                                        "type": "string",
                                        "description": "Fingerprint (SHA1) of the SAML certificate provided by your Identity Provider (IdP). This will be used for encryption / validation.",
                                        "required": true
                                    },
                                    "sloLogoutUrl": {
                                        "type": "string",
                                        "description": "Dashboard will redirect users to this URL when they sign out."
                                    }
                                },
                                "example": {
                                    "idpId": "ab0c1de23Fg",
                                    "x509certSha1Fingerprint": "00:11:22:33:44:55:66:77:88:99:00:11:22:33:44:55:66:77:88:99",
                                    "sloLogoutUrl": "https://somewhere.com"
                                }
                            },
                            "required": true
                        }
                    },
                    "responses": {
                        "201": {
                            "description": "Successful operation",
                            "examples": {
                                "application/json": {
                                    "idpId": "ab0c1de23Fg",
                                    "consumerUrl": "https://n7.meraki.com/saml/login/XXX",
                                    "x509certSha1Fingerprint": "00:11:22:33:44:55:66:77:88:99:00:11:22:33:44:55:66:77:88:99",
                                    "sloLogoutUrl": "https://somewhere.com"
                                }
                            }
                        }
                    },
                    "summary": "Create a SAML IdP for your organization.",
                    "tags": [
                        "organizations",
                        "configure",
                        "saml",
                        "idps"
                    ],
                    "consumes": [
                        "application/json"
                    ],
                    "produces": [
                        "application/json"
                    ],
                    "schemes": [
                        "https"
                    ],
                    "security": [{
                        "meraki_api_key": []
                    }]
                }
            },
            "type": "infos",
            "name": "What's Updated",
            "group": "organizations",
            "apiDetails": {
                "get": {
                    "description": "List the SAML IdPs in your organization.",
                    "operationId": "getOrganizationSamlIdps",
                    "parameters": [{
                        "name": "organizationId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }],
                    "responses": {
                        "200": {
                            "description": "Successful operation",
                            "examples": {
                                "application/json": [{
                                    "idpId": "ab0c1de23Fg",
                                    "consumerUrl": "https://n7.meraki.com/saml/login/XXX",
                                    "x509certSha1Fingerprint": "00:11:22:33:44:55:66:77:88:99:00:11:22:33:44:55:66:77:88:99",
                                    "sloLogoutUrl": "https://somewhere.com"
                                }]
                            }
                        }
                    },
                    "summary": "List the SAML IdPs in your organization.",
                    "tags": [
                        "organizations",
                        "configure",
                        "saml",
                        "idps"
                    ]
                },
                "post": {
                    "description": "Create a SAML IdP for your organization.",
                    "operationId": "createOrganizationSamlIdp",
                    "parameters": [{
                            "name": "organizationId",
                            "in": "path",
                            "type": "string",
                            "required": true
                        },
                        {
                            "name": "createOrganizationSamlIdp",
                            "in": "body",
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "x509certSha1Fingerprint": {
                                        "type": "string",
                                        "description": "Fingerprint (SHA1) of the SAML certificate provided by your Identity Provider (IdP). This will be used for encryption / validation.",
                                        "required": true
                                    },
                                    "sloLogoutUrl": {
                                        "type": "string",
                                        "description": "Dashboard will redirect users to this URL when they sign out."
                                    }
                                },
                                "example": {
                                    "idpId": "ab0c1de23Fg",
                                    "x509certSha1Fingerprint": "00:11:22:33:44:55:66:77:88:99:00:11:22:33:44:55:66:77:88:99",
                                    "sloLogoutUrl": "https://somewhere.com"
                                }
                            },
                            "required": true
                        }
                    ],
                    "responses": {
                        "201": {
                            "description": "Successful operation",
                            "examples": {
                                "application/json": {
                                    "idpId": "ab0c1de23Fg",
                                    "consumerUrl": "https://n7.meraki.com/saml/login/XXX",
                                    "x509certSha1Fingerprint": "00:11:22:33:44:55:66:77:88:99:00:11:22:33:44:55:66:77:88:99",
                                    "sloLogoutUrl": "https://somewhere.com"
                                }
                            }
                        }
                    },
                    "summary": "Create a SAML IdP for your organization.",
                    "tags": [
                        "organizations",
                        "configure",
                        "saml",
                        "idps"
                    ]
                }
            }
        },
        {
            "ruleId": "add-path",
            "message": "`/organizations/{organizationId}/saml/idps/{idpId}` - Added",
            "messageHtml": "Path added   <br>\n      <br>\n      - New endpoint\n      <h4>Get a SAML IdP from your organization.</h4>\n      <p>   \n      <b class=\"mr-4 badge get\">GET</b>  <code>/organizations/{organizationId}/saml/idps/{idpId}</code>\n      <br>  \n      <pre><code>{\n    &quot;idpId&quot;: &quot;ab0c1de23Fg&quot;,\n    &quot;consumerUrl&quot;: &quot;https://n7.meraki.com/saml/login/XXX&quot;,\n    &quot;x509certSha1Fingerprint&quot;: &quot;00:11:22:33:44:55:66:77:88:99:00:11:22:33:44:55:66:77:88:99&quot;,\n    &quot;sloLogoutUrl&quot;: &quot;https://somewhere.com&quot;\n}</code></pre>\n      </p>\n      <hr>\n      \n      <br>\n      - New endpoint\n      <h4>Update a SAML IdP in your organization</h4>\n      <p>   \n      <b class=\"mr-4 badge put\">PUT</b>  <code>/organizations/{organizationId}/saml/idps/{idpId}</code>\n      <br>  \n      <pre><code>{\n    &quot;idpId&quot;: &quot;ab0c1de23Fg&quot;,\n    &quot;consumerUrl&quot;: &quot;https://n7.meraki.com/saml/login/XXX&quot;,\n    &quot;x509certSha1Fingerprint&quot;: &quot;00:11:22:33:44:55:66:77:88:99:00:11:22:33:44:55:66:77:88:99&quot;,\n    &quot;sloLogoutUrl&quot;: &quot;https://somewhere.com&quot;\n}</code></pre>\n      </p>\n      <hr>\n      \n      <br>\n      - New endpoint\n      <h4>Remove a SAML IdP in your organization.</h4>\n      <p>   \n      <b class=\"mr-4 badge delete\">DELETE</b>  <code>/organizations/{organizationId}/saml/idps/{idpId}</code>\n      <br>  \n      <pre><code></code></pre>\n      </p>\n      <hr>\n      ",
            "path": "/organizations/{organizationId}/saml/idps/{idpId}",
            "details": {
                "get": {
                    "description": "Get a SAML IdP from your organization.",
                    "operationId": "getOrganizationSamlIdp",
                    "parameters": {
                        "organizationId": {
                            "name": "organizationId",
                            "in": "path",
                            "type": "string",
                            "required": true
                        },
                        "idpId": {
                            "name": "idpId",
                            "in": "path",
                            "type": "string",
                            "required": true
                        }
                    },
                    "responses": {
                        "200": {
                            "description": "Successful operation",
                            "examples": {
                                "application/json": {
                                    "idpId": "ab0c1de23Fg",
                                    "consumerUrl": "https://n7.meraki.com/saml/login/XXX",
                                    "x509certSha1Fingerprint": "00:11:22:33:44:55:66:77:88:99:00:11:22:33:44:55:66:77:88:99",
                                    "sloLogoutUrl": "https://somewhere.com"
                                }
                            }
                        }
                    },
                    "summary": "Get a SAML IdP from your organization.",
                    "tags": [
                        "organizations",
                        "configure",
                        "saml",
                        "idps"
                    ],
                    "consumes": [
                        "application/json"
                    ],
                    "produces": [
                        "application/json"
                    ],
                    "schemes": [
                        "https"
                    ],
                    "security": [{
                        "meraki_api_key": []
                    }]
                },
                "put": {
                    "description": "Update a SAML IdP in your organization",
                    "operationId": "updateOrganizationSamlIdp",
                    "parameters": {
                        "organizationId": {
                            "name": "organizationId",
                            "in": "path",
                            "type": "string",
                            "required": true
                        },
                        "idpId": {
                            "name": "idpId",
                            "in": "path",
                            "type": "string",
                            "required": true
                        },
                        "updateOrganizationSamlIdp": {
                            "name": "updateOrganizationSamlIdp",
                            "in": "body",
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "x509certSha1Fingerprint": {
                                        "type": "string",
                                        "description": "Fingerprint (SHA1) of the SAML certificate provided by your Identity Provider (IdP). This will be used for encryption / validation."
                                    },
                                    "sloLogoutUrl": {
                                        "type": "string",
                                        "description": "Dashboard will redirect users to this URL when they sign out."
                                    }
                                },
                                "example": {
                                    "idpId": "ab0c1de23Fg",
                                    "x509certSha1Fingerprint": "00:11:22:33:44:55:66:77:88:99:00:11:22:33:44:55:66:77:88:99",
                                    "sloLogoutUrl": "https://somewhere.com"
                                }
                            }
                        }
                    },
                    "responses": {
                        "200": {
                            "description": "Successful operation",
                            "examples": {
                                "application/json": {
                                    "idpId": "ab0c1de23Fg",
                                    "consumerUrl": "https://n7.meraki.com/saml/login/XXX",
                                    "x509certSha1Fingerprint": "00:11:22:33:44:55:66:77:88:99:00:11:22:33:44:55:66:77:88:99",
                                    "sloLogoutUrl": "https://somewhere.com"
                                }
                            }
                        }
                    },
                    "summary": "Update a SAML IdP in your organization",
                    "tags": [
                        "organizations",
                        "configure",
                        "saml",
                        "idps"
                    ],
                    "consumes": [
                        "application/json"
                    ],
                    "produces": [
                        "application/json"
                    ],
                    "schemes": [
                        "https"
                    ],
                    "security": [{
                        "meraki_api_key": []
                    }]
                },
                "delete": {
                    "description": "Remove a SAML IdP in your organization.",
                    "operationId": "deleteOrganizationSamlIdp",
                    "parameters": {
                        "organizationId": {
                            "name": "organizationId",
                            "in": "path",
                            "type": "string",
                            "required": true
                        },
                        "idpId": {
                            "name": "idpId",
                            "in": "path",
                            "type": "string",
                            "required": true
                        }
                    },
                    "responses": {
                        "204": {
                            "description": "Successful operation"
                        }
                    },
                    "summary": "Remove a SAML IdP in your organization.",
                    "tags": [
                        "organizations",
                        "configure",
                        "saml",
                        "idps"
                    ],
                    "consumes": [
                        "application/json"
                    ],
                    "produces": [
                        "application/json"
                    ],
                    "schemes": [
                        "https"
                    ],
                    "security": [{
                        "meraki_api_key": []
                    }]
                }
            },
            "type": "infos",
            "name": "What's Updated",
            "group": "organizations",
            "apiDetails": {
                "put": {
                    "description": "Update a SAML IdP in your organization",
                    "operationId": "updateOrganizationSamlIdp",
                    "parameters": [{
                            "name": "organizationId",
                            "in": "path",
                            "type": "string",
                            "required": true
                        },
                        {
                            "name": "idpId",
                            "in": "path",
                            "type": "string",
                            "required": true
                        },
                        {
                            "name": "updateOrganizationSamlIdp",
                            "in": "body",
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "x509certSha1Fingerprint": {
                                        "type": "string",
                                        "description": "Fingerprint (SHA1) of the SAML certificate provided by your Identity Provider (IdP). This will be used for encryption / validation."
                                    },
                                    "sloLogoutUrl": {
                                        "type": "string",
                                        "description": "Dashboard will redirect users to this URL when they sign out."
                                    }
                                },
                                "example": {
                                    "idpId": "ab0c1de23Fg",
                                    "x509certSha1Fingerprint": "00:11:22:33:44:55:66:77:88:99:00:11:22:33:44:55:66:77:88:99",
                                    "sloLogoutUrl": "https://somewhere.com"
                                }
                            }
                        }
                    ],
                    "responses": {
                        "200": {
                            "description": "Successful operation",
                            "examples": {
                                "application/json": {
                                    "idpId": "ab0c1de23Fg",
                                    "consumerUrl": "https://n7.meraki.com/saml/login/XXX",
                                    "x509certSha1Fingerprint": "00:11:22:33:44:55:66:77:88:99:00:11:22:33:44:55:66:77:88:99",
                                    "sloLogoutUrl": "https://somewhere.com"
                                }
                            }
                        }
                    },
                    "summary": "Update a SAML IdP in your organization",
                    "tags": [
                        "organizations",
                        "configure",
                        "saml",
                        "idps"
                    ]
                },
                "get": {
                    "description": "Get a SAML IdP from your organization.",
                    "operationId": "getOrganizationSamlIdp",
                    "parameters": [{
                            "name": "organizationId",
                            "in": "path",
                            "type": "string",
                            "required": true
                        },
                        {
                            "name": "idpId",
                            "in": "path",
                            "type": "string",
                            "required": true
                        }
                    ],
                    "responses": {
                        "200": {
                            "description": "Successful operation",
                            "examples": {
                                "application/json": {
                                    "idpId": "ab0c1de23Fg",
                                    "consumerUrl": "https://n7.meraki.com/saml/login/XXX",
                                    "x509certSha1Fingerprint": "00:11:22:33:44:55:66:77:88:99:00:11:22:33:44:55:66:77:88:99",
                                    "sloLogoutUrl": "https://somewhere.com"
                                }
                            }
                        }
                    },
                    "summary": "Get a SAML IdP from your organization.",
                    "tags": [
                        "organizations",
                        "configure",
                        "saml",
                        "idps"
                    ]
                },
                "delete": {
                    "description": "Remove a SAML IdP in your organization.",
                    "operationId": "deleteOrganizationSamlIdp",
                    "parameters": [{
                            "name": "organizationId",
                            "in": "path",
                            "type": "string",
                            "required": true
                        },
                        {
                            "name": "idpId",
                            "in": "path",
                            "type": "string",
                            "required": true
                        }
                    ],
                    "responses": {
                        "204": {
                            "description": "Successful operation"
                        }
                    },
                    "summary": "Remove a SAML IdP in your organization.",
                    "tags": [
                        "organizations",
                        "configure",
                        "saml",
                        "idps"
                    ]
                }
            }
        },
        {
            "ruleId": "add-path",
            "message": "`/organizations/{organizationId}/sm/apnsCert` - Added",
            "messageHtml": "Path added   <br>\n      <br>\n      - New endpoint\n      <h4>Get the organization's APNS certificate</h4>\n      <p>   \n      <b class=\"mr-4 badge get\">GET</b>  <code>/organizations/{organizationId}/sm/apnsCert</code>\n      <br>  \n      <pre><code>{\n    &quot;certificate&quot;: &quot;-----BEGIN CERTIFICATE-----\\nMIIFdjCCBF6gAwIBAgIIM/hhf5ww8MwwDQYJKoZIhvcNAQELBQAwgYwxQDA+BgNV\\nBAMMN0FwcGxlIEFwcGxpY2F0aW9uIEludGVncmF0aW9uIDIgQ2VydGlmaWNhdGlv\\nbiBBdXRob3JpdHkxJjAkBgNVBAsMHUFwcGxlIENlcnRpZmljYXRpb24gQXV0aG9y\\naXR5MRMwEQYDVQQKDApBcHBsZSBJbmMuMQswCQYDVQQGEwJVUzAeFw0yMDAyMjYx\\nODIzNDJaFw0yMTAyMjUxODIzNDJaMIGPMUwwSgYKCZImiZPyLGQBAQw8Y29tLmFw\\ncGxlLm1nbXQuRXh0ZXJuYWwuOTA3NDJhYmYtZDhhZC00MTc2LTllZmQtMGNiMzg1\\nMTM1MGM0MTIwMAYDVQQDDClBUFNQOjkwNzQyYWJmLWQ4YWQtNDE3Ni05ZWZkLTBj\\nYjM4NTEzNTBjNDELMAkGA1UEBhMCVVMwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAw\\nggEKAoIBAQDANdpo62hfxkP1IpMPXuO1+xKekUkY+iYae6cRaP886bodUaH1OwCj\\nQd011u9Vng6m8I9rcLdIOS+IkFGKcTAHRYY3noqfEQUPyi5TN6yM1/mVYVoWZUnY\\nTrNWqDN/HfRagdYfZyQ7kAtOY2K8TF78HLLqQm7ez2+r4qibumoSli9+qCzKwDW/\\nhbx7JTeMlbYkhLTFgBkRxlp+usKymsLKm8D7kdbxtct4mx6p9z1FiNu4U1Hi/PgK\\nI/V3zHD4Ww7SzTICiLdCPeAmt042JvXAMQi0qhzrEdDiapmWwUC9xiiORN0BTIRA\\nT+DddTx8Xcly4wj9vQFdGUGLrJnzB3xZAgMBAAGjggHVMIIB0TAJBgNVHRMEAjAA\\nMB8GA1UdIwQYMBaAFPe+fCFgkds9G3vYOjKBad+ebH+bMIIBHAYDVR0gBIIBEzCC\\nAQ8wggELBgkqhkiG92NkBQEwgf0wgcMGCCsGAQUFBwICMIG2DIGzUmVsaWFuY2Ug\\nb24gdGhpcyBjZXJ0aWZpY2F0ZSBieSBhbnkgcGFydHkgYXNzdW1lcyBhY2NlcHRh\\nbmNlIG9mIHRoZSB0aGVuIGFwcGxpY2FibGUgc3RhbmRhcmQgdGVybXMgYW5kIGNv\\nbmRpdGlvbnMgb2YgdXNlLCBjZXJ0aWZpY2F0ZSBwb2xpY3kgYW5kIGNlcnRpZmlj\\nYXRpb24gcHJhY3RpY2Ugc3RhdGVtZW50cy4wNQYIKwYBBQUHAgEWKWh0dHA6Ly93\\nd3cuYXBwbGUuY29tL2NlcnRpZmljYXRlYXV0aG9yaXR5MBMGA1UdJQQMMAoGCCsG\\nAQUFBwMCMDAGA1UdHwQpMCcwJaAjoCGGH2h0dHA6Ly9jcmwuYXBwbGUuY29tL2Fh\\naTJjYS5jcmwwHQYDVR0OBBYEFDj4Jizt9bQX7dn3ypIanvaNIy8fMAsGA1UdDwQE\\nAwIHgDAQBgoqhkiG92NkBgMCBAIFADANBgkqhkiG9w0BAQsFAAOCAQEARmLmy4Mh\\n80hTBHMj2whrC2LR0dIe2ngAUwYGSocyPZOzlGZYntUvpsNGwflbWSPNxFpVF15z\\nexEcLPKM4f9KGdM27s/m/x1Es2us9Vve+wS+N0C84zMC++FJBIxj3yAINXqSpYJv\\nbA5wccHlzP9F9Ks7sVNQB8y0mibYahtxVV959gC4522t5SRaEEsd82oTCtXE2Ljg\\nfQ1IAmWi4MuMSPwp26oDSwun8Wxyx+sfi/it9YWxD36Ga9mrfIjK1WIHyhge0HHr\\nolnvMfxgwI9E5gGV/4bQzPlmsHdz+/pLupWMkALaAxI9D7ajUG7iyyjJBCOpsr1s\\nFjDvo6WUkaqMHA==\\n-----END CERTIFICATE-----\\n&quot;\n}</code></pre>\n      </p>\n      <hr>\n      ",
            "path": "/organizations/{organizationId}/sm/apnsCert",
            "details": {
                "get": {
                    "description": "Get the organization's APNS certificate",
                    "operationId": "getOrganizationSmApnsCert",
                    "parameters": {
                        "organizationId": {
                            "name": "organizationId",
                            "in": "path",
                            "type": "string",
                            "required": true
                        }
                    },
                    "responses": {
                        "200": {
                            "description": "Successful operation",
                            "examples": {
                                "application/json": {
                                    "certificate": "-----BEGIN CERTIFICATE-----\nMIIFdjCCBF6gAwIBAgIIM/hhf5ww8MwwDQYJKoZIhvcNAQELBQAwgYwxQDA+BgNV\nBAMMN0FwcGxlIEFwcGxpY2F0aW9uIEludGVncmF0aW9uIDIgQ2VydGlmaWNhdGlv\nbiBBdXRob3JpdHkxJjAkBgNVBAsMHUFwcGxlIENlcnRpZmljYXRpb24gQXV0aG9y\naXR5MRMwEQYDVQQKDApBcHBsZSBJbmMuMQswCQYDVQQGEwJVUzAeFw0yMDAyMjYx\nODIzNDJaFw0yMTAyMjUxODIzNDJaMIGPMUwwSgYKCZImiZPyLGQBAQw8Y29tLmFw\ncGxlLm1nbXQuRXh0ZXJuYWwuOTA3NDJhYmYtZDhhZC00MTc2LTllZmQtMGNiMzg1\nMTM1MGM0MTIwMAYDVQQDDClBUFNQOjkwNzQyYWJmLWQ4YWQtNDE3Ni05ZWZkLTBj\nYjM4NTEzNTBjNDELMAkGA1UEBhMCVVMwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAw\nggEKAoIBAQDANdpo62hfxkP1IpMPXuO1+xKekUkY+iYae6cRaP886bodUaH1OwCj\nQd011u9Vng6m8I9rcLdIOS+IkFGKcTAHRYY3noqfEQUPyi5TN6yM1/mVYVoWZUnY\nTrNWqDN/HfRagdYfZyQ7kAtOY2K8TF78HLLqQm7ez2+r4qibumoSli9+qCzKwDW/\nhbx7JTeMlbYkhLTFgBkRxlp+usKymsLKm8D7kdbxtct4mx6p9z1FiNu4U1Hi/PgK\nI/V3zHD4Ww7SzTICiLdCPeAmt042JvXAMQi0qhzrEdDiapmWwUC9xiiORN0BTIRA\nT+DddTx8Xcly4wj9vQFdGUGLrJnzB3xZAgMBAAGjggHVMIIB0TAJBgNVHRMEAjAA\nMB8GA1UdIwQYMBaAFPe+fCFgkds9G3vYOjKBad+ebH+bMIIBHAYDVR0gBIIBEzCC\nAQ8wggELBgkqhkiG92NkBQEwgf0wgcMGCCsGAQUFBwICMIG2DIGzUmVsaWFuY2Ug\nb24gdGhpcyBjZXJ0aWZpY2F0ZSBieSBhbnkgcGFydHkgYXNzdW1lcyBhY2NlcHRh\nbmNlIG9mIHRoZSB0aGVuIGFwcGxpY2FibGUgc3RhbmRhcmQgdGVybXMgYW5kIGNv\nbmRpdGlvbnMgb2YgdXNlLCBjZXJ0aWZpY2F0ZSBwb2xpY3kgYW5kIGNlcnRpZmlj\nYXRpb24gcHJhY3RpY2Ugc3RhdGVtZW50cy4wNQYIKwYBBQUHAgEWKWh0dHA6Ly93\nd3cuYXBwbGUuY29tL2NlcnRpZmljYXRlYXV0aG9yaXR5MBMGA1UdJQQMMAoGCCsG\nAQUFBwMCMDAGA1UdHwQpMCcwJaAjoCGGH2h0dHA6Ly9jcmwuYXBwbGUuY29tL2Fh\naTJjYS5jcmwwHQYDVR0OBBYEFDj4Jizt9bQX7dn3ypIanvaNIy8fMAsGA1UdDwQE\nAwIHgDAQBgoqhkiG92NkBgMCBAIFADANBgkqhkiG9w0BAQsFAAOCAQEARmLmy4Mh\n80hTBHMj2whrC2LR0dIe2ngAUwYGSocyPZOzlGZYntUvpsNGwflbWSPNxFpVF15z\nexEcLPKM4f9KGdM27s/m/x1Es2us9Vve+wS+N0C84zMC++FJBIxj3yAINXqSpYJv\nbA5wccHlzP9F9Ks7sVNQB8y0mibYahtxVV959gC4522t5SRaEEsd82oTCtXE2Ljg\nfQ1IAmWi4MuMSPwp26oDSwun8Wxyx+sfi/it9YWxD36Ga9mrfIjK1WIHyhge0HHr\nolnvMfxgwI9E5gGV/4bQzPlmsHdz+/pLupWMkALaAxI9D7ajUG7iyyjJBCOpsr1s\nFjDvo6WUkaqMHA==\n-----END CERTIFICATE-----\n"
                                }
                            }
                        }
                    },
                    "summary": "Get the organization's APNS certificate",
                    "tags": [
                        "sm",
                        "configure",
                        "apnsCert"
                    ],
                    "consumes": [
                        "application/json"
                    ],
                    "produces": [
                        "application/json"
                    ],
                    "schemes": [
                        "https"
                    ],
                    "security": [{
                        "meraki_api_key": []
                    }]
                }
            },
            "type": "infos",
            "name": "What's Updated",
            "group": "sm",
            "apiDetails": {
                "get": {
                    "description": "Get the organization's APNS certificate",
                    "operationId": "getOrganizationSmApnsCert",
                    "parameters": [{
                        "name": "organizationId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }],
                    "responses": {
                        "200": {
                            "description": "Successful operation",
                            "examples": {
                                "application/json": {
                                    "certificate": "-----BEGIN CERTIFICATE-----\nMIIFdjCCBF6gAwIBAgIIM/hhf5ww8MwwDQYJKoZIhvcNAQELBQAwgYwxQDA+BgNV\nBAMMN0FwcGxlIEFwcGxpY2F0aW9uIEludGVncmF0aW9uIDIgQ2VydGlmaWNhdGlv\nbiBBdXRob3JpdHkxJjAkBgNVBAsMHUFwcGxlIENlcnRpZmljYXRpb24gQXV0aG9y\naXR5MRMwEQYDVQQKDApBcHBsZSBJbmMuMQswCQYDVQQGEwJVUzAeFw0yMDAyMjYx\nODIzNDJaFw0yMTAyMjUxODIzNDJaMIGPMUwwSgYKCZImiZPyLGQBAQw8Y29tLmFw\ncGxlLm1nbXQuRXh0ZXJuYWwuOTA3NDJhYmYtZDhhZC00MTc2LTllZmQtMGNiMzg1\nMTM1MGM0MTIwMAYDVQQDDClBUFNQOjkwNzQyYWJmLWQ4YWQtNDE3Ni05ZWZkLTBj\nYjM4NTEzNTBjNDELMAkGA1UEBhMCVVMwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAw\nggEKAoIBAQDANdpo62hfxkP1IpMPXuO1+xKekUkY+iYae6cRaP886bodUaH1OwCj\nQd011u9Vng6m8I9rcLdIOS+IkFGKcTAHRYY3noqfEQUPyi5TN6yM1/mVYVoWZUnY\nTrNWqDN/HfRagdYfZyQ7kAtOY2K8TF78HLLqQm7ez2+r4qibumoSli9+qCzKwDW/\nhbx7JTeMlbYkhLTFgBkRxlp+usKymsLKm8D7kdbxtct4mx6p9z1FiNu4U1Hi/PgK\nI/V3zHD4Ww7SzTICiLdCPeAmt042JvXAMQi0qhzrEdDiapmWwUC9xiiORN0BTIRA\nT+DddTx8Xcly4wj9vQFdGUGLrJnzB3xZAgMBAAGjggHVMIIB0TAJBgNVHRMEAjAA\nMB8GA1UdIwQYMBaAFPe+fCFgkds9G3vYOjKBad+ebH+bMIIBHAYDVR0gBIIBEzCC\nAQ8wggELBgkqhkiG92NkBQEwgf0wgcMGCCsGAQUFBwICMIG2DIGzUmVsaWFuY2Ug\nb24gdGhpcyBjZXJ0aWZpY2F0ZSBieSBhbnkgcGFydHkgYXNzdW1lcyBhY2NlcHRh\nbmNlIG9mIHRoZSB0aGVuIGFwcGxpY2FibGUgc3RhbmRhcmQgdGVybXMgYW5kIGNv\nbmRpdGlvbnMgb2YgdXNlLCBjZXJ0aWZpY2F0ZSBwb2xpY3kgYW5kIGNlcnRpZmlj\nYXRpb24gcHJhY3RpY2Ugc3RhdGVtZW50cy4wNQYIKwYBBQUHAgEWKWh0dHA6Ly93\nd3cuYXBwbGUuY29tL2NlcnRpZmljYXRlYXV0aG9yaXR5MBMGA1UdJQQMMAoGCCsG\nAQUFBwMCMDAGA1UdHwQpMCcwJaAjoCGGH2h0dHA6Ly9jcmwuYXBwbGUuY29tL2Fh\naTJjYS5jcmwwHQYDVR0OBBYEFDj4Jizt9bQX7dn3ypIanvaNIy8fMAsGA1UdDwQE\nAwIHgDAQBgoqhkiG92NkBgMCBAIFADANBgkqhkiG9w0BAQsFAAOCAQEARmLmy4Mh\n80hTBHMj2whrC2LR0dIe2ngAUwYGSocyPZOzlGZYntUvpsNGwflbWSPNxFpVF15z\nexEcLPKM4f9KGdM27s/m/x1Es2us9Vve+wS+N0C84zMC++FJBIxj3yAINXqSpYJv\nbA5wccHlzP9F9Ks7sVNQB8y0mibYahtxVV959gC4522t5SRaEEsd82oTCtXE2Ljg\nfQ1IAmWi4MuMSPwp26oDSwun8Wxyx+sfi/it9YWxD36Ga9mrfIjK1WIHyhge0HHr\nolnvMfxgwI9E5gGV/4bQzPlmsHdz+/pLupWMkALaAxI9D7ajUG7iyyjJBCOpsr1s\nFjDvo6WUkaqMHA==\n-----END CERTIFICATE-----\n"
                                }
                            }
                        }
                    },
                    "summary": "Get the organization's APNS certificate",
                    "tags": [
                        "sm",
                        "configure",
                        "apnsCert"
                    ]
                }
            }
        },
        {
            "ruleId": "add-path",
            "message": "`/organizations/{organizationId}/sm/vppAccounts` - Added",
            "messageHtml": "Path added   <br>\n      <br>\n      - New endpoint\n      <h4>List the VPP accounts in the organization</h4>\n      <p>   \n      <b class=\"mr-4 badge get\">GET</b>  <code>/organizations/{organizationId}/sm/vppAccounts</code>\n      <br>  \n      <pre><code>[\n    {\n        &quot;id&quot;: &quot;1284392014819&quot;,\n        &quot;vppServiceToken&quot;: &quot;eyJleHBEYXRlIjoiMjAyMS0wMi0yNVQxNjo1NToyMy0wODAwIiwidG9rZW4iOiJBZFN4YWxyQmhFK0FhSWUrYTJDbDE1aDg1N0ZkUDkrL2c5c00xUWhlMG1WS0ZKWkdOL0hxRnQxeitSVERSTkNLNkxhMEExellML3JFa2tpOG1pbk8xRDlJWHhZQnBERy8wZllhTE44UlUrMDhYZkZsNlVwenkrRE8wQW41ZGgxWncwSmZiYmlXU21VVG94TFJmV1BCcVE9PSIsIm9yZ05hbWUiOiJNZXJha2kgTExDICsgRGV2ZWxvcGVyIn0=&quot;\n    }\n]</code></pre>\n      </p>\n      <hr>\n      ",
            "path": "/organizations/{organizationId}/sm/vppAccounts",
            "details": {
                "get": {
                    "description": "List the VPP accounts in the organization",
                    "operationId": "getOrganizationSmVppAccounts",
                    "parameters": {
                        "organizationId": {
                            "name": "organizationId",
                            "in": "path",
                            "type": "string",
                            "required": true
                        }
                    },
                    "responses": {
                        "200": {
                            "description": "Successful operation",
                            "examples": {
                                "application/json": [{
                                    "id": "1284392014819",
                                    "vppServiceToken": "eyJleHBEYXRlIjoiMjAyMS0wMi0yNVQxNjo1NToyMy0wODAwIiwidG9rZW4iOiJBZFN4YWxyQmhFK0FhSWUrYTJDbDE1aDg1N0ZkUDkrL2c5c00xUWhlMG1WS0ZKWkdOL0hxRnQxeitSVERSTkNLNkxhMEExellML3JFa2tpOG1pbk8xRDlJWHhZQnBERy8wZllhTE44UlUrMDhYZkZsNlVwenkrRE8wQW41ZGgxWncwSmZiYmlXU21VVG94TFJmV1BCcVE9PSIsIm9yZ05hbWUiOiJNZXJha2kgTExDICsgRGV2ZWxvcGVyIn0="
                                }]
                            }
                        }
                    },
                    "summary": "List the VPP accounts in the organization",
                    "tags": [
                        "sm",
                        "configure",
                        "vppAccounts"
                    ],
                    "consumes": [
                        "application/json"
                    ],
                    "produces": [
                        "application/json"
                    ],
                    "schemes": [
                        "https"
                    ],
                    "security": [{
                        "meraki_api_key": []
                    }]
                }
            },
            "type": "infos",
            "name": "What's Updated",
            "group": "sm",
            "apiDetails": {
                "get": {
                    "description": "List the VPP accounts in the organization",
                    "operationId": "getOrganizationSmVppAccounts",
                    "parameters": [{
                        "name": "organizationId",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }],
                    "responses": {
                        "200": {
                            "description": "Successful operation",
                            "examples": {
                                "application/json": [{
                                    "id": "1284392014819",
                                    "vppServiceToken": "eyJleHBEYXRlIjoiMjAyMS0wMi0yNVQxNjo1NToyMy0wODAwIiwidG9rZW4iOiJBZFN4YWxyQmhFK0FhSWUrYTJDbDE1aDg1N0ZkUDkrL2c5c00xUWhlMG1WS0ZKWkdOL0hxRnQxeitSVERSTkNLNkxhMEExellML3JFa2tpOG1pbk8xRDlJWHhZQnBERy8wZllhTE44UlUrMDhYZkZsNlVwenkrRE8wQW41ZGgxWncwSmZiYmlXU21VVG94TFJmV1BCcVE9PSIsIm9yZ05hbWUiOiJNZXJha2kgTExDICsgRGV2ZWxvcGVyIn0="
                                }]
                            }
                        }
                    },
                    "summary": "List the VPP accounts in the organization",
                    "tags": [
                        "sm",
                        "configure",
                        "vppAccounts"
                    ]
                }
            }
        },
        {
            "ruleId": "add-path",
            "message": "`/organizations/{organizationId}/sm/vppAccounts/{vppAccountId}` - Added",
            "messageHtml": "Path added   <br>\n      <br>\n      - New endpoint\n      <h4>Get a hash containing the unparsed token of the VPP account with the given ID</h4>\n      <p>   \n      <b class=\"mr-4 badge get\">GET</b>  <code>/organizations/{organizationId}/sm/vppAccounts/{vppAccountId}</code>\n      <br>  \n      <pre><code>{\n    &quot;id&quot;: &quot;1284392014819&quot;,\n    &quot;vppServiceToken&quot;: &quot;eyJleHBEYXRlIjoiMjAyMS0wMi0yNVQxNjo1NToyMy0wODAwIiwidG9rZW4iOiJBZFN4YWxyQmhFK0FhSWUrYTJDbDE1aDg1N0ZkUDkrL2c5c00xUWhlMG1WS0ZKWkdOL0hxRnQxeitSVERSTkNLNkxhMEExellML3JFa2tpOG1pbk8xRDlJWHhZQnBERy8wZllhTE44UlUrMDhYZkZsNlVwenkrRE8wQW41ZGgxWncwSmZiYmlXU21VVG94TFJmV1BCcVE9PSIsIm9yZ05hbWUiOiJNZXJha2kgTExDICsgRGV2ZWxvcGVyIn0=&quot;\n}</code></pre>\n      </p>\n      <hr>\n      ",
            "path": "/organizations/{organizationId}/sm/vppAccounts/{vppAccountId}",
            "details": {
                "get": {
                    "description": "Get a hash containing the unparsed token of the VPP account with the given ID",
                    "operationId": "getOrganizationSmVppAccount",
                    "parameters": {
                        "organizationId": {
                            "name": "organizationId",
                            "in": "path",
                            "type": "string",
                            "required": true
                        },
                        "vppAccountId": {
                            "name": "vppAccountId",
                            "in": "path",
                            "type": "string",
                            "required": true
                        }
                    },
                    "responses": {
                        "200": {
                            "description": "Successful operation",
                            "examples": {
                                "application/json": {
                                    "id": "1284392014819",
                                    "vppServiceToken": "eyJleHBEYXRlIjoiMjAyMS0wMi0yNVQxNjo1NToyMy0wODAwIiwidG9rZW4iOiJBZFN4YWxyQmhFK0FhSWUrYTJDbDE1aDg1N0ZkUDkrL2c5c00xUWhlMG1WS0ZKWkdOL0hxRnQxeitSVERSTkNLNkxhMEExellML3JFa2tpOG1pbk8xRDlJWHhZQnBERy8wZllhTE44UlUrMDhYZkZsNlVwenkrRE8wQW41ZGgxWncwSmZiYmlXU21VVG94TFJmV1BCcVE9PSIsIm9yZ05hbWUiOiJNZXJha2kgTExDICsgRGV2ZWxvcGVyIn0="
                                }
                            }
                        }
                    },
                    "summary": "Get a hash containing the unparsed token of the VPP account with the given ID",
                    "tags": [
                        "sm",
                        "configure",
                        "vppAccounts"
                    ],
                    "consumes": [
                        "application/json"
                    ],
                    "produces": [
                        "application/json"
                    ],
                    "schemes": [
                        "https"
                    ],
                    "security": [{
                        "meraki_api_key": []
                    }]
                }
            },
            "type": "infos",
            "name": "What's Updated",
            "group": "sm",
            "apiDetails": {
                "get": {
                    "description": "Get a hash containing the unparsed token of the VPP account with the given ID",
                    "operationId": "getOrganizationSmVppAccount",
                    "parameters": [{
                            "name": "organizationId",
                            "in": "path",
                            "type": "string",
                            "required": true
                        },
                        {
                            "name": "vppAccountId",
                            "in": "path",
                            "type": "string",
                            "required": true
                        }
                    ],
                    "responses": {
                        "200": {
                            "description": "Successful operation",
                            "examples": {
                                "application/json": {
                                    "id": "1284392014819",
                                    "vppServiceToken": "eyJleHBEYXRlIjoiMjAyMS0wMi0yNVQxNjo1NToyMy0wODAwIiwidG9rZW4iOiJBZFN4YWxyQmhFK0FhSWUrYTJDbDE1aDg1N0ZkUDkrL2c5c00xUWhlMG1WS0ZKWkdOL0hxRnQxeitSVERSTkNLNkxhMEExellML3JFa2tpOG1pbk8xRDlJWHhZQnBERy8wZllhTE44UlUrMDhYZkZsNlVwenkrRE8wQW41ZGgxWncwSmZiYmlXU21VVG94TFJmV1BCcVE9PSIsIm9yZ05hbWUiOiJNZXJha2kgTExDICsgRGV2ZWxvcGVyIn0="
                                }
                            }
                        }
                    },
                    "summary": "Get a hash containing the unparsed token of the VPP account with the given ID",
                    "tags": [
                        "sm",
                        "configure",
                        "vppAccounts"
                    ]
                }
            }
        },
        {
            "kind": "E",
            "path": [
                "info",
                "description"
            ],
            "lhs": "The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.\n\n> Date: 06 May, 2020\n>\n> [What's New](https://meraki.io/whats-new/)\n\n---\n\n[API Documentation](https://meraki.io/api)\n\n[Community Support](https://meraki.io/community)\n\n[Meraki Homepage](https://www.meraki.com)\n",
            "rhs": "The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.\n\n> Date: 02 September, 2020\n>\n> [What's New](https://meraki.io/whats-new/)\n\n---\n\n[API Documentation](https://meraki.io/api)\n\n[Community Support](https://meraki.io/community)\n\n[Meraki Homepage](https://www.meraki.com)\n",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "D",
            "path": [
                "info",
                "x-codegen-settings"
            ],
            "lhs": {
                "appendContentHeaders": true,
                "brandLabel": "meraki",
                "collectParameters": true,
                "doNotSplitWords": [
                    "ACLs",
                    "NetFlow",
                    "SSIDs",
                    "VLANs"
                ],
                "generateAdvancedDocs": true,
                "generateAsyncCode": true,
                "projectName": "meraki",
                "sortResources": true,
                "useEnumPostfix": true,
                "useMethodPrefix": false,
                "useModelPostfix": true,
                "validateRequiredParameters": true
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "D",
            "path": [
                "paths",
                "/devices/{serial}/camera/analytics/live",
                "get",
                "responses",
                "200",
                "schema",
                "x-is-dynamic"
            ],
            "lhs": true,
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "paths",
                "/devices/{serial}/camera/analytics/live",
                "get",
                "tags"
            ],
            "index": 3,
            "item": {
                "kind": "N",
                "rhs": "live"
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "paths",
                "/devices/{serial}/camera/analytics/live",
                "get",
                "tags"
            ],
            "index": 2,
            "item": {
                "kind": "N",
                "rhs": "analytics"
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "paths",
                "/devices/{serial}/camera/analytics/live",
                "get",
                "tags"
            ],
            "index": 1,
            "item": {
                "kind": "N",
                "rhs": "monitor"
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "paths",
                "/devices/{serial}/camera/analytics/live",
                "get",
                "tags",
                0
            ],
            "lhs": "MV Sense",
            "rhs": "camera",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "D",
            "path": [
                "paths",
                "/devices/{serial}/camera/analytics/overview",
                "get",
                "responses",
                "200",
                "schema",
                "x-is-dynamic"
            ],
            "lhs": true,
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "paths",
                "/devices/{serial}/camera/analytics/overview",
                "get",
                "tags"
            ],
            "index": 3,
            "item": {
                "kind": "N",
                "rhs": "overview"
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "paths",
                "/devices/{serial}/camera/analytics/overview",
                "get",
                "tags"
            ],
            "index": 2,
            "item": {
                "kind": "N",
                "rhs": "analytics"
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "paths",
                "/devices/{serial}/camera/analytics/overview",
                "get",
                "tags"
            ],
            "index": 1,
            "item": {
                "kind": "N",
                "rhs": "monitor"
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "paths",
                "/devices/{serial}/camera/analytics/overview",
                "get",
                "tags",
                0
            ],
            "lhs": "MV Sense",
            "rhs": "camera",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "D",
            "path": [
                "paths",
                "/devices/{serial}/camera/analytics/recent",
                "get",
                "responses",
                "200",
                "schema",
                "x-is-dynamic"
            ],
            "lhs": true,
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "paths",
                "/devices/{serial}/camera/analytics/recent",
                "get",
                "tags"
            ],
            "index": 3,
            "item": {
                "kind": "N",
                "rhs": "recent"
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "paths",
                "/devices/{serial}/camera/analytics/recent",
                "get",
                "tags"
            ],
            "index": 2,
            "item": {
                "kind": "N",
                "rhs": "analytics"
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "paths",
                "/devices/{serial}/camera/analytics/recent",
                "get",
                "tags"
            ],
            "index": 1,
            "item": {
                "kind": "N",
                "rhs": "monitor"
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "paths",
                "/devices/{serial}/camera/analytics/recent",
                "get",
                "tags",
                0
            ],
            "lhs": "MV Sense",
            "rhs": "camera",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "D",
            "path": [
                "paths",
                "/devices/{serial}/camera/analytics/zones",
                "get",
                "responses",
                "200",
                "schema",
                "x-is-dynamic"
            ],
            "lhs": true,
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "paths",
                "/devices/{serial}/camera/analytics/zones",
                "get",
                "tags"
            ],
            "index": 3,
            "item": {
                "kind": "N",
                "rhs": "zones"
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "paths",
                "/devices/{serial}/camera/analytics/zones",
                "get",
                "tags"
            ],
            "index": 2,
            "item": {
                "kind": "N",
                "rhs": "analytics"
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "paths",
                "/devices/{serial}/camera/analytics/zones",
                "get",
                "tags"
            ],
            "index": 1,
            "item": {
                "kind": "N",
                "rhs": "monitor"
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "paths",
                "/devices/{serial}/camera/analytics/zones",
                "get",
                "tags",
                0
            ],
            "lhs": "MV Sense",
            "rhs": "camera",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "D",
            "path": [
                "paths",
                "/devices/{serial}/camera/analytics/zones/{zoneId}/history",
                "get",
                "responses",
                "200",
                "schema",
                "x-is-dynamic"
            ],
            "lhs": true,
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "paths",
                "/devices/{serial}/camera/analytics/zones/{zoneId}/history",
                "get",
                "tags"
            ],
            "index": 4,
            "item": {
                "kind": "N",
                "rhs": "history"
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "paths",
                "/devices/{serial}/camera/analytics/zones/{zoneId}/history",
                "get",
                "tags"
            ],
            "index": 3,
            "item": {
                "kind": "N",
                "rhs": "zones"
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "paths",
                "/devices/{serial}/camera/analytics/zones/{zoneId}/history",
                "get",
                "tags"
            ],
            "index": 2,
            "item": {
                "kind": "N",
                "rhs": "analytics"
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "paths",
                "/devices/{serial}/camera/analytics/zones/{zoneId}/history",
                "get",
                "tags"
            ],
            "index": 1,
            "item": {
                "kind": "N",
                "rhs": "monitor"
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "paths",
                "/devices/{serial}/camera/analytics/zones/{zoneId}/history",
                "get",
                "tags",
                0
            ],
            "lhs": "MV Sense",
            "rhs": "camera",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "D",
            "path": [
                "paths",
                "/devices/{serial}/camera/video/settings",
                "get",
                "responses",
                "200",
                "schema",
                "x-is-dynamic"
            ],
            "lhs": true,
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "paths",
                "/devices/{serial}/camera/video/settings",
                "get",
                "tags"
            ],
            "index": 3,
            "item": {
                "kind": "N",
                "rhs": "settings"
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "paths",
                "/devices/{serial}/camera/video/settings",
                "get",
                "tags"
            ],
            "index": 2,
            "item": {
                "kind": "N",
                "rhs": "video"
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "paths",
                "/devices/{serial}/camera/video/settings",
                "get",
                "tags"
            ],
            "index": 1,
            "item": {
                "kind": "N",
                "rhs": "configure"
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "paths",
                "/devices/{serial}/camera/video/settings",
                "get",
                "tags",
                0
            ],
            "lhs": "Cameras",
            "rhs": "camera",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "D",
            "path": [
                "paths",
                "/devices/{serial}/camera/video/settings",
                "put",
                "responses",
                "200",
                "schema",
                "x-is-dynamic"
            ],
            "lhs": true,
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "paths",
                "/devices/{serial}/camera/video/settings",
                "put",
                "tags"
            ],
            "index": 3,
            "item": {
                "kind": "N",
                "rhs": "settings"
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "paths",
                "/devices/{serial}/camera/video/settings",
                "put",
                "tags"
            ],
            "index": 2,
            "item": {
                "kind": "N",
                "rhs": "video"
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "paths",
                "/devices/{serial}/camera/video/settings",
                "put",
                "tags"
            ],
            "index": 1,
            "item": {
                "kind": "N",
                "rhs": "configure"
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "paths",
                "/devices/{serial}/camera/video/settings",
                "put",
                "tags",
                0
            ],
            "lhs": "Cameras",
            "rhs": "camera",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "D",
            "path": [
                "paths",
                "/devices/{serial}/clients",
                "get",
                "responses",
                "200",
                "schema",
                "x-is-dynamic"
            ],
            "lhs": true,
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "paths",
                "/devices/{serial}/clients",
                "get",
                "tags"
            ],
            "index": 2,
            "item": {
                "kind": "N",
                "rhs": "clients"
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "paths",
                "/devices/{serial}/clients",
                "get",
                "tags"
            ],
            "index": 1,
            "item": {
                "kind": "N",
                "rhs": "monitor"
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "paths",
                "/devices/{serial}/clients",
                "get",
                "tags",
                0
            ],
            "lhs": "Clients",
            "rhs": "devices",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "D",
            "path": [
                "paths",
                "/devices/{serial}/switch/ports/cycle",
                "post",
                "responses",
                "200",
                "schema",
                "x-is-dynamic"
            ],
            "lhs": true,
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "paths",
                "/devices/{serial}/switch/ports/cycle",
                "post",
                "tags"
            ],
            "index": 2,
            "item": {
                "kind": "N",
                "rhs": "ports"
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "paths",
                "/devices/{serial}/switch/ports/cycle",
                "post",
                "tags"
            ],
            "index": 1,
            "item": {
                "kind": "N",
                "rhs": "liveTools"
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "paths",
                "/devices/{serial}/switch/ports/cycle",
                "post",
                "tags",
                0
            ],
            "lhs": "Devices",
            "rhs": "switch",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "D",
            "path": [
                "paths",
                "/devices/{serial}/wireless/bluetooth/settings",
                "get",
                "responses",
                "200",
                "schema",
                "x-is-dynamic"
            ],
            "lhs": true,
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "paths",
                "/devices/{serial}/wireless/bluetooth/settings",
                "get",
                "tags"
            ],
            "index": 3,
            "item": {
                "kind": "N",
                "rhs": "settings"
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "paths",
                "/devices/{serial}/wireless/bluetooth/settings",
                "get",
                "tags"
            ],
            "index": 2,
            "item": {
                "kind": "N",
                "rhs": "bluetooth"
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "paths",
                "/devices/{serial}/wireless/bluetooth/settings",
                "get",
                "tags"
            ],
            "index": 1,
            "item": {
                "kind": "N",
                "rhs": "configure"
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "paths",
                "/devices/{serial}/wireless/bluetooth/settings",
                "get",
                "tags",
                0
            ],
            "lhs": "Bluetooth settings",
            "rhs": "wireless",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "D",
            "path": [
                "paths",
                "/devices/{serial}/wireless/bluetooth/settings",
                "put",
                "responses",
                "200",
                "schema",
                "x-is-dynamic"
            ],
            "lhs": true,
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "paths",
                "/devices/{serial}/wireless/bluetooth/settings",
                "put",
                "tags"
            ],
            "index": 3,
            "item": {
                "kind": "N",
                "rhs": "settings"
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "paths",
                "/devices/{serial}/wireless/bluetooth/settings",
                "put",
                "tags"
            ],
            "index": 2,
            "item": {
                "kind": "N",
                "rhs": "bluetooth"
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "paths",
                "/devices/{serial}/wireless/bluetooth/settings",
                "put",
                "tags"
            ],
            "index": 1,
            "item": {
                "kind": "N",
                "rhs": "configure"
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "paths",
                "/devices/{serial}/wireless/bluetooth/settings",
                "put",
                "tags",
                0
            ],
            "lhs": "Bluetooth settings",
            "rhs": "wireless",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "D",
            "path": [
                "paths",
                "/networks/{networkId}",
                "get",
                "responses",
                "200",
                "schema",
                "x-is-dynamic"
            ],
            "lhs": true,
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "paths",
                "/networks/{networkId}",
                "get",
                "responses",
                "200",
                "examples",
                "application/json",
                "tags"
            ],
            "lhs": " tag1 tag2 ",
            "rhs": [
                "tag1",
                "tag2"
            ],
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "D",
            "path": [
                "paths",
                "/networks/{networkId}",
                "get",
                "responses",
                "200",
                "examples",
                "application/json",
                "type"
            ],
            "lhs": "combined",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "D",
            "path": [
                "paths",
                "/networks/{networkId}",
                "get",
                "responses",
                "200",
                "examples",
                "application/json",
                "disableMyMerakiCom"
            ],
            "lhs": false,
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "paths",
                "/networks/{networkId}",
                "get",
                "tags"
            ],
            "index": 1,
            "item": {
                "kind": "N",
                "rhs": "configure"
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "paths",
                "/networks/{networkId}",
                "get",
                "tags",
                0
            ],
            "lhs": "Networks",
            "rhs": "networks",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "paths",
                "/networks/{networkId}",
                "put",
                "parameters",
                "updateNetwork",
                "schema",
                "properties",
                "tags",
                "description"
            ],
            "lhs": "A space-separated list of tags to be applied to the network",
            "rhs": "A list of tags to be applied to the network",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "N",
            "path": [
                "paths",
                "/networks/{networkId}",
                "put",
                "parameters",
                "updateNetwork",
                "schema",
                "properties",
                "tags",
                "items"
            ],
            "rhs": {
                "type": "string"
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "paths",
                "/networks/{networkId}",
                "put",
                "parameters",
                "updateNetwork",
                "schema",
                "example",
                "tags"
            ],
            "lhs": " tag1 tag2 ",
            "rhs": [
                "tag1",
                "tag2"
            ],
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "D",
            "path": [
                "paths",
                "/networks/{networkId}",
                "put",
                "parameters",
                "updateNetwork",
                "schema",
                "example",
                "disableMyMerakiCom"
            ],
            "lhs": false,
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "D",
            "path": [
                "paths",
                "/networks/{networkId}",
                "put",
                "responses",
                "200",
                "schema",
                "x-is-dynamic"
            ],
            "lhs": true,
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "paths",
                "/networks/{networkId}",
                "put",
                "responses",
                "200",
                "examples",
                "application/json",
                "tags"
            ],
            "lhs": " tag1 tag2 ",
            "rhs": [
                "tag1",
                "tag2"
            ],
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "D",
            "path": [
                "paths",
                "/networks/{networkId}",
                "put",
                "responses",
                "200",
                "examples",
                "application/json",
                "type"
            ],
            "lhs": "combined",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "D",
            "path": [
                "paths",
                "/networks/{networkId}",
                "put",
                "responses",
                "200",
                "examples",
                "application/json",
                "disableMyMerakiCom"
            ],
            "lhs": false,
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "paths",
                "/networks/{networkId}",
                "put",
                "tags"
            ],
            "index": 1,
            "item": {
                "kind": "N",
                "rhs": "configure"
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "paths",
                "/networks/{networkId}",
                "put",
                "tags",
                0
            ],
            "lhs": "Networks",
            "rhs": "networks",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "paths",
                "/networks/{networkId}",
                "delete",
                "tags"
            ],
            "index": 1,
            "item": {
                "kind": "N",
                "rhs": "configure"
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "paths",
                "/networks/{networkId}",
                "delete",
                "tags",
                0
            ],
            "lhs": "Networks",
            "rhs": "networks",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "D",
            "path": [
                "paths",
                "/networks/{networkId}/appliance/firewall/inboundFirewallRules",
                "get",
                "responses",
                "200",
                "schema",
                "x-is-dynamic"
            ],
            "lhs": true,
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "paths",
                "/networks/{networkId}/appliance/firewall/inboundFirewallRules",
                "get",
                "tags"
            ],
            "index": 3,
            "item": {
                "kind": "N",
                "rhs": "inboundFirewallRules"
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "paths",
                "/networks/{networkId}/appliance/firewall/inboundFirewallRules",
                "get",
                "tags"
            ],
            "index": 2,
            "item": {
                "kind": "N",
                "rhs": "firewall"
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "paths",
                "/networks/{networkId}/appliance/firewall/inboundFirewallRules",
                "get",
                "tags"
            ],
            "index": 1,
            "item": {
                "kind": "N",
                "rhs": "configure"
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "paths",
                "/networks/{networkId}/appliance/firewall/inboundFirewallRules",
                "get",
                "tags",
                0
            ],
            "lhs": "MX inbound firewall",
            "rhs": "appliance",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "D",
            "path": [
                "paths",
                "/networks/{networkId}/appliance/firewall/inboundFirewallRules",
                "put",
                "responses",
                "200",
                "schema",
                "x-is-dynamic"
            ],
            "lhs": true,
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "paths",
                "/networks/{networkId}/appliance/firewall/inboundFirewallRules",
                "put",
                "tags"
            ],
            "index": 3,
            "item": {
                "kind": "N",
                "rhs": "inboundFirewallRules"
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "paths",
                "/networks/{networkId}/appliance/firewall/inboundFirewallRules",
                "put",
                "tags"
            ],
            "index": 2,
            "item": {
                "kind": "N",
                "rhs": "firewall"
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "paths",
                "/networks/{networkId}/appliance/firewall/inboundFirewallRules",
                "put",
                "tags"
            ],
            "index": 1,
            "item": {
                "kind": "N",
                "rhs": "configure"
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "paths",
                "/networks/{networkId}/appliance/firewall/inboundFirewallRules",
                "put",
                "tags",
                0
            ],
            "lhs": "MX inbound firewall",
            "rhs": "appliance",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "N",
            "path": [
                "paths",
                "/networks/{networkId}/bind",
                "post",
                "responses",
                "200",
                "schema"
            ],
            "rhs": {
                "type": "object"
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "N",
            "path": [
                "paths",
                "/networks/{networkId}/bind",
                "post",
                "responses",
                "200",
                "examples"
            ],
            "rhs": {
                "application/json": {
                    "id": "L_123456",
                    "organizationId": "2930418",
                    "name": "Long Island Office",
                    "timeZone": "America/Los_Angeles",
                    "tags": [
                        "tag1",
                        "tag2"
                    ],
                    "productTypes": [
                        "appliance",
                        "switch",
                        "wireless"
                    ],
                    "enrollmentString": "long-island-office",
                    "configTemplateId": "N_23952905"
                }
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "paths",
                "/networks/{networkId}/bind",
                "post",
                "tags"
            ],
            "index": 1,
            "item": {
                "kind": "N",
                "rhs": "configure"
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "paths",
                "/networks/{networkId}/bind",
                "post",
                "tags",
                0
            ],
            "lhs": "Networks",
            "rhs": "networks",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "D",
            "path": [
                "paths",
                "/networks/{networkId}/bluetoothClients",
                "get",
                "responses",
                "200",
                "schema",
                "x-is-dynamic"
            ],
            "lhs": true,
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "paths",
                "/networks/{networkId}/bluetoothClients",
                "get",
                "tags"
            ],
            "index": 2,
            "item": {
                "kind": "N",
                "rhs": "bluetoothClients"
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "paths",
                "/networks/{networkId}/bluetoothClients",
                "get",
                "tags"
            ],
            "index": 1,
            "item": {
                "kind": "N",
                "rhs": "monitor"
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "paths",
                "/networks/{networkId}/bluetoothClients",
                "get",
                "tags",
                0
            ],
            "lhs": "Bluetooth clients",
            "rhs": "networks",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "D",
            "path": [
                "paths",
                "/networks/{networkId}/bluetoothClients/{bluetoothClientId}",
                "get",
                "responses",
                "200",
                "schema",
                "x-is-dynamic"
            ],
            "lhs": true,
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "paths",
                "/networks/{networkId}/bluetoothClients/{bluetoothClientId}",
                "get",
                "tags"
            ],
            "index": 2,
            "item": {
                "kind": "N",
                "rhs": "bluetoothClients"
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "paths",
                "/networks/{networkId}/bluetoothClients/{bluetoothClientId}",
                "get",
                "tags"
            ],
            "index": 1,
            "item": {
                "kind": "N",
                "rhs": "monitor"
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "paths",
                "/networks/{networkId}/bluetoothClients/{bluetoothClientId}",
                "get",
                "tags",
                0
            ],
            "lhs": "Bluetooth clients",
            "rhs": "networks",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "D",
            "path": [
                "paths",
                "/networks/{networkId}/camera/qualityRetentionProfiles",
                "get",
                "responses",
                "200",
                "schema",
                "x-is-dynamic"
            ],
            "lhs": true,
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "paths",
                "/networks/{networkId}/camera/qualityRetentionProfiles",
                "get",
                "tags"
            ],
            "index": 2,
            "item": {
                "kind": "N",
                "rhs": "qualityRetentionProfiles"
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "paths",
                "/networks/{networkId}/camera/qualityRetentionProfiles",
                "get",
                "tags"
            ],
            "index": 1,
            "item": {
                "kind": "N",
                "rhs": "configure"
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "paths",
                "/networks/{networkId}/camera/qualityRetentionProfiles",
                "get",
                "tags",
                0
            ],
            "lhs": "Camera quality retention profiles",
            "rhs": "camera",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "D",
            "path": [
                "paths",
                "/networks/{networkId}/camera/qualityRetentionProfiles",
                "post",
                "responses",
                "200",
                "schema",
                "x-is-dynamic"
            ],
            "lhs": true,
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "paths",
                "/networks/{networkId}/camera/qualityRetentionProfiles",
                "post",
                "tags"
            ],
            "index": 2,
            "item": {
                "kind": "N",
                "rhs": "qualityRetentionProfiles"
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "paths",
                "/networks/{networkId}/camera/qualityRetentionProfiles",
                "post",
                "tags"
            ],
            "index": 1,
            "item": {
                "kind": "N",
                "rhs": "configure"
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "paths",
                "/networks/{networkId}/camera/qualityRetentionProfiles",
                "post",
                "tags",
                0
            ],
            "lhs": "Camera quality retention profiles",
            "rhs": "camera",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "D",
            "path": [
                "paths",
                "/networks/{networkId}/camera/qualityRetentionProfiles/{qualityRetentionProfileId}",
                "get",
                "responses",
                "200",
                "schema",
                "x-is-dynamic"
            ],
            "lhs": true,
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "paths",
                "/networks/{networkId}/camera/qualityRetentionProfiles/{qualityRetentionProfileId}",
                "get",
                "tags"
            ],
            "index": 2,
            "item": {
                "kind": "N",
                "rhs": "qualityRetentionProfiles"
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "paths",
                "/networks/{networkId}/camera/qualityRetentionProfiles/{qualityRetentionProfileId}",
                "get",
                "tags"
            ],
            "index": 1,
            "item": {
                "kind": "N",
                "rhs": "configure"
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "paths",
                "/networks/{networkId}/camera/qualityRetentionProfiles/{qualityRetentionProfileId}",
                "get",
                "tags",
                0
            ],
            "lhs": "Camera quality retention profiles",
            "rhs": "camera",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "D",
            "path": [
                "paths",
                "/networks/{networkId}/camera/qualityRetentionProfiles/{qualityRetentionProfileId}",
                "put",
                "responses",
                "200",
                "schema",
                "x-is-dynamic"
            ],
            "lhs": true,
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "paths",
                "/networks/{networkId}/camera/qualityRetentionProfiles/{qualityRetentionProfileId}",
                "put",
                "tags"
            ],
            "index": 2,
            "item": {
                "kind": "N",
                "rhs": "qualityRetentionProfiles"
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "paths",
                "/networks/{networkId}/camera/qualityRetentionProfiles/{qualityRetentionProfileId}",
                "put",
                "tags"
            ],
            "index": 1,
            "item": {
                "kind": "N",
                "rhs": "configure"
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "paths",
                "/networks/{networkId}/camera/qualityRetentionProfiles/{qualityRetentionProfileId}",
                "put",
                "tags",
                0
            ],
            "lhs": "Camera quality retention profiles",
            "rhs": "camera",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "paths",
                "/networks/{networkId}/camera/qualityRetentionProfiles/{qualityRetentionProfileId}",
                "delete",
                "tags"
            ],
            "index": 2,
            "item": {
                "kind": "N",
                "rhs": "qualityRetentionProfiles"
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "paths",
                "/networks/{networkId}/camera/qualityRetentionProfiles/{qualityRetentionProfileId}",
                "delete",
                "tags"
            ],
            "index": 1,
            "item": {
                "kind": "N",
                "rhs": "configure"
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "paths",
                "/networks/{networkId}/camera/qualityRetentionProfiles/{qualityRetentionProfileId}",
                "delete",
                "tags",
                0
            ],
            "lhs": "Camera quality retention profiles",
            "rhs": "camera",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "D",
            "path": [
                "paths",
                "/networks/{networkId}/camera/schedules",
                "get",
                "responses",
                "200",
                "schema",
                "x-is-dynamic"
            ],
            "lhs": true,
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "paths",
                "/networks/{networkId}/camera/schedules",
                "get",
                "tags"
            ],
            "index": 2,
            "item": {
                "kind": "N",
                "rhs": "schedules"
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "paths",
                "/networks/{networkId}/camera/schedules",
                "get",
                "tags"
            ],
            "index": 1,
            "item": {
                "kind": "N",
                "rhs": "configure"
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "paths",
                "/networks/{networkId}/camera/schedules",
                "get",
                "tags",
                0
            ],
            "lhs": "Cameras",
            "rhs": "camera",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "D",
            "path": [
                "paths",
                "/networks/{networkId}/clients",
                "get",
                "responses",
                "200",
                "schema",
                "x-is-dynamic"
            ],
            "lhs": true,
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "paths",
                "/networks/{networkId}/clients",
                "get",
                "tags"
            ],
            "index": 2,
            "item": {
                "kind": "N",
                "rhs": "clients"
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "paths",
                "/networks/{networkId}/clients",
                "get",
                "tags"
            ],
            "index": 1,
            "item": {
                "kind": "N",
                "rhs": "monitor"
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "paths",
                "/networks/{networkId}/clients",
                "get",
                "tags",
                0
            ],
            "lhs": "Clients",
            "rhs": "networks",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "paths",
                "/networks/{networkId}/clients/provision",
                "post",
                "parameters",
                "provisionNetworkClients",
                "schema",
                "properties",
                "devicePolicy",
                "enum",
                1
            ],
            "lhs": "Whitelisted",
            "rhs": "Allowed",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "paths",
                "/networks/{networkId}/clients/provision",
                "post",
                "parameters",
                "provisionNetworkClients",
                "schema",
                "properties",
                "devicePolicy",
                "description"
            ],
            "lhs": "The policy to apply to the specified client. Can be 'Group policy', 'Whitelisted', 'Blocked', 'Per connection' or 'Normal'. Required.",
            "rhs": "The policy to apply to the specified client. Can be 'Group policy', 'Allowed', 'Blocked', 'Per connection' or 'Normal'. Required.",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "paths",
                "/networks/{networkId}/clients/provision",
                "post",
                "parameters",
                "provisionNetworkClients",
                "schema",
                "properties",
                "policiesBySecurityAppliance",
                "properties",
                "devicePolicy",
                "enum",
                0
            ],
            "lhs": "Whitelisted",
            "rhs": "Allowed",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "paths",
                "/networks/{networkId}/clients/provision",
                "post",
                "parameters",
                "provisionNetworkClients",
                "schema",
                "properties",
                "policiesBySecurityAppliance",
                "properties",
                "devicePolicy",
                "description"
            ],
            "lhs": "The policy to apply to the specified client. Can be 'Whitelisted', 'Blocked' or 'Normal'. Required.",
            "rhs": "The policy to apply to the specified client. Can be 'Allowed', 'Blocked' or 'Normal'. Required.",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "paths",
                "/networks/{networkId}/clients/provision",
                "post",
                "parameters",
                "provisionNetworkClients",
                "schema",
                "properties",
                "policiesBySsid",
                "properties",
                "0",
                "properties",
                "devicePolicy",
                "enum",
                0
            ],
            "lhs": "Whitelisted",
            "rhs": "Allowed",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "paths",
                "/networks/{networkId}/clients/provision",
                "post",
                "parameters",
                "provisionNetworkClients",
                "schema",
                "properties",
                "policiesBySsid",
                "properties",
                "0",
                "properties",
                "devicePolicy",
                "description"
            ],
            "lhs": "The policy to apply to the specified client. Can be 'Whitelisted', 'Blocked', 'Normal' or 'Group policy'. Required.",
            "rhs": "The policy to apply to the specified client. Can be 'Allowed', 'Blocked', 'Normal' or 'Group policy'. Required.",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "paths",
                "/networks/{networkId}/clients/provision",
                "post",
                "parameters",
                "provisionNetworkClients",
                "schema",
                "properties",
                "policiesBySsid",
                "properties",
                "1",
                "properties",
                "devicePolicy",
                "enum",
                0
            ],
            "lhs": "Whitelisted",
            "rhs": "Allowed",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "paths",
                "/networks/{networkId}/clients/provision",
                "post",
                "parameters",
                "provisionNetworkClients",
                "schema",
                "properties",
                "policiesBySsid",
                "properties",
                "1",
                "properties",
                "devicePolicy",
                "description"
            ],
            "lhs": "The policy to apply to the specified client. Can be 'Whitelisted', 'Blocked', 'Normal' or 'Group policy'. Required.",
            "rhs": "The policy to apply to the specified client. Can be 'Allowed', 'Blocked', 'Normal' or 'Group policy'. Required.",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "paths",
                "/networks/{networkId}/clients/provision",
                "post",
                "parameters",
                "provisionNetworkClients",
                "schema",
                "properties",
                "policiesBySsid",
                "properties",
                "2",
                "properties",
                "devicePolicy",
                "enum",
                0
            ],
            "lhs": "Whitelisted",
            "rhs": "Allowed",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "paths",
                "/networks/{networkId}/clients/provision",
                "post",
                "parameters",
                "provisionNetworkClients",
                "schema",
                "properties",
                "policiesBySsid",
                "properties",
                "2",
                "properties",
                "devicePolicy",
                "description"
            ],
            "lhs": "The policy to apply to the specified client. Can be 'Whitelisted', 'Blocked', 'Normal' or 'Group policy'. Required.",
            "rhs": "The policy to apply to the specified client. Can be 'Allowed', 'Blocked', 'Normal' or 'Group policy'. Required.",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "paths",
                "/networks/{networkId}/clients/provision",
                "post",
                "parameters",
                "provisionNetworkClients",
                "schema",
                "properties",
                "policiesBySsid",
                "properties",
                "3",
                "properties",
                "devicePolicy",
                "enum",
                0
            ],
            "lhs": "Whitelisted",
            "rhs": "Allowed",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "paths",
                "/networks/{networkId}/clients/provision",
                "post",
                "parameters",
                "provisionNetworkClients",
                "schema",
                "properties",
                "policiesBySsid",
                "properties",
                "3",
                "properties",
                "devicePolicy",
                "description"
            ],
            "lhs": "The policy to apply to the specified client. Can be 'Whitelisted', 'Blocked', 'Normal' or 'Group policy'. Required.",
            "rhs": "The policy to apply to the specified client. Can be 'Allowed', 'Blocked', 'Normal' or 'Group policy'. Required.",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "paths",
                "/networks/{networkId}/clients/provision",
                "post",
                "parameters",
                "provisionNetworkClients",
                "schema",
                "properties",
                "policiesBySsid",
                "properties",
                "4",
                "properties",
                "devicePolicy",
                "enum",
                0
            ],
            "lhs": "Whitelisted",
            "rhs": "Allowed",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "paths",
                "/networks/{networkId}/clients/provision",
                "post",
                "parameters",
                "provisionNetworkClients",
                "schema",
                "properties",
                "policiesBySsid",
                "properties",
                "4",
                "properties",
                "devicePolicy",
                "description"
            ],
            "lhs": "The policy to apply to the specified client. Can be 'Whitelisted', 'Blocked', 'Normal' or 'Group policy'. Required.",
            "rhs": "The policy to apply to the specified client. Can be 'Allowed', 'Blocked', 'Normal' or 'Group policy'. Required.",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "paths",
                "/networks/{networkId}/clients/provision",
                "post",
                "parameters",
                "provisionNetworkClients",
                "schema",
                "properties",
                "policiesBySsid",
                "properties",
                "5",
                "properties",
                "devicePolicy",
                "enum",
                0
            ],
            "lhs": "Whitelisted",
            "rhs": "Allowed",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "paths",
                "/networks/{networkId}/clients/provision",
                "post",
                "parameters",
                "provisionNetworkClients",
                "schema",
                "properties",
                "policiesBySsid",
                "properties",
                "5",
                "properties",
                "devicePolicy",
                "description"
            ],
            "lhs": "The policy to apply to the specified client. Can be 'Whitelisted', 'Blocked', 'Normal' or 'Group policy'. Required.",
            "rhs": "The policy to apply to the specified client. Can be 'Allowed', 'Blocked', 'Normal' or 'Group policy'. Required.",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "paths",
                "/networks/{networkId}/clients/provision",
                "post",
                "parameters",
                "provisionNetworkClients",
                "schema",
                "properties",
                "policiesBySsid",
                "properties",
                "6",
                "properties",
                "devicePolicy",
                "enum",
                0
            ],
            "lhs": "Whitelisted",
            "rhs": "Allowed",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "paths",
                "/networks/{networkId}/clients/provision",
                "post",
                "parameters",
                "provisionNetworkClients",
                "schema",
                "properties",
                "policiesBySsid",
                "properties",
                "6",
                "properties",
                "devicePolicy",
                "description"
            ],
            "lhs": "The policy to apply to the specified client. Can be 'Whitelisted', 'Blocked', 'Normal' or 'Group policy'. Required.",
            "rhs": "The policy to apply to the specified client. Can be 'Allowed', 'Blocked', 'Normal' or 'Group policy'. Required.",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "paths",
                "/networks/{networkId}/clients/provision",
                "post",
                "parameters",
                "provisionNetworkClients",
                "schema",
                "properties",
                "policiesBySsid",
                "properties",
                "7",
                "properties",
                "devicePolicy",
                "enum",
                0
            ],
            "lhs": "Whitelisted",
            "rhs": "Allowed",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "paths",
                "/networks/{networkId}/clients/provision",
                "post",
                "parameters",
                "provisionNetworkClients",
                "schema",
                "properties",
                "policiesBySsid",
                "properties",
                "7",
                "properties",
                "devicePolicy",
                "description"
            ],
            "lhs": "The policy to apply to the specified client. Can be 'Whitelisted', 'Blocked', 'Normal' or 'Group policy'. Required.",
            "rhs": "The policy to apply to the specified client. Can be 'Allowed', 'Blocked', 'Normal' or 'Group policy'. Required.",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "paths",
                "/networks/{networkId}/clients/provision",
                "post",
                "parameters",
                "provisionNetworkClients",
                "schema",
                "properties",
                "policiesBySsid",
                "properties",
                "8",
                "properties",
                "devicePolicy",
                "enum",
                0
            ],
            "lhs": "Whitelisted",
            "rhs": "Allowed",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "paths",
                "/networks/{networkId}/clients/provision",
                "post",
                "parameters",
                "provisionNetworkClients",
                "schema",
                "properties",
                "policiesBySsid",
                "properties",
                "8",
                "properties",
                "devicePolicy",
                "description"
            ],
            "lhs": "The policy to apply to the specified client. Can be 'Whitelisted', 'Blocked', 'Normal' or 'Group policy'. Required.",
            "rhs": "The policy to apply to the specified client. Can be 'Allowed', 'Blocked', 'Normal' or 'Group policy'. Required.",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "paths",
                "/networks/{networkId}/clients/provision",
                "post",
                "parameters",
                "provisionNetworkClients",
                "schema",
                "properties",
                "policiesBySsid",
                "properties",
                "9",
                "properties",
                "devicePolicy",
                "enum",
                0
            ],
            "lhs": "Whitelisted",
            "rhs": "Allowed",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "paths",
                "/networks/{networkId}/clients/provision",
                "post",
                "parameters",
                "provisionNetworkClients",
                "schema",
                "properties",
                "policiesBySsid",
                "properties",
                "9",
                "properties",
                "devicePolicy",
                "description"
            ],
            "lhs": "The policy to apply to the specified client. Can be 'Whitelisted', 'Blocked', 'Normal' or 'Group policy'. Required.",
            "rhs": "The policy to apply to the specified client. Can be 'Allowed', 'Blocked', 'Normal' or 'Group policy'. Required.",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "paths",
                "/networks/{networkId}/clients/provision",
                "post",
                "parameters",
                "provisionNetworkClients",
                "schema",
                "properties",
                "policiesBySsid",
                "properties",
                "10",
                "properties",
                "devicePolicy",
                "enum",
                0
            ],
            "lhs": "Whitelisted",
            "rhs": "Allowed",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "paths",
                "/networks/{networkId}/clients/provision",
                "post",
                "parameters",
                "provisionNetworkClients",
                "schema",
                "properties",
                "policiesBySsid",
                "properties",
                "10",
                "properties",
                "devicePolicy",
                "description"
            ],
            "lhs": "The policy to apply to the specified client. Can be 'Whitelisted', 'Blocked', 'Normal' or 'Group policy'. Required.",
            "rhs": "The policy to apply to the specified client. Can be 'Allowed', 'Blocked', 'Normal' or 'Group policy'. Required.",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "paths",
                "/networks/{networkId}/clients/provision",
                "post",
                "parameters",
                "provisionNetworkClients",
                "schema",
                "properties",
                "policiesBySsid",
                "properties",
                "11",
                "properties",
                "devicePolicy",
                "enum",
                0
            ],
            "lhs": "Whitelisted",
            "rhs": "Allowed",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "paths",
                "/networks/{networkId}/clients/provision",
                "post",
                "parameters",
                "provisionNetworkClients",
                "schema",
                "properties",
                "policiesBySsid",
                "properties",
                "11",
                "properties",
                "devicePolicy",
                "description"
            ],
            "lhs": "The policy to apply to the specified client. Can be 'Whitelisted', 'Blocked', 'Normal' or 'Group policy'. Required.",
            "rhs": "The policy to apply to the specified client. Can be 'Allowed', 'Blocked', 'Normal' or 'Group policy'. Required.",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "paths",
                "/networks/{networkId}/clients/provision",
                "post",
                "parameters",
                "provisionNetworkClients",
                "schema",
                "properties",
                "policiesBySsid",
                "properties",
                "12",
                "properties",
                "devicePolicy",
                "enum",
                0
            ],
            "lhs": "Whitelisted",
            "rhs": "Allowed",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "paths",
                "/networks/{networkId}/clients/provision",
                "post",
                "parameters",
                "provisionNetworkClients",
                "schema",
                "properties",
                "policiesBySsid",
                "properties",
                "12",
                "properties",
                "devicePolicy",
                "description"
            ],
            "lhs": "The policy to apply to the specified client. Can be 'Whitelisted', 'Blocked', 'Normal' or 'Group policy'. Required.",
            "rhs": "The policy to apply to the specified client. Can be 'Allowed', 'Blocked', 'Normal' or 'Group policy'. Required.",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "paths",
                "/networks/{networkId}/clients/provision",
                "post",
                "parameters",
                "provisionNetworkClients",
                "schema",
                "properties",
                "policiesBySsid",
                "properties",
                "13",
                "properties",
                "devicePolicy",
                "enum",
                0
            ],
            "lhs": "Whitelisted",
            "rhs": "Allowed",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "paths",
                "/networks/{networkId}/clients/provision",
                "post",
                "parameters",
                "provisionNetworkClients",
                "schema",
                "properties",
                "policiesBySsid",
                "properties",
                "13",
                "properties",
                "devicePolicy",
                "description"
            ],
            "lhs": "The policy to apply to the specified client. Can be 'Whitelisted', 'Blocked', 'Normal' or 'Group policy'. Required.",
            "rhs": "The policy to apply to the specified client. Can be 'Allowed', 'Blocked', 'Normal' or 'Group policy'. Required.",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "paths",
                "/networks/{networkId}/clients/provision",
                "post",
                "parameters",
                "provisionNetworkClients",
                "schema",
                "properties",
                "policiesBySsid",
                "properties",
                "14",
                "properties",
                "devicePolicy",
                "enum",
                0
            ],
            "lhs": "Whitelisted",
            "rhs": "Allowed",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "paths",
                "/networks/{networkId}/clients/provision",
                "post",
                "parameters",
                "provisionNetworkClients",
                "schema",
                "properties",
                "policiesBySsid",
                "properties",
                "14",
                "properties",
                "devicePolicy",
                "description"
            ],
            "lhs": "The policy to apply to the specified client. Can be 'Whitelisted', 'Blocked', 'Normal' or 'Group policy'. Required.",
            "rhs": "The policy to apply to the specified client. Can be 'Allowed', 'Blocked', 'Normal' or 'Group policy'. Required.",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "D",
            "path": [
                "paths",
                "/networks/{networkId}/clients/provision",
                "post",
                "parameters",
                "provisionNetworkClients",
                "schema",
                "example",
                "mac"
            ],
            "lhs": "00:11:22:33:44:55",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "D",
            "path": [
                "paths",
                "/networks/{networkId}/clients/provision",
                "post",
                "parameters",
                "provisionNetworkClients",
                "schema",
                "example",
                "name"
            ],
            "lhs": "Miles's phone",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "N",
            "path": [
                "paths",
                "/networks/{networkId}/clients/provision",
                "post",
                "parameters",
                "provisionNetworkClients",
                "schema",
                "example",
                "clients"
            ],
            "rhs": [{
                "mac": "00:11:22:33:44:55",
                "clientId": "k74272e",
                "name": "Miles's phone"
            }],
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "D",
            "path": [
                "paths",
                "/networks/{networkId}/clients/provision",
                "post",
                "responses",
                "201",
                "schema",
                "x-is-dynamic"
            ],
            "lhs": true,
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "D",
            "path": [
                "paths",
                "/networks/{networkId}/clients/provision",
                "post",
                "responses",
                "201",
                "examples",
                "application/json",
                "mac"
            ],
            "lhs": "00:11:22:33:44:55",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "D",
            "path": [
                "paths",
                "/networks/{networkId}/clients/provision",
                "post",
                "responses",
                "201",
                "examples",
                "application/json",
                "clientId"
            ],
            "lhs": "k74272e",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "D",
            "path": [
                "paths",
                "/networks/{networkId}/clients/provision",
                "post",
                "responses",
                "201",
                "examples",
                "application/json",
                "name"
            ],
            "lhs": "Miles's phone",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "N",
            "path": [
                "paths",
                "/networks/{networkId}/clients/provision",
                "post",
                "responses",
                "201",
                "examples",
                "application/json",
                "clients"
            ],
            "rhs": [{
                "mac": "00:11:22:33:44:55",
                "clientId": "k74272e",
                "name": "Miles's phone"
            }],
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "paths",
                "/networks/{networkId}/clients/provision",
                "post",
                "tags"
            ],
            "index": 2,
            "item": {
                "kind": "N",
                "rhs": "clients"
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "paths",
                "/networks/{networkId}/clients/provision",
                "post",
                "tags"
            ],
            "index": 1,
            "item": {
                "kind": "N",
                "rhs": "configure"
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "paths",
                "/networks/{networkId}/clients/provision",
                "post",
                "tags",
                0
            ],
            "lhs": "Clients",
            "rhs": "networks",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "D",
            "path": [
                "paths",
                "/networks/{networkId}/clients/{clientId}",
                "get",
                "responses",
                "200",
                "schema",
                "x-is-dynamic"
            ],
            "lhs": true,
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "paths",
                "/networks/{networkId}/clients/{clientId}",
                "get",
                "tags"
            ],
            "index": 2,
            "item": {
                "kind": "N",
                "rhs": "clients"
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "paths",
                "/networks/{networkId}/clients/{clientId}",
                "get",
                "tags"
            ],
            "index": 1,
            "item": {
                "kind": "N",
                "rhs": "monitor"
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "paths",
                "/networks/{networkId}/clients/{clientId}",
                "get",
                "tags",
                0
            ],
            "lhs": "Clients",
            "rhs": "networks",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "D",
            "path": [
                "paths",
                "/networks/{networkId}/clients/{clientId}/policy",
                "get",
                "responses",
                "200",
                "schema",
                "x-is-dynamic"
            ],
            "lhs": true,
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "D",
            "path": [
                "paths",
                "/networks/{networkId}/clients/{clientId}/policy",
                "get",
                "responses",
                "200",
                "examples",
                "application/json",
                "type"
            ],
            "lhs": "Group policy",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "paths",
                "/networks/{networkId}/clients/{clientId}/policy",
                "get",
                "tags"
            ],
            "index": 3,
            "item": {
                "kind": "N",
                "rhs": "policy"
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "paths",
                "/networks/{networkId}/clients/{clientId}/policy",
                "get",
                "tags"
            ],
            "index": 2,
            "item": {
                "kind": "N",
                "rhs": "clients"
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "paths",
                "/networks/{networkId}/clients/{clientId}/policy",
                "get",
                "tags"
            ],
            "index": 1,
            "item": {
                "kind": "N",
                "rhs": "configure"
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "paths",
                "/networks/{networkId}/clients/{clientId}/policy",
                "get",
                "tags",
                0
            ],
            "lhs": "Clients",
            "rhs": "networks",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "D",
            "path": [
                "paths",
                "/networks/{networkId}/clients/{clientId}/policy",
                "put",
                "parameters",
                "updateNetworkClientPolicy",
                "schema",
                "example",
                "type"
            ],
            "lhs": "Group policy",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "N",
            "path": [
                "paths",
                "/networks/{networkId}/clients/{clientId}/policy",
                "put",
                "parameters",
                "updateNetworkClientPolicy",
                "schema",
                "example",
                "devicePolicy"
            ],
            "rhs": "Group policy",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "D",
            "path": [
                "paths",
                "/networks/{networkId}/clients/{clientId}/policy",
                "put",
                "responses",
                "200",
                "schema",
                "x-is-dynamic"
            ],
            "lhs": true,
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "D",
            "path": [
                "paths",
                "/networks/{networkId}/clients/{clientId}/policy",
                "put",
                "responses",
                "200",
                "examples",
                "application/json",
                "type"
            ],
            "lhs": "Group policy",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "N",
            "path": [
                "paths",
                "/networks/{networkId}/clients/{clientId}/policy",
                "put",
                "responses",
                "200",
                "examples",
                "application/json",
                "devicePolicy"
            ],
            "rhs": "Group policy",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "paths",
                "/networks/{networkId}/clients/{clientId}/policy",
                "put",
                "tags"
            ],
            "index": 3,
            "item": {
                "kind": "N",
                "rhs": "policy"
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "paths",
                "/networks/{networkId}/clients/{clientId}/policy",
                "put",
                "tags"
            ],
            "index": 2,
            "item": {
                "kind": "N",
                "rhs": "clients"
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "paths",
                "/networks/{networkId}/clients/{clientId}/policy",
                "put",
                "tags"
            ],
            "index": 1,
            "item": {
                "kind": "N",
                "rhs": "configure"
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "paths",
                "/networks/{networkId}/clients/{clientId}/policy",
                "put",
                "tags",
                0
            ],
            "lhs": "Clients",
            "rhs": "networks",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "D",
            "path": [
                "paths",
                "/networks/{networkId}/clients/{clientId}/splashAuthorizationStatus",
                "get",
                "responses",
                "200",
                "schema",
                "x-is-dynamic"
            ],
            "lhs": true,
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "paths",
                "/networks/{networkId}/clients/{clientId}/splashAuthorizationStatus",
                "get",
                "tags"
            ],
            "index": 3,
            "item": {
                "kind": "N",
                "rhs": "splashAuthorizationStatus"
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "paths",
                "/networks/{networkId}/clients/{clientId}/splashAuthorizationStatus",
                "get",
                "tags"
            ],
            "index": 2,
            "item": {
                "kind": "N",
                "rhs": "clients"
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "paths",
                "/networks/{networkId}/clients/{clientId}/splashAuthorizationStatus",
                "get",
                "tags"
            ],
            "index": 1,
            "item": {
                "kind": "N",
                "rhs": "configure"
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "paths",
                "/networks/{networkId}/clients/{clientId}/splashAuthorizationStatus",
                "get",
                "tags",
                0
            ],
            "lhs": "Clients",
            "rhs": "networks",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "D",
            "path": [
                "paths",
                "/networks/{networkId}/clients/{clientId}/splashAuthorizationStatus",
                "put",
                "responses",
                "200",
                "schema",
                "x-is-dynamic"
            ],
            "lhs": true,
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "paths",
                "/networks/{networkId}/clients/{clientId}/splashAuthorizationStatus",
                "put",
                "tags"
            ],
            "index": 3,
            "item": {
                "kind": "N",
                "rhs": "splashAuthorizationStatus"
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "paths",
                "/networks/{networkId}/clients/{clientId}/splashAuthorizationStatus",
                "put",
                "tags"
            ],
            "index": 2,
            "item": {
                "kind": "N",
                "rhs": "clients"
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "paths",
                "/networks/{networkId}/clients/{clientId}/splashAuthorizationStatus",
                "put",
                "tags"
            ],
            "index": 1,
            "item": {
                "kind": "N",
                "rhs": "configure"
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "paths",
                "/networks/{networkId}/clients/{clientId}/splashAuthorizationStatus",
                "put",
                "tags",
                0
            ],
            "lhs": "Clients",
            "rhs": "networks",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "D",
            "path": [
                "paths",
                "/networks/{networkId}/clients/{clientId}/trafficHistory",
                "get",
                "responses",
                "200",
                "schema",
                "x-is-dynamic"
            ],
            "lhs": true,
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "paths",
                "/networks/{networkId}/clients/{clientId}/trafficHistory",
                "get",
                "responses",
                "200",
                "examples",
                "application/json",
                0,
                "ts"
            ],
            "lhs": 1518365681,
            "rhs": "2018-02-11T00:00:00.090210Z",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "paths",
                "/networks/{networkId}/clients/{clientId}/trafficHistory",
                "get",
                "tags"
            ],
            "index": 3,
            "item": {
                "kind": "N",
                "rhs": "trafficHistory"
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "paths",
                "/networks/{networkId}/clients/{clientId}/trafficHistory",
                "get",
                "tags"
            ],
            "index": 2,
            "item": {
                "kind": "N",
                "rhs": "clients"
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "paths",
                "/networks/{networkId}/clients/{clientId}/trafficHistory",
                "get",
                "tags"
            ],
            "index": 1,
            "item": {
                "kind": "N",
                "rhs": "monitor"
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "paths",
                "/networks/{networkId}/clients/{clientId}/trafficHistory",
                "get",
                "tags",
                0
            ],
            "lhs": "Clients",
            "rhs": "networks",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "D",
            "path": [
                "paths",
                "/networks/{networkId}/clients/{clientId}/usageHistory",
                "get",
                "responses",
                "200",
                "schema",
                "x-is-dynamic"
            ],
            "lhs": true,
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "paths",
                "/networks/{networkId}/clients/{clientId}/usageHistory",
                "get",
                "responses",
                "200",
                "examples",
                "application/json",
                0,
                "ts"
            ],
            "lhs": 1518365681,
            "rhs": "2018-02-11T00:00:00.090210Z",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "paths",
                "/networks/{networkId}/clients/{clientId}/usageHistory",
                "get",
                "tags"
            ],
            "index": 3,
            "item": {
                "kind": "N",
                "rhs": "usageHistory"
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "paths",
                "/networks/{networkId}/clients/{clientId}/usageHistory",
                "get",
                "tags"
            ],
            "index": 2,
            "item": {
                "kind": "N",
                "rhs": "clients"
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "paths",
                "/networks/{networkId}/clients/{clientId}/usageHistory",
                "get",
                "tags"
            ],
            "index": 1,
            "item": {
                "kind": "N",
                "rhs": "monitor"
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "paths",
                "/networks/{networkId}/clients/{clientId}/usageHistory",
                "get",
                "tags",
                0
            ],
            "lhs": "Clients",
            "rhs": "networks",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "D",
            "path": [
                "paths",
                "/networks/{networkId}/devices",
                "get",
                "responses",
                "200",
                "schema",
                "x-is-dynamic"
            ],
            "lhs": true,
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "paths",
                "/networks/{networkId}/devices",
                "get",
                "tags"
            ],
            "index": 2,
            "item": {
                "kind": "N",
                "rhs": "devices"
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "paths",
                "/networks/{networkId}/devices",
                "get",
                "tags"
            ],
            "index": 1,
            "item": {
                "kind": "N",
                "rhs": "configure"
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "paths",
                "/networks/{networkId}/devices",
                "get",
                "tags",
                0
            ],
            "lhs": "Devices",
            "rhs": "networks",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "paths",
                "/networks/{networkId}/devices/claim",
                "post",
                "tags"
            ],
            "index": 2,
            "item": {
                "kind": "N",
                "rhs": "devices"
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "paths",
                "/networks/{networkId}/devices/claim",
                "post",
                "tags"
            ],
            "index": 1,
            "item": {
                "kind": "N",
                "rhs": "configure"
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "paths",
                "/networks/{networkId}/devices/claim",
                "post",
                "tags",
                0
            ],
            "lhs": "Devices",
            "rhs": "networks",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "D",
            "path": [
                "paths",
                "/networks/{networkId}/events",
                "get",
                "responses",
                "200",
                "schema",
                "x-is-dynamic"
            ],
            "lhs": true,
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "paths",
                "/networks/{networkId}/events",
                "get",
                "tags"
            ],
            "index": 2,
            "item": {
                "kind": "N",
                "rhs": "events"
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "paths",
                "/networks/{networkId}/events",
                "get",
                "tags"
            ],
            "index": 1,
            "item": {
                "kind": "N",
                "rhs": "monitor"
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "paths",
                "/networks/{networkId}/events",
                "get",
                "tags",
                0
            ],
            "lhs": "Events",
            "rhs": "networks",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "D",
            "path": [
                "paths",
                "/networks/{networkId}/events/eventTypes",
                "get",
                "responses",
                "200",
                "schema",
                "x-is-dynamic"
            ],
            "lhs": true,
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "paths",
                "/networks/{networkId}/events/eventTypes",
                "get",
                "tags"
            ],
            "index": 3,
            "item": {
                "kind": "N",
                "rhs": "eventTypes"
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "paths",
                "/networks/{networkId}/events/eventTypes",
                "get",
                "tags"
            ],
            "index": 2,
            "item": {
                "kind": "N",
                "rhs": "events"
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "paths",
                "/networks/{networkId}/events/eventTypes",
                "get",
                "tags"
            ],
            "index": 1,
            "item": {
                "kind": "N",
                "rhs": "monitor"
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "paths",
                "/networks/{networkId}/events/eventTypes",
                "get",
                "tags",
                0
            ],
            "lhs": "Events",
            "rhs": "networks",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "D",
            "path": [
                "paths",
                "/networks/{networkId}/floorPlans",
                "get",
                "responses",
                "200",
                "schema",
                "x-is-dynamic"
            ],
            "lhs": true,
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "paths",
                "/networks/{networkId}/floorPlans",
                "get",
                "responses",
                "200",
                "examples",
                "application/json",
                0,
                "devices",
                0,
                "tags"
            ],
            "lhs": " recently-added ",
            "rhs": [
                "recently-added"
            ],
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "paths",
                "/networks/{networkId}/floorPlans",
                "get",
                "tags"
            ],
            "index": 2,
            "item": {
                "kind": "N",
                "rhs": "floorPlans"
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "paths",
                "/networks/{networkId}/floorPlans",
                "get",
                "tags"
            ],
            "index": 1,
            "item": {
                "kind": "N",
                "rhs": "configure"
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "paths",
                "/networks/{networkId}/floorPlans",
                "get",
                "tags",
                0
            ],
            "lhs": "Floorplans",
            "rhs": "networks",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "D",
            "path": [
                "paths",
                "/networks/{networkId}/floorPlans",
                "post",
                "responses",
                "201",
                "schema",
                "x-is-dynamic"
            ],
            "lhs": true,
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "paths",
                "/networks/{networkId}/floorPlans",
                "post",
                "responses",
                "201",
                "examples",
                "application/json",
                "devices",
                0,
                "tags"
            ],
            "lhs": " recently-added ",
            "rhs": [
                "recently-added"
            ],
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "paths",
                "/networks/{networkId}/floorPlans",
                "post",
                "tags"
            ],
            "index": 2,
            "item": {
                "kind": "N",
                "rhs": "floorPlans"
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "paths",
                "/networks/{networkId}/floorPlans",
                "post",
                "tags"
            ],
            "index": 1,
            "item": {
                "kind": "N",
                "rhs": "configure"
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "paths",
                "/networks/{networkId}/floorPlans",
                "post",
                "tags",
                0
            ],
            "lhs": "Floorplans",
            "rhs": "networks",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "D",
            "path": [
                "paths",
                "/networks/{networkId}/floorPlans/{floorPlanId}",
                "get",
                "responses",
                "200",
                "schema",
                "x-is-dynamic"
            ],
            "lhs": true,
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "paths",
                "/networks/{networkId}/floorPlans/{floorPlanId}",
                "get",
                "responses",
                "200",
                "examples",
                "application/json",
                "devices",
                0,
                "tags"
            ],
            "lhs": " recently-added ",
            "rhs": [
                "recently-added"
            ],
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "paths",
                "/networks/{networkId}/floorPlans/{floorPlanId}",
                "get",
                "tags"
            ],
            "index": 2,
            "item": {
                "kind": "N",
                "rhs": "floorPlans"
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "paths",
                "/networks/{networkId}/floorPlans/{floorPlanId}",
                "get",
                "tags"
            ],
            "index": 1,
            "item": {
                "kind": "N",
                "rhs": "configure"
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "paths",
                "/networks/{networkId}/floorPlans/{floorPlanId}",
                "get",
                "tags",
                0
            ],
            "lhs": "Floorplans",
            "rhs": "networks",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "D",
            "path": [
                "paths",
                "/networks/{networkId}/floorPlans/{floorPlanId}",
                "put",
                "responses",
                "200",
                "schema",
                "x-is-dynamic"
            ],
            "lhs": true,
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "paths",
                "/networks/{networkId}/floorPlans/{floorPlanId}",
                "put",
                "responses",
                "200",
                "examples",
                "application/json",
                "devices",
                0,
                "tags"
            ],
            "lhs": " recently-added ",
            "rhs": [
                "recently-added"
            ],
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "paths",
                "/networks/{networkId}/floorPlans/{floorPlanId}",
                "put",
                "tags"
            ],
            "index": 2,
            "item": {
                "kind": "N",
                "rhs": "floorPlans"
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "paths",
                "/networks/{networkId}/floorPlans/{floorPlanId}",
                "put",
                "tags"
            ],
            "index": 1,
            "item": {
                "kind": "N",
                "rhs": "configure"
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "paths",
                "/networks/{networkId}/floorPlans/{floorPlanId}",
                "put",
                "tags",
                0
            ],
            "lhs": "Floorplans",
            "rhs": "networks",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "paths",
                "/networks/{networkId}/floorPlans/{floorPlanId}",
                "delete",
                "tags"
            ],
            "index": 2,
            "item": {
                "kind": "N",
                "rhs": "floorPlans"
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "paths",
                "/networks/{networkId}/floorPlans/{floorPlanId}",
                "delete",
                "tags"
            ],
            "index": 1,
            "item": {
                "kind": "N",
                "rhs": "configure"
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "paths",
                "/networks/{networkId}/floorPlans/{floorPlanId}",
                "delete",
                "tags",
                0
            ],
            "lhs": "Floorplans",
            "rhs": "networks",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "D",
            "path": [
                "paths",
                "/networks/{networkId}/groupPolicies",
                "get",
                "responses",
                "200",
                "schema",
                "x-is-dynamic"
            ],
            "lhs": true,
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "paths",
                "/networks/{networkId}/groupPolicies",
                "get",
                "responses",
                "200",
                "examples",
                "application/json",
                0,
                "firewallAndTrafficShaping",
                "l7FirewallRules"
            ],
            "index": 7,
            "item": {
                "kind": "N",
                "rhs": {
                    "policy": "deny",
                    "type": "allowedCountries",
                    "value": [
                        "US"
                    ]
                }
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "paths",
                "/networks/{networkId}/groupPolicies",
                "get",
                "responses",
                "200",
                "examples",
                "application/json",
                0,
                "firewallAndTrafficShaping",
                "l7FirewallRules"
            ],
            "index": 6,
            "item": {
                "kind": "N",
                "rhs": {
                    "policy": "deny",
                    "type": "blockedCountries",
                    "value": [
                        "AX",
                        "CA"
                    ]
                }
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "paths",
                "/networks/{networkId}/groupPolicies",
                "get",
                "responses",
                "200",
                "examples",
                "application/json",
                0,
                "firewallAndTrafficShaping",
                "l7FirewallRules"
            ],
            "index": 5,
            "item": {
                "kind": "N",
                "rhs": {
                    "policy": "deny",
                    "type": "ipRange",
                    "value": "10.11.12.00/24:5555"
                }
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "paths",
                "/networks/{networkId}/groupPolicies",
                "get",
                "responses",
                "200",
                "examples",
                "application/json",
                0,
                "firewallAndTrafficShaping",
                "l7FirewallRules"
            ],
            "index": 4,
            "item": {
                "kind": "N",
                "rhs": {
                    "policy": "deny",
                    "type": "ipRange",
                    "value": "10.11.12.00/24"
                }
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "paths",
                "/networks/{networkId}/groupPolicies",
                "get",
                "responses",
                "200",
                "examples",
                "application/json",
                0,
                "firewallAndTrafficShaping",
                "l7FirewallRules"
            ],
            "index": 3,
            "item": {
                "kind": "N",
                "rhs": {
                    "policy": "deny",
                    "type": "port",
                    "value": "23"
                }
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "paths",
                "/networks/{networkId}/groupPolicies",
                "get",
                "responses",
                "200",
                "examples",
                "application/json",
                0,
                "firewallAndTrafficShaping",
                "l7FirewallRules"
            ],
            "index": 2,
            "item": {
                "kind": "N",
                "rhs": {
                    "policy": "deny",
                    "type": "host",
                    "value": "google.com"
                }
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "paths",
                "/networks/{networkId}/groupPolicies",
                "get",
                "responses",
                "200",
                "examples",
                "application/json",
                0,
                "firewallAndTrafficShaping",
                "l7FirewallRules"
            ],
            "index": 1,
            "item": {
                "kind": "N",
                "rhs": {
                    "policy": "deny",
                    "type": "applicationCategory",
                    "value": {
                        "id": "meraki:layer7/category/2",
                        "name": "Blogging"
                    }
                }
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "paths",
                "/networks/{networkId}/groupPolicies",
                "get",
                "responses",
                "200",
                "examples",
                "application/json",
                0,
                "firewallAndTrafficShaping",
                "l7FirewallRules",
                0
            ],
            "lhs": [{
                    "policy": "deny",
                    "type": "application",
                    "value": {
                        "id": "meraki:layer7/application/67",
                        "name": "Xbox LIVE"
                    }
                },
                {
                    "policy": "deny",
                    "type": "applicationCategory",
                    "value": {
                        "id": "meraki:layer7/category/2",
                        "name": "Blogging"
                    }
                },
                {
                    "policy": "deny",
                    "type": "host",
                    "value": "google.com"
                },
                {
                    "policy": "deny",
                    "type": "port",
                    "value": "23"
                },
                {
                    "policy": "deny",
                    "type": "ipRange",
                    "value": "10.11.12.00/24"
                },
                {
                    "policy": "deny",
                    "type": "ipRange",
                    "value": "10.11.12.00/24:5555"
                },
                {
                    "policy": "deny",
                    "type": "blacklistedCountries",
                    "value": [
                        "AX",
                        "CA"
                    ]
                },
                {
                    "policy": "deny",
                    "type": "whitelistedCountries",
                    "value": [
                        "US"
                    ]
                }
            ],
            "rhs": {
                "policy": "deny",
                "type": "application",
                "value": {
                    "id": "meraki:layer7/application/67",
                    "name": "Xbox LIVE"
                }
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "paths",
                "/networks/{networkId}/groupPolicies",
                "get",
                "tags"
            ],
            "index": 2,
            "item": {
                "kind": "N",
                "rhs": "groupPolicies"
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "paths",
                "/networks/{networkId}/groupPolicies",
                "get",
                "tags"
            ],
            "index": 1,
            "item": {
                "kind": "N",
                "rhs": "configure"
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "paths",
                "/networks/{networkId}/groupPolicies",
                "get",
                "tags",
                0
            ],
            "lhs": "Group policies",
            "rhs": "networks",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "paths",
                "/networks/{networkId}/groupPolicies",
                "post",
                "parameters",
                "createNetworkGroupPolicy",
                "schema",
                "properties",
                "contentFiltering",
                "properties",
                "allowedUrlPatterns",
                "properties",
                "patterns",
                "description"
            ],
            "lhs": "A whitelist of URL patterns to allow",
            "rhs": "A list of URL patterns that are allowed",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "paths",
                "/networks/{networkId}/groupPolicies",
                "post",
                "parameters",
                "createNetworkGroupPolicy",
                "schema",
                "properties",
                "contentFiltering",
                "properties",
                "allowedUrlPatterns",
                "description"
            ],
            "lhs": "Settings for whitelisted URL patterns",
            "rhs": "Settings for allowed URL patterns",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "paths",
                "/networks/{networkId}/groupPolicies",
                "post",
                "parameters",
                "createNetworkGroupPolicy",
                "schema",
                "properties",
                "contentFiltering",
                "properties",
                "blockedUrlPatterns",
                "properties",
                "patterns",
                "description"
            ],
            "lhs": "A blacklist of URL patterns to block",
            "rhs": "A list of URL patterns that are blocked",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "paths",
                "/networks/{networkId}/groupPolicies",
                "post",
                "parameters",
                "createNetworkGroupPolicy",
                "schema",
                "properties",
                "contentFiltering",
                "properties",
                "blockedUrlPatterns",
                "description"
            ],
            "lhs": "Settings for blacklisted URL patterns",
            "rhs": "Settings for blocked URL patterns",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "paths",
                "/networks/{networkId}/groupPolicies",
                "post",
                "parameters",
                "createNetworkGroupPolicy",
                "schema",
                "properties",
                "contentFiltering",
                "properties",
                "blockedUrlCategories",
                "description"
            ],
            "lhs": "Settings for blacklisted URL categories",
            "rhs": "Settings for blocked URL categories",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "paths",
                "/networks/{networkId}/groupPolicies",
                "post",
                "parameters",
                "createNetworkGroupPolicy",
                "schema",
                "example",
                "firewallAndTrafficShaping",
                "l7FirewallRules"
            ],
            "index": 7,
            "item": {
                "kind": "N",
                "rhs": {
                    "policy": "deny",
                    "type": "allowedCountries",
                    "value": [
                        "US"
                    ]
                }
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "paths",
                "/networks/{networkId}/groupPolicies",
                "post",
                "parameters",
                "createNetworkGroupPolicy",
                "schema",
                "example",
                "firewallAndTrafficShaping",
                "l7FirewallRules"
            ],
            "index": 6,
            "item": {
                "kind": "N",
                "rhs": {
                    "policy": "deny",
                    "type": "blockedCountries",
                    "value": [
                        "AX",
                        "CA"
                    ]
                }
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "paths",
                "/networks/{networkId}/groupPolicies",
                "post",
                "parameters",
                "createNetworkGroupPolicy",
                "schema",
                "example",
                "firewallAndTrafficShaping",
                "l7FirewallRules"
            ],
            "index": 5,
            "item": {
                "kind": "N",
                "rhs": {
                    "policy": "deny",
                    "type": "ipRange",
                    "value": "10.11.12.00/24:5555"
                }
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "paths",
                "/networks/{networkId}/groupPolicies",
                "post",
                "parameters",
                "createNetworkGroupPolicy",
                "schema",
                "example",
                "firewallAndTrafficShaping",
                "l7FirewallRules"
            ],
            "index": 4,
            "item": {
                "kind": "N",
                "rhs": {
                    "policy": "deny",
                    "type": "ipRange",
                    "value": "10.11.12.00/24"
                }
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "paths",
                "/networks/{networkId}/groupPolicies",
                "post",
                "parameters",
                "createNetworkGroupPolicy",
                "schema",
                "example",
                "firewallAndTrafficShaping",
                "l7FirewallRules"
            ],
            "index": 3,
            "item": {
                "kind": "N",
                "rhs": {
                    "policy": "deny",
                    "type": "port",
                    "value": "23"
                }
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "paths",
                "/networks/{networkId}/groupPolicies",
                "post",
                "parameters",
                "createNetworkGroupPolicy",
                "schema",
                "example",
                "firewallAndTrafficShaping",
                "l7FirewallRules"
            ],
            "index": 2,
            "item": {
                "kind": "N",
                "rhs": {
                    "policy": "deny",
                    "type": "host",
                    "value": "google.com"
                }
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "paths",
                "/networks/{networkId}/groupPolicies",
                "post",
                "parameters",
                "createNetworkGroupPolicy",
                "schema",
                "example",
                "firewallAndTrafficShaping",
                "l7FirewallRules"
            ],
            "index": 1,
            "item": {
                "kind": "N",
                "rhs": {
                    "policy": "deny",
                    "type": "applicationCategory",
                    "value": {
                        "id": "meraki:layer7/category/2",
                        "name": "Blogging"
                    }
                }
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "paths",
                "/networks/{networkId}/groupPolicies",
                "post",
                "parameters",
                "createNetworkGroupPolicy",
                "schema",
                "example",
                "firewallAndTrafficShaping",
                "l7FirewallRules",
                0
            ],
            "lhs": [{
                    "policy": "deny",
                    "type": "application",
                    "value": {
                        "id": "meraki:layer7/application/67",
                        "name": "Xbox LIVE"
                    }
                },
                {
                    "policy": "deny",
                    "type": "applicationCategory",
                    "value": {
                        "id": "meraki:layer7/category/2",
                        "name": "Blogging"
                    }
                },
                {
                    "policy": "deny",
                    "type": "host",
                    "value": "google.com"
                },
                {
                    "policy": "deny",
                    "type": "port",
                    "value": "23"
                },
                {
                    "policy": "deny",
                    "type": "ipRange",
                    "value": "10.11.12.00/24"
                },
                {
                    "policy": "deny",
                    "type": "ipRange",
                    "value": "10.11.12.00/24:5555"
                },
                {
                    "policy": "deny",
                    "type": "blacklistedCountries",
                    "value": [
                        "AX",
                        "CA"
                    ]
                },
                {
                    "policy": "deny",
                    "type": "whitelistedCountries",
                    "value": [
                        "US"
                    ]
                }
            ],
            "rhs": {
                "policy": "deny",
                "type": "application",
                "value": {
                    "id": "meraki:layer7/application/67",
                    "name": "Xbox LIVE"
                }
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "D",
            "path": [
                "paths",
                "/networks/{networkId}/groupPolicies",
                "post",
                "responses",
                "201",
                "schema",
                "x-is-dynamic"
            ],
            "lhs": true,
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "paths",
                "/networks/{networkId}/groupPolicies",
                "post",
                "responses",
                "201",
                "examples",
                "application/json",
                "firewallAndTrafficShaping",
                "l7FirewallRules"
            ],
            "index": 7,
            "item": {
                "kind": "N",
                "rhs": {
                    "policy": "deny",
                    "type": "allowedCountries",
                    "value": [
                        "US"
                    ]
                }
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "paths",
                "/networks/{networkId}/groupPolicies",
                "post",
                "responses",
                "201",
                "examples",
                "application/json",
                "firewallAndTrafficShaping",
                "l7FirewallRules"
            ],
            "index": 6,
            "item": {
                "kind": "N",
                "rhs": {
                    "policy": "deny",
                    "type": "blockedCountries",
                    "value": [
                        "AX",
                        "CA"
                    ]
                }
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "paths",
                "/networks/{networkId}/groupPolicies",
                "post",
                "responses",
                "201",
                "examples",
                "application/json",
                "firewallAndTrafficShaping",
                "l7FirewallRules"
            ],
            "index": 5,
            "item": {
                "kind": "N",
                "rhs": {
                    "policy": "deny",
                    "type": "ipRange",
                    "value": "10.11.12.00/24:5555"
                }
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "paths",
                "/networks/{networkId}/groupPolicies",
                "post",
                "responses",
                "201",
                "examples",
                "application/json",
                "firewallAndTrafficShaping",
                "l7FirewallRules"
            ],
            "index": 4,
            "item": {
                "kind": "N",
                "rhs": {
                    "policy": "deny",
                    "type": "ipRange",
                    "value": "10.11.12.00/24"
                }
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "paths",
                "/networks/{networkId}/groupPolicies",
                "post",
                "responses",
                "201",
                "examples",
                "application/json",
                "firewallAndTrafficShaping",
                "l7FirewallRules"
            ],
            "index": 3,
            "item": {
                "kind": "N",
                "rhs": {
                    "policy": "deny",
                    "type": "port",
                    "value": "23"
                }
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "paths",
                "/networks/{networkId}/groupPolicies",
                "post",
                "responses",
                "201",
                "examples",
                "application/json",
                "firewallAndTrafficShaping",
                "l7FirewallRules"
            ],
            "index": 2,
            "item": {
                "kind": "N",
                "rhs": {
                    "policy": "deny",
                    "type": "host",
                    "value": "google.com"
                }
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "paths",
                "/networks/{networkId}/groupPolicies",
                "post",
                "responses",
                "201",
                "examples",
                "application/json",
                "firewallAndTrafficShaping",
                "l7FirewallRules"
            ],
            "index": 1,
            "item": {
                "kind": "N",
                "rhs": {
                    "policy": "deny",
                    "type": "applicationCategory",
                    "value": {
                        "id": "meraki:layer7/category/2",
                        "name": "Blogging"
                    }
                }
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "paths",
                "/networks/{networkId}/groupPolicies",
                "post",
                "responses",
                "201",
                "examples",
                "application/json",
                "firewallAndTrafficShaping",
                "l7FirewallRules",
                0
            ],
            "lhs": [{
                    "policy": "deny",
                    "type": "application",
                    "value": {
                        "id": "meraki:layer7/application/67",
                        "name": "Xbox LIVE"
                    }
                },
                {
                    "policy": "deny",
                    "type": "applicationCategory",
                    "value": {
                        "id": "meraki:layer7/category/2",
                        "name": "Blogging"
                    }
                },
                {
                    "policy": "deny",
                    "type": "host",
                    "value": "google.com"
                },
                {
                    "policy": "deny",
                    "type": "port",
                    "value": "23"
                },
                {
                    "policy": "deny",
                    "type": "ipRange",
                    "value": "10.11.12.00/24"
                },
                {
                    "policy": "deny",
                    "type": "ipRange",
                    "value": "10.11.12.00/24:5555"
                },
                {
                    "policy": "deny",
                    "type": "blacklistedCountries",
                    "value": [
                        "AX",
                        "CA"
                    ]
                },
                {
                    "policy": "deny",
                    "type": "whitelistedCountries",
                    "value": [
                        "US"
                    ]
                }
            ],
            "rhs": {
                "policy": "deny",
                "type": "application",
                "value": {
                    "id": "meraki:layer7/application/67",
                    "name": "Xbox LIVE"
                }
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "paths",
                "/networks/{networkId}/groupPolicies",
                "post",
                "tags"
            ],
            "index": 2,
            "item": {
                "kind": "N",
                "rhs": "groupPolicies"
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "paths",
                "/networks/{networkId}/groupPolicies",
                "post",
                "tags"
            ],
            "index": 1,
            "item": {
                "kind": "N",
                "rhs": "configure"
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "paths",
                "/networks/{networkId}/groupPolicies",
                "post",
                "tags",
                0
            ],
            "lhs": "Group policies",
            "rhs": "networks",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "D",
            "path": [
                "paths",
                "/networks/{networkId}/groupPolicies/{groupPolicyId}",
                "get",
                "responses",
                "200",
                "schema",
                "x-is-dynamic"
            ],
            "lhs": true,
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "paths",
                "/networks/{networkId}/groupPolicies/{groupPolicyId}",
                "get",
                "responses",
                "200",
                "examples",
                "application/json",
                "firewallAndTrafficShaping",
                "l7FirewallRules"
            ],
            "index": 7,
            "item": {
                "kind": "N",
                "rhs": {
                    "policy": "deny",
                    "type": "allowedCountries",
                    "value": [
                        "US"
                    ]
                }
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "paths",
                "/networks/{networkId}/groupPolicies/{groupPolicyId}",
                "get",
                "responses",
                "200",
                "examples",
                "application/json",
                "firewallAndTrafficShaping",
                "l7FirewallRules"
            ],
            "index": 6,
            "item": {
                "kind": "N",
                "rhs": {
                    "policy": "deny",
                    "type": "blockedCountries",
                    "value": [
                        "AX",
                        "CA"
                    ]
                }
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "paths",
                "/networks/{networkId}/groupPolicies/{groupPolicyId}",
                "get",
                "responses",
                "200",
                "examples",
                "application/json",
                "firewallAndTrafficShaping",
                "l7FirewallRules"
            ],
            "index": 5,
            "item": {
                "kind": "N",
                "rhs": {
                    "policy": "deny",
                    "type": "ipRange",
                    "value": "10.11.12.00/24:5555"
                }
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "paths",
                "/networks/{networkId}/groupPolicies/{groupPolicyId}",
                "get",
                "responses",
                "200",
                "examples",
                "application/json",
                "firewallAndTrafficShaping",
                "l7FirewallRules"
            ],
            "index": 4,
            "item": {
                "kind": "N",
                "rhs": {
                    "policy": "deny",
                    "type": "ipRange",
                    "value": "10.11.12.00/24"
                }
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "paths",
                "/networks/{networkId}/groupPolicies/{groupPolicyId}",
                "get",
                "responses",
                "200",
                "examples",
                "application/json",
                "firewallAndTrafficShaping",
                "l7FirewallRules"
            ],
            "index": 3,
            "item": {
                "kind": "N",
                "rhs": {
                    "policy": "deny",
                    "type": "port",
                    "value": "23"
                }
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "paths",
                "/networks/{networkId}/groupPolicies/{groupPolicyId}",
                "get",
                "responses",
                "200",
                "examples",
                "application/json",
                "firewallAndTrafficShaping",
                "l7FirewallRules"
            ],
            "index": 2,
            "item": {
                "kind": "N",
                "rhs": {
                    "policy": "deny",
                    "type": "host",
                    "value": "google.com"
                }
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "paths",
                "/networks/{networkId}/groupPolicies/{groupPolicyId}",
                "get",
                "responses",
                "200",
                "examples",
                "application/json",
                "firewallAndTrafficShaping",
                "l7FirewallRules"
            ],
            "index": 1,
            "item": {
                "kind": "N",
                "rhs": {
                    "policy": "deny",
                    "type": "applicationCategory",
                    "value": {
                        "id": "meraki:layer7/category/2",
                        "name": "Blogging"
                    }
                }
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "paths",
                "/networks/{networkId}/groupPolicies/{groupPolicyId}",
                "get",
                "responses",
                "200",
                "examples",
                "application/json",
                "firewallAndTrafficShaping",
                "l7FirewallRules",
                0
            ],
            "lhs": [{
                    "policy": "deny",
                    "type": "application",
                    "value": {
                        "id": "meraki:layer7/application/67",
                        "name": "Xbox LIVE"
                    }
                },
                {
                    "policy": "deny",
                    "type": "applicationCategory",
                    "value": {
                        "id": "meraki:layer7/category/2",
                        "name": "Blogging"
                    }
                },
                {
                    "policy": "deny",
                    "type": "host",
                    "value": "google.com"
                },
                {
                    "policy": "deny",
                    "type": "port",
                    "value": "23"
                },
                {
                    "policy": "deny",
                    "type": "ipRange",
                    "value": "10.11.12.00/24"
                },
                {
                    "policy": "deny",
                    "type": "ipRange",
                    "value": "10.11.12.00/24:5555"
                },
                {
                    "policy": "deny",
                    "type": "blacklistedCountries",
                    "value": [
                        "AX",
                        "CA"
                    ]
                },
                {
                    "policy": "deny",
                    "type": "whitelistedCountries",
                    "value": [
                        "US"
                    ]
                }
            ],
            "rhs": {
                "policy": "deny",
                "type": "application",
                "value": {
                    "id": "meraki:layer7/application/67",
                    "name": "Xbox LIVE"
                }
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "paths",
                "/networks/{networkId}/groupPolicies/{groupPolicyId}",
                "get",
                "tags"
            ],
            "index": 2,
            "item": {
                "kind": "N",
                "rhs": "groupPolicies"
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "paths",
                "/networks/{networkId}/groupPolicies/{groupPolicyId}",
                "get",
                "tags"
            ],
            "index": 1,
            "item": {
                "kind": "N",
                "rhs": "configure"
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "paths",
                "/networks/{networkId}/groupPolicies/{groupPolicyId}",
                "get",
                "tags",
                0
            ],
            "lhs": "Group policies",
            "rhs": "networks",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "paths",
                "/networks/{networkId}/groupPolicies/{groupPolicyId}",
                "put",
                "parameters",
                "updateNetworkGroupPolicy",
                "schema",
                "properties",
                "contentFiltering",
                "properties",
                "allowedUrlPatterns",
                "properties",
                "patterns",
                "description"
            ],
            "lhs": "A whitelist of URL patterns to allow",
            "rhs": "A list of URL patterns that are allowed",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "paths",
                "/networks/{networkId}/groupPolicies/{groupPolicyId}",
                "put",
                "parameters",
                "updateNetworkGroupPolicy",
                "schema",
                "properties",
                "contentFiltering",
                "properties",
                "allowedUrlPatterns",
                "description"
            ],
            "lhs": "Settings for whitelisted URL patterns",
            "rhs": "Settings for allowed URL patterns",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "paths",
                "/networks/{networkId}/groupPolicies/{groupPolicyId}",
                "put",
                "parameters",
                "updateNetworkGroupPolicy",
                "schema",
                "properties",
                "contentFiltering",
                "properties",
                "blockedUrlPatterns",
                "properties",
                "patterns",
                "description"
            ],
            "lhs": "A blacklist of URL patterns to block",
            "rhs": "A list of URL patterns that are blocked",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "paths",
                "/networks/{networkId}/groupPolicies/{groupPolicyId}",
                "put",
                "parameters",
                "updateNetworkGroupPolicy",
                "schema",
                "properties",
                "contentFiltering",
                "properties",
                "blockedUrlPatterns",
                "description"
            ],
            "lhs": "Settings for blacklisted URL patterns",
            "rhs": "Settings for blocked URL patterns",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "paths",
                "/networks/{networkId}/groupPolicies/{groupPolicyId}",
                "put",
                "parameters",
                "updateNetworkGroupPolicy",
                "schema",
                "properties",
                "contentFiltering",
                "properties",
                "blockedUrlCategories",
                "description"
            ],
            "lhs": "Settings for blacklisted URL categories",
            "rhs": "Settings for blocked URL categories",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "paths",
                "/networks/{networkId}/groupPolicies/{groupPolicyId}",
                "put",
                "parameters",
                "updateNetworkGroupPolicy",
                "schema",
                "example",
                "firewallAndTrafficShaping",
                "l7FirewallRules"
            ],
            "index": 7,
            "item": {
                "kind": "N",
                "rhs": {
                    "policy": "deny",
                    "type": "allowedCountries",
                    "value": [
                        "US"
                    ]
                }
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "paths",
                "/networks/{networkId}/groupPolicies/{groupPolicyId}",
                "put",
                "parameters",
                "updateNetworkGroupPolicy",
                "schema",
                "example",
                "firewallAndTrafficShaping",
                "l7FirewallRules"
            ],
            "index": 6,
            "item": {
                "kind": "N",
                "rhs": {
                    "policy": "deny",
                    "type": "blockedCountries",
                    "value": [
                        "AX",
                        "CA"
                    ]
                }
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "paths",
                "/networks/{networkId}/groupPolicies/{groupPolicyId}",
                "put",
                "parameters",
                "updateNetworkGroupPolicy",
                "schema",
                "example",
                "firewallAndTrafficShaping",
                "l7FirewallRules"
            ],
            "index": 5,
            "item": {
                "kind": "N",
                "rhs": {
                    "policy": "deny",
                    "type": "ipRange",
                    "value": "10.11.12.00/24:5555"
                }
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "paths",
                "/networks/{networkId}/groupPolicies/{groupPolicyId}",
                "put",
                "parameters",
                "updateNetworkGroupPolicy",
                "schema",
                "example",
                "firewallAndTrafficShaping",
                "l7FirewallRules"
            ],
            "index": 4,
            "item": {
                "kind": "N",
                "rhs": {
                    "policy": "deny",
                    "type": "ipRange",
                    "value": "10.11.12.00/24"
                }
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "paths",
                "/networks/{networkId}/groupPolicies/{groupPolicyId}",
                "put",
                "parameters",
                "updateNetworkGroupPolicy",
                "schema",
                "example",
                "firewallAndTrafficShaping",
                "l7FirewallRules"
            ],
            "index": 3,
            "item": {
                "kind": "N",
                "rhs": {
                    "policy": "deny",
                    "type": "port",
                    "value": "23"
                }
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "paths",
                "/networks/{networkId}/groupPolicies/{groupPolicyId}",
                "put",
                "parameters",
                "updateNetworkGroupPolicy",
                "schema",
                "example",
                "firewallAndTrafficShaping",
                "l7FirewallRules"
            ],
            "index": 2,
            "item": {
                "kind": "N",
                "rhs": {
                    "policy": "deny",
                    "type": "host",
                    "value": "google.com"
                }
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "paths",
                "/networks/{networkId}/groupPolicies/{groupPolicyId}",
                "put",
                "parameters",
                "updateNetworkGroupPolicy",
                "schema",
                "example",
                "firewallAndTrafficShaping",
                "l7FirewallRules"
            ],
            "index": 1,
            "item": {
                "kind": "N",
                "rhs": {
                    "policy": "deny",
                    "type": "applicationCategory",
                    "value": {
                        "id": "meraki:layer7/category/2",
                        "name": "Blogging"
                    }
                }
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "paths",
                "/networks/{networkId}/groupPolicies/{groupPolicyId}",
                "put",
                "parameters",
                "updateNetworkGroupPolicy",
                "schema",
                "example",
                "firewallAndTrafficShaping",
                "l7FirewallRules",
                0
            ],
            "lhs": [{
                    "policy": "deny",
                    "type": "application",
                    "value": {
                        "id": "meraki:layer7/application/67",
                        "name": "Xbox LIVE"
                    }
                },
                {
                    "policy": "deny",
                    "type": "applicationCategory",
                    "value": {
                        "id": "meraki:layer7/category/2",
                        "name": "Blogging"
                    }
                },
                {
                    "policy": "deny",
                    "type": "host",
                    "value": "google.com"
                },
                {
                    "policy": "deny",
                    "type": "port",
                    "value": "23"
                },
                {
                    "policy": "deny",
                    "type": "ipRange",
                    "value": "10.11.12.00/24"
                },
                {
                    "policy": "deny",
                    "type": "ipRange",
                    "value": "10.11.12.00/24:5555"
                },
                {
                    "policy": "deny",
                    "type": "blacklistedCountries",
                    "value": [
                        "AX",
                        "CA"
                    ]
                },
                {
                    "policy": "deny",
                    "type": "whitelistedCountries",
                    "value": [
                        "US"
                    ]
                }
            ],
            "rhs": {
                "policy": "deny",
                "type": "application",
                "value": {
                    "id": "meraki:layer7/application/67",
                    "name": "Xbox LIVE"
                }
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "D",
            "path": [
                "paths",
                "/networks/{networkId}/groupPolicies/{groupPolicyId}",
                "put",
                "responses",
                "200",
                "schema",
                "x-is-dynamic"
            ],
            "lhs": true,
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "paths",
                "/networks/{networkId}/groupPolicies/{groupPolicyId}",
                "put",
                "responses",
                "200",
                "examples",
                "application/json",
                "firewallAndTrafficShaping",
                "l7FirewallRules"
            ],
            "index": 7,
            "item": {
                "kind": "N",
                "rhs": {
                    "policy": "deny",
                    "type": "allowedCountries",
                    "value": [
                        "US"
                    ]
                }
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "paths",
                "/networks/{networkId}/groupPolicies/{groupPolicyId}",
                "put",
                "responses",
                "200",
                "examples",
                "application/json",
                "firewallAndTrafficShaping",
                "l7FirewallRules"
            ],
            "index": 6,
            "item": {
                "kind": "N",
                "rhs": {
                    "policy": "deny",
                    "type": "blockedCountries",
                    "value": [
                        "AX",
                        "CA"
                    ]
                }
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "paths",
                "/networks/{networkId}/groupPolicies/{groupPolicyId}",
                "put",
                "responses",
                "200",
                "examples",
                "application/json",
                "firewallAndTrafficShaping",
                "l7FirewallRules"
            ],
            "index": 5,
            "item": {
                "kind": "N",
                "rhs": {
                    "policy": "deny",
                    "type": "ipRange",
                    "value": "10.11.12.00/24:5555"
                }
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "paths",
                "/networks/{networkId}/groupPolicies/{groupPolicyId}",
                "put",
                "responses",
                "200",
                "examples",
                "application/json",
                "firewallAndTrafficShaping",
                "l7FirewallRules"
            ],
            "index": 4,
            "item": {
                "kind": "N",
                "rhs": {
                    "policy": "deny",
                    "type": "ipRange",
                    "value": "10.11.12.00/24"
                }
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "paths",
                "/networks/{networkId}/groupPolicies/{groupPolicyId}",
                "put",
                "responses",
                "200",
                "examples",
                "application/json",
                "firewallAndTrafficShaping",
                "l7FirewallRules"
            ],
            "index": 3,
            "item": {
                "kind": "N",
                "rhs": {
                    "policy": "deny",
                    "type": "port",
                    "value": "23"
                }
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "paths",
                "/networks/{networkId}/groupPolicies/{groupPolicyId}",
                "put",
                "responses",
                "200",
                "examples",
                "application/json",
                "firewallAndTrafficShaping",
                "l7FirewallRules"
            ],
            "index": 2,
            "item": {
                "kind": "N",
                "rhs": {
                    "policy": "deny",
                    "type": "host",
                    "value": "google.com"
                }
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "paths",
                "/networks/{networkId}/groupPolicies/{groupPolicyId}",
                "put",
                "responses",
                "200",
                "examples",
                "application/json",
                "firewallAndTrafficShaping",
                "l7FirewallRules"
            ],
            "index": 1,
            "item": {
                "kind": "N",
                "rhs": {
                    "policy": "deny",
                    "type": "applicationCategory",
                    "value": {
                        "id": "meraki:layer7/category/2",
                        "name": "Blogging"
                    }
                }
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "paths",
                "/networks/{networkId}/groupPolicies/{groupPolicyId}",
                "put",
                "responses",
                "200",
                "examples",
                "application/json",
                "firewallAndTrafficShaping",
                "l7FirewallRules",
                0
            ],
            "lhs": [{
                    "policy": "deny",
                    "type": "application",
                    "value": {
                        "id": "meraki:layer7/application/67",
                        "name": "Xbox LIVE"
                    }
                },
                {
                    "policy": "deny",
                    "type": "applicationCategory",
                    "value": {
                        "id": "meraki:layer7/category/2",
                        "name": "Blogging"
                    }
                },
                {
                    "policy": "deny",
                    "type": "host",
                    "value": "google.com"
                },
                {
                    "policy": "deny",
                    "type": "port",
                    "value": "23"
                },
                {
                    "policy": "deny",
                    "type": "ipRange",
                    "value": "10.11.12.00/24"
                },
                {
                    "policy": "deny",
                    "type": "ipRange",
                    "value": "10.11.12.00/24:5555"
                },
                {
                    "policy": "deny",
                    "type": "blacklistedCountries",
                    "value": [
                        "AX",
                        "CA"
                    ]
                },
                {
                    "policy": "deny",
                    "type": "whitelistedCountries",
                    "value": [
                        "US"
                    ]
                }
            ],
            "rhs": {
                "policy": "deny",
                "type": "application",
                "value": {
                    "id": "meraki:layer7/application/67",
                    "name": "Xbox LIVE"
                }
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "paths",
                "/networks/{networkId}/groupPolicies/{groupPolicyId}",
                "put",
                "tags"
            ],
            "index": 2,
            "item": {
                "kind": "N",
                "rhs": "groupPolicies"
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "paths",
                "/networks/{networkId}/groupPolicies/{groupPolicyId}",
                "put",
                "tags"
            ],
            "index": 1,
            "item": {
                "kind": "N",
                "rhs": "configure"
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "paths",
                "/networks/{networkId}/groupPolicies/{groupPolicyId}",
                "put",
                "tags",
                0
            ],
            "lhs": "Group policies",
            "rhs": "networks",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "paths",
                "/networks/{networkId}/groupPolicies/{groupPolicyId}",
                "delete",
                "tags"
            ],
            "index": 2,
            "item": {
                "kind": "N",
                "rhs": "groupPolicies"
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "paths",
                "/networks/{networkId}/groupPolicies/{groupPolicyId}",
                "delete",
                "tags"
            ],
            "index": 1,
            "item": {
                "kind": "N",
                "rhs": "configure"
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "paths",
                "/networks/{networkId}/groupPolicies/{groupPolicyId}",
                "delete",
                "tags",
                0
            ],
            "lhs": "Group policies",
            "rhs": "networks",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "D",
            "path": [
                "paths",
                "/networks/{networkId}/merakiAuthUsers",
                "get",
                "responses",
                "200",
                "schema",
                "x-is-dynamic"
            ],
            "lhs": true,
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "D",
            "path": [
                "paths",
                "/networks/{networkId}/merakiAuthUsers",
                "get",
                "responses",
                "200",
                "examples",
                "application/json",
                0,
                "id"
            ],
            "lhs": "aGlAaGkuY29t",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "paths",
                "/networks/{networkId}/merakiAuthUsers",
                "get",
                "responses",
                "200",
                "examples",
                "application/json",
                0,
                "createdAt"
            ],
            "lhs": 1518365681,
            "rhs": "2018-02-11T00:00:00.090210Z",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "paths",
                "/networks/{networkId}/merakiAuthUsers",
                "get",
                "responses",
                "200",
                "examples",
                "application/json",
                0,
                "accountType"
            ],
            "lhs": "Guest",
            "rhs": "802.1X",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "paths",
                "/networks/{networkId}/merakiAuthUsers",
                "get",
                "responses",
                "200",
                "examples",
                "application/json",
                0,
                "authorizations",
                0,
                "expiresAt"
            ],
            "lhs": 1526087474,
            "rhs": "2018-03-13T00:00:00.090210Z",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "paths",
                "/networks/{networkId}/merakiAuthUsers",
                "get",
                "tags"
            ],
            "index": 2,
            "item": {
                "kind": "N",
                "rhs": "merakiAuthUsers"
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "paths",
                "/networks/{networkId}/merakiAuthUsers",
                "get",
                "tags"
            ],
            "index": 1,
            "item": {
                "kind": "N",
                "rhs": "configure"
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "paths",
                "/networks/{networkId}/merakiAuthUsers",
                "get",
                "tags",
                0
            ],
            "lhs": "Meraki auth users",
            "rhs": "networks",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "D",
            "path": [
                "paths",
                "/networks/{networkId}/merakiAuthUsers/{merakiAuthUserId}",
                "get",
                "responses",
                "200",
                "schema",
                "x-is-dynamic"
            ],
            "lhs": true,
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "D",
            "path": [
                "paths",
                "/networks/{networkId}/merakiAuthUsers/{merakiAuthUserId}",
                "get",
                "responses",
                "200",
                "examples",
                "application/json",
                "id"
            ],
            "lhs": "aGlAaGkuY29t",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "paths",
                "/networks/{networkId}/merakiAuthUsers/{merakiAuthUserId}",
                "get",
                "responses",
                "200",
                "examples",
                "application/json",
                "createdAt"
            ],
            "lhs": 1518365681,
            "rhs": "2018-02-11T00:00:00.090210Z",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "paths",
                "/networks/{networkId}/merakiAuthUsers/{merakiAuthUserId}",
                "get",
                "responses",
                "200",
                "examples",
                "application/json",
                "accountType"
            ],
            "lhs": "Guest",
            "rhs": "802.1X",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "paths",
                "/networks/{networkId}/merakiAuthUsers/{merakiAuthUserId}",
                "get",
                "responses",
                "200",
                "examples",
                "application/json",
                "authorizations",
                0,
                "expiresAt"
            ],
            "lhs": 1526087474,
            "rhs": "2018-03-13T00:00:00.090210Z",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "paths",
                "/networks/{networkId}/merakiAuthUsers/{merakiAuthUserId}",
                "get",
                "tags"
            ],
            "index": 2,
            "item": {
                "kind": "N",
                "rhs": "merakiAuthUsers"
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "paths",
                "/networks/{networkId}/merakiAuthUsers/{merakiAuthUserId}",
                "get",
                "tags"
            ],
            "index": 1,
            "item": {
                "kind": "N",
                "rhs": "configure"
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "paths",
                "/networks/{networkId}/merakiAuthUsers/{merakiAuthUserId}",
                "get",
                "tags",
                0
            ],
            "lhs": "Meraki auth users",
            "rhs": "networks",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "D",
            "path": [
                "paths",
                "/networks/{networkId}/pii/piiKeys",
                "get",
                "responses",
                "200",
                "schema",
                "x-is-dynamic"
            ],
            "lhs": true,
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "paths",
                "/networks/{networkId}/pii/piiKeys",
                "get",
                "tags"
            ],
            "index": 3,
            "item": {
                "kind": "N",
                "rhs": "piiKeys"
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "paths",
                "/networks/{networkId}/pii/piiKeys",
                "get",
                "tags"
            ],
            "index": 2,
            "item": {
                "kind": "N",
                "rhs": "pii"
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "paths",
                "/networks/{networkId}/pii/piiKeys",
                "get",
                "tags"
            ],
            "index": 1,
            "item": {
                "kind": "N",
                "rhs": "configure"
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "paths",
                "/networks/{networkId}/pii/piiKeys",
                "get",
                "tags",
                0
            ],
            "lhs": "PII",
            "rhs": "networks",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "D",
            "path": [
                "paths",
                "/networks/{networkId}/pii/requests",
                "get",
                "responses",
                "200",
                "schema",
                "x-is-dynamic"
            ],
            "lhs": true,
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "paths",
                "/networks/{networkId}/pii/requests",
                "get",
                "tags"
            ],
            "index": 3,
            "item": {
                "kind": "N",
                "rhs": "requests"
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "paths",
                "/networks/{networkId}/pii/requests",
                "get",
                "tags"
            ],
            "index": 2,
            "item": {
                "kind": "N",
                "rhs": "pii"
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "paths",
                "/networks/{networkId}/pii/requests",
                "get",
                "tags"
            ],
            "index": 1,
            "item": {
                "kind": "N",
                "rhs": "configure"
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "paths",
                "/networks/{networkId}/pii/requests",
                "get",
                "tags",
                0
            ],
            "lhs": "PII",
            "rhs": "networks",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "D",
            "path": [
                "paths",
                "/networks/{networkId}/pii/requests",
                "post",
                "responses",
                "201",
                "schema",
                "x-is-dynamic"
            ],
            "lhs": true,
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "paths",
                "/networks/{networkId}/pii/requests",
                "post",
                "tags"
            ],
            "index": 3,
            "item": {
                "kind": "N",
                "rhs": "requests"
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "paths",
                "/networks/{networkId}/pii/requests",
                "post",
                "tags"
            ],
            "index": 2,
            "item": {
                "kind": "N",
                "rhs": "pii"
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "paths",
                "/networks/{networkId}/pii/requests",
                "post",
                "tags"
            ],
            "index": 1,
            "item": {
                "kind": "N",
                "rhs": "configure"
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "paths",
                "/networks/{networkId}/pii/requests",
                "post",
                "tags",
                0
            ],
            "lhs": "PII",
            "rhs": "networks",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "D",
            "path": [
                "paths",
                "/networks/{networkId}/pii/requests/{requestId}",
                "get",
                "responses",
                "200",
                "schema",
                "x-is-dynamic"
            ],
            "lhs": true,
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "paths",
                "/networks/{networkId}/pii/requests/{requestId}",
                "get",
                "tags"
            ],
            "index": 3,
            "item": {
                "kind": "N",
                "rhs": "requests"
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "paths",
                "/networks/{networkId}/pii/requests/{requestId}",
                "get",
                "tags"
            ],
            "index": 2,
            "item": {
                "kind": "N",
                "rhs": "pii"
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "paths",
                "/networks/{networkId}/pii/requests/{requestId}",
                "get",
                "tags"
            ],
            "index": 1,
            "item": {
                "kind": "N",
                "rhs": "configure"
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "paths",
                "/networks/{networkId}/pii/requests/{requestId}",
                "get",
                "tags",
                0
            ],
            "lhs": "PII",
            "rhs": "networks",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "paths",
                "/networks/{networkId}/pii/requests/{requestId}",
                "delete",
                "tags"
            ],
            "index": 3,
            "item": {
                "kind": "N",
                "rhs": "requests"
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "paths",
                "/networks/{networkId}/pii/requests/{requestId}",
                "delete",
                "tags"
            ],
            "index": 2,
            "item": {
                "kind": "N",
                "rhs": "pii"
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "paths",
                "/networks/{networkId}/pii/requests/{requestId}",
                "delete",
                "tags"
            ],
            "index": 1,
            "item": {
                "kind": "N",
                "rhs": "configure"
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "paths",
                "/networks/{networkId}/pii/requests/{requestId}",
                "delete",
                "tags",
                0
            ],
            "lhs": "PII",
            "rhs": "networks",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "D",
            "path": [
                "paths",
                "/networks/{networkId}/pii/smDevicesForKey",
                "get",
                "responses",
                "200",
                "schema",
                "x-is-dynamic"
            ],
            "lhs": true,
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "paths",
                "/networks/{networkId}/pii/smDevicesForKey",
                "get",
                "tags"
            ],
            "index": 3,
            "item": {
                "kind": "N",
                "rhs": "smDevicesForKey"
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "paths",
                "/networks/{networkId}/pii/smDevicesForKey",
                "get",
                "tags"
            ],
            "index": 2,
            "item": {
                "kind": "N",
                "rhs": "pii"
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "paths",
                "/networks/{networkId}/pii/smDevicesForKey",
                "get",
                "tags"
            ],
            "index": 1,
            "item": {
                "kind": "N",
                "rhs": "configure"
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "paths",
                "/networks/{networkId}/pii/smDevicesForKey",
                "get",
                "tags",
                0
            ],
            "lhs": "PII",
            "rhs": "networks",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "D",
            "path": [
                "paths",
                "/networks/{networkId}/pii/smOwnersForKey",
                "get",
                "responses",
                "200",
                "schema",
                "x-is-dynamic"
            ],
            "lhs": true,
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "paths",
                "/networks/{networkId}/pii/smOwnersForKey",
                "get",
                "tags"
            ],
            "index": 3,
            "item": {
                "kind": "N",
                "rhs": "smOwnersForKey"
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "paths",
                "/networks/{networkId}/pii/smOwnersForKey",
                "get",
                "tags"
            ],
            "index": 2,
            "item": {
                "kind": "N",
                "rhs": "pii"
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "paths",
                "/networks/{networkId}/pii/smOwnersForKey",
                "get",
                "tags"
            ],
            "index": 1,
            "item": {
                "kind": "N",
                "rhs": "configure"
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "paths",
                "/networks/{networkId}/pii/smOwnersForKey",
                "get",
                "tags",
                0
            ],
            "lhs": "PII",
            "rhs": "networks",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "D",
            "path": [
                "paths",
                "/networks/{networkId}/sm/bypassActivationLockAttempts",
                "post",
                "responses",
                "201",
                "schema",
                "x-is-dynamic"
            ],
            "lhs": true,
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "paths",
                "/networks/{networkId}/sm/bypassActivationLockAttempts",
                "post",
                "tags"
            ],
            "index": 2,
            "item": {
                "kind": "N",
                "rhs": "bypassActivationLockAttempts"
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "paths",
                "/networks/{networkId}/sm/bypassActivationLockAttempts",
                "post",
                "tags"
            ],
            "index": 1,
            "item": {
                "kind": "N",
                "rhs": "configure"
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "paths",
                "/networks/{networkId}/sm/bypassActivationLockAttempts",
                "post",
                "tags",
                0
            ],
            "lhs": "SM",
            "rhs": "sm",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "D",
            "path": [
                "paths",
                "/networks/{networkId}/sm/bypassActivationLockAttempts/{attemptId}",
                "get",
                "responses",
                "200",
                "schema",
                "x-is-dynamic"
            ],
            "lhs": true,
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "paths",
                "/networks/{networkId}/sm/bypassActivationLockAttempts/{attemptId}",
                "get",
                "tags"
            ],
            "index": 2,
            "item": {
                "kind": "N",
                "rhs": "bypassActivationLockAttempts"
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "paths",
                "/networks/{networkId}/sm/bypassActivationLockAttempts/{attemptId}",
                "get",
                "tags"
            ],
            "index": 1,
            "item": {
                "kind": "N",
                "rhs": "configure"
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "paths",
                "/networks/{networkId}/sm/bypassActivationLockAttempts/{attemptId}",
                "get",
                "tags",
                0
            ],
            "lhs": "SM",
            "rhs": "sm",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "D",
            "path": [
                "paths",
                "/networks/{networkId}/sm/devices/{deviceId}/unenroll",
                "post",
                "responses",
                "200",
                "schema",
                "x-is-dynamic"
            ],
            "lhs": true,
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "paths",
                "/networks/{networkId}/sm/devices/{deviceId}/unenroll",
                "post",
                "tags"
            ],
            "index": 2,
            "item": {
                "kind": "N",
                "rhs": "devices"
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "paths",
                "/networks/{networkId}/sm/devices/{deviceId}/unenroll",
                "post",
                "tags"
            ],
            "index": 1,
            "item": {
                "kind": "N",
                "rhs": "configure"
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "paths",
                "/networks/{networkId}/sm/devices/{deviceId}/unenroll",
                "post",
                "tags",
                0
            ],
            "lhs": "SM",
            "rhs": "sm",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "paths",
                "/networks/{networkId}/sm/profiles",
                "get",
                "description"
            ],
            "lhs": "List all the profiles in the network",
            "rhs": "List all profiles in a network",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "D",
            "path": [
                "paths",
                "/networks/{networkId}/sm/profiles",
                "get",
                "responses",
                "200",
                "schema",
                "x-is-dynamic"
            ],
            "lhs": true,
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "paths",
                "/networks/{networkId}/sm/profiles",
                "get",
                "responses",
                "200",
                "examples",
                "application/json"
            ],
            "lhs": {
                "profiles": [{
                    "id": "1234",
                    "payload_display_name": "API Profile",
                    "payload_identifier": "com.meraki.sm.1",
                    "payload_description": "API docs test",
                    "scope": "some",
                    "tags": [
                        "tag1",
                        "tag2"
                    ],
                    "wifis": [],
                    "payload_types": [
                        "Privacy",
                        "Document"
                    ]
                }]
            },
            "rhs": [{
                "id": "1284392014819",
                "name": "WiFi/VPN Profile",
                "description": "This contains WiFi and VPN settings for authorized users.",
                "scope": "with",
                "tags": [
                    "tag1",
                    "tag2",
                    "tag3"
                ],
                "targetGroupId": null
            }],
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "paths",
                "/networks/{networkId}/sm/profiles",
                "get",
                "tags"
            ],
            "index": 2,
            "item": {
                "kind": "N",
                "rhs": "profiles"
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "paths",
                "/networks/{networkId}/sm/profiles",
                "get",
                "tags"
            ],
            "index": 1,
            "item": {
                "kind": "N",
                "rhs": "configure"
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "paths",
                "/networks/{networkId}/sm/profiles",
                "get",
                "tags",
                0
            ],
            "lhs": "SM",
            "rhs": "sm",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "D",
            "path": [
                "paths",
                "/networks/{networkId}/sm/targetGroups",
                "get",
                "responses",
                "200",
                "schema",
                "x-is-dynamic"
            ],
            "lhs": true,
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "paths",
                "/networks/{networkId}/sm/targetGroups",
                "get",
                "tags"
            ],
            "index": 2,
            "item": {
                "kind": "N",
                "rhs": "targetGroups"
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "paths",
                "/networks/{networkId}/sm/targetGroups",
                "get",
                "tags"
            ],
            "index": 1,
            "item": {
                "kind": "N",
                "rhs": "configure"
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "paths",
                "/networks/{networkId}/sm/targetGroups",
                "get",
                "tags",
                0
            ],
            "lhs": "Named tag scope",
            "rhs": "sm",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "D",
            "path": [
                "paths",
                "/networks/{networkId}/sm/targetGroups",
                "post",
                "responses",
                "201",
                "schema",
                "x-is-dynamic"
            ],
            "lhs": true,
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "paths",
                "/networks/{networkId}/sm/targetGroups",
                "post",
                "tags"
            ],
            "index": 2,
            "item": {
                "kind": "N",
                "rhs": "targetGroups"
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "paths",
                "/networks/{networkId}/sm/targetGroups",
                "post",
                "tags"
            ],
            "index": 1,
            "item": {
                "kind": "N",
                "rhs": "configure"
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "paths",
                "/networks/{networkId}/sm/targetGroups",
                "post",
                "tags",
                0
            ],
            "lhs": "Named tag scope",
            "rhs": "sm",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "D",
            "path": [
                "paths",
                "/networks/{networkId}/sm/targetGroups/{targetGroupId}",
                "get",
                "responses",
                "200",
                "schema",
                "x-is-dynamic"
            ],
            "lhs": true,
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "paths",
                "/networks/{networkId}/sm/targetGroups/{targetGroupId}",
                "get",
                "tags"
            ],
            "index": 2,
            "item": {
                "kind": "N",
                "rhs": "targetGroups"
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "paths",
                "/networks/{networkId}/sm/targetGroups/{targetGroupId}",
                "get",
                "tags"
            ],
            "index": 1,
            "item": {
                "kind": "N",
                "rhs": "configure"
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "paths",
                "/networks/{networkId}/sm/targetGroups/{targetGroupId}",
                "get",
                "tags",
                0
            ],
            "lhs": "Named tag scope",
            "rhs": "sm",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "D",
            "path": [
                "paths",
                "/networks/{networkId}/sm/targetGroups/{targetGroupId}",
                "put",
                "responses",
                "200",
                "schema",
                "x-is-dynamic"
            ],
            "lhs": true,
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "paths",
                "/networks/{networkId}/sm/targetGroups/{targetGroupId}",
                "put",
                "tags"
            ],
            "index": 2,
            "item": {
                "kind": "N",
                "rhs": "targetGroups"
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "paths",
                "/networks/{networkId}/sm/targetGroups/{targetGroupId}",
                "put",
                "tags"
            ],
            "index": 1,
            "item": {
                "kind": "N",
                "rhs": "configure"
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "paths",
                "/networks/{networkId}/sm/targetGroups/{targetGroupId}",
                "put",
                "tags",
                0
            ],
            "lhs": "Named tag scope",
            "rhs": "sm",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "paths",
                "/networks/{networkId}/sm/targetGroups/{targetGroupId}",
                "delete",
                "tags"
            ],
            "index": 2,
            "item": {
                "kind": "N",
                "rhs": "targetGroups"
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "paths",
                "/networks/{networkId}/sm/targetGroups/{targetGroupId}",
                "delete",
                "tags"
            ],
            "index": 1,
            "item": {
                "kind": "N",
                "rhs": "configure"
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "paths",
                "/networks/{networkId}/sm/targetGroups/{targetGroupId}",
                "delete",
                "tags",
                0
            ],
            "lhs": "Named tag scope",
            "rhs": "sm",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "D",
            "path": [
                "paths",
                "/networks/{networkId}/splashLoginAttempts",
                "get",
                "responses",
                "200",
                "schema",
                "x-is-dynamic"
            ],
            "lhs": true,
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "paths",
                "/networks/{networkId}/splashLoginAttempts",
                "get",
                "responses",
                "200",
                "examples",
                "application/json",
                0,
                "loginAt"
            ],
            "lhs": 1518365681,
            "rhs": "2018-02-11T00:00:00.090210Z",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "paths",
                "/networks/{networkId}/splashLoginAttempts",
                "get",
                "tags"
            ],
            "index": 2,
            "item": {
                "kind": "N",
                "rhs": "splashLoginAttempts"
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "paths",
                "/networks/{networkId}/splashLoginAttempts",
                "get",
                "tags"
            ],
            "index": 1,
            "item": {
                "kind": "N",
                "rhs": "monitor"
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "paths",
                "/networks/{networkId}/splashLoginAttempts",
                "get",
                "tags",
                0
            ],
            "lhs": "Splash login attempts",
            "rhs": "networks",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "D",
            "path": [
                "paths",
                "/networks/{networkId}/split",
                "post",
                "responses",
                "200",
                "schema",
                "x-is-dynamic"
            ],
            "lhs": true,
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "paths",
                "/networks/{networkId}/split",
                "post",
                "responses",
                "200",
                "examples",
                "application/json",
                "resultingNetworks",
                1,
                "tags"
            ],
            "lhs": " tag1 tag2 ",
            "rhs": [
                "tag1",
                "tag2"
            ],
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "D",
            "path": [
                "paths",
                "/networks/{networkId}/split",
                "post",
                "responses",
                "200",
                "examples",
                "application/json",
                "resultingNetworks",
                1,
                "type"
            ],
            "lhs": "wireless",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "D",
            "path": [
                "paths",
                "/networks/{networkId}/split",
                "post",
                "responses",
                "200",
                "examples",
                "application/json",
                "resultingNetworks",
                1,
                "disableMyMerakiCom"
            ],
            "lhs": false,
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "paths",
                "/networks/{networkId}/split",
                "post",
                "responses",
                "200",
                "examples",
                "application/json",
                "resultingNetworks",
                0,
                "tags"
            ],
            "lhs": " tag1 tag2 ",
            "rhs": [
                "tag1",
                "tag2"
            ],
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "D",
            "path": [
                "paths",
                "/networks/{networkId}/split",
                "post",
                "responses",
                "200",
                "examples",
                "application/json",
                "resultingNetworks",
                0,
                "type"
            ],
            "lhs": "switch",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "D",
            "path": [
                "paths",
                "/networks/{networkId}/split",
                "post",
                "responses",
                "200",
                "examples",
                "application/json",
                "resultingNetworks",
                0,
                "disableMyMerakiCom"
            ],
            "lhs": false,
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "paths",
                "/networks/{networkId}/split",
                "post",
                "tags"
            ],
            "index": 1,
            "item": {
                "kind": "N",
                "rhs": "configure"
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "paths",
                "/networks/{networkId}/split",
                "post",
                "tags",
                0
            ],
            "lhs": "Networks",
            "rhs": "networks",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "D",
            "path": [
                "paths",
                "/networks/{networkId}/switch/accessControlLists",
                "get",
                "responses",
                "200",
                "schema",
                "x-is-dynamic"
            ],
            "lhs": true,
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "paths",
                "/networks/{networkId}/switch/accessControlLists",
                "get",
                "tags"
            ],
            "index": 2,
            "item": {
                "kind": "N",
                "rhs": "accessControlLists"
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "paths",
                "/networks/{networkId}/switch/accessControlLists",
                "get",
                "tags"
            ],
            "index": 1,
            "item": {
                "kind": "N",
                "rhs": "configure"
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "paths",
                "/networks/{networkId}/switch/accessControlLists",
                "get",
                "tags",
                0
            ],
            "lhs": "Switch ACLs",
            "rhs": "switch",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "D",
            "path": [
                "paths",
                "/networks/{networkId}/switch/accessControlLists",
                "put",
                "responses",
                "200",
                "schema",
                "x-is-dynamic"
            ],
            "lhs": true,
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "paths",
                "/networks/{networkId}/switch/accessControlLists",
                "put",
                "tags"
            ],
            "index": 2,
            "item": {
                "kind": "N",
                "rhs": "accessControlLists"
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "paths",
                "/networks/{networkId}/switch/accessControlLists",
                "put",
                "tags"
            ],
            "index": 1,
            "item": {
                "kind": "N",
                "rhs": "configure"
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "paths",
                "/networks/{networkId}/switch/accessControlLists",
                "put",
                "tags",
                0
            ],
            "lhs": "Switch ACLs",
            "rhs": "switch",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "D",
            "path": [
                "paths",
                "/networks/{networkId}/switch/linkAggregations",
                "get",
                "responses",
                "200",
                "schema",
                "x-is-dynamic"
            ],
            "lhs": true,
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "paths",
                "/networks/{networkId}/switch/linkAggregations",
                "get",
                "tags"
            ],
            "index": 2,
            "item": {
                "kind": "N",
                "rhs": "linkAggregations"
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "paths",
                "/networks/{networkId}/switch/linkAggregations",
                "get",
                "tags"
            ],
            "index": 1,
            "item": {
                "kind": "N",
                "rhs": "configure"
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "paths",
                "/networks/{networkId}/switch/linkAggregations",
                "get",
                "tags",
                0
            ],
            "lhs": "Link aggregations",
            "rhs": "switch",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "D",
            "path": [
                "paths",
                "/networks/{networkId}/switch/linkAggregations",
                "post",
                "responses",
                "201",
                "schema",
                "x-is-dynamic"
            ],
            "lhs": true,
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "paths",
                "/networks/{networkId}/switch/linkAggregations",
                "post",
                "tags"
            ],
            "index": 2,
            "item": {
                "kind": "N",
                "rhs": "linkAggregations"
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "paths",
                "/networks/{networkId}/switch/linkAggregations",
                "post",
                "tags"
            ],
            "index": 1,
            "item": {
                "kind": "N",
                "rhs": "configure"
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "paths",
                "/networks/{networkId}/switch/linkAggregations",
                "post",
                "tags",
                0
            ],
            "lhs": "Link aggregations",
            "rhs": "switch",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "D",
            "path": [
                "paths",
                "/networks/{networkId}/switch/linkAggregations/{linkAggregationId}",
                "put",
                "responses",
                "200",
                "schema",
                "x-is-dynamic"
            ],
            "lhs": true,
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "paths",
                "/networks/{networkId}/switch/linkAggregations/{linkAggregationId}",
                "put",
                "tags"
            ],
            "index": 2,
            "item": {
                "kind": "N",
                "rhs": "linkAggregations"
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "paths",
                "/networks/{networkId}/switch/linkAggregations/{linkAggregationId}",
                "put",
                "tags"
            ],
            "index": 1,
            "item": {
                "kind": "N",
                "rhs": "configure"
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "paths",
                "/networks/{networkId}/switch/linkAggregations/{linkAggregationId}",
                "put",
                "tags",
                0
            ],
            "lhs": "Link aggregations",
            "rhs": "switch",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "paths",
                "/networks/{networkId}/switch/linkAggregations/{linkAggregationId}",
                "delete",
                "tags"
            ],
            "index": 2,
            "item": {
                "kind": "N",
                "rhs": "linkAggregations"
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "paths",
                "/networks/{networkId}/switch/linkAggregations/{linkAggregationId}",
                "delete",
                "tags"
            ],
            "index": 1,
            "item": {
                "kind": "N",
                "rhs": "configure"
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "paths",
                "/networks/{networkId}/switch/linkAggregations/{linkAggregationId}",
                "delete",
                "tags",
                0
            ],
            "lhs": "Link aggregations",
            "rhs": "switch",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "D",
            "path": [
                "paths",
                "/networks/{networkId}/switch/portSchedules",
                "get",
                "responses",
                "200",
                "schema",
                "x-is-dynamic"
            ],
            "lhs": true,
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "paths",
                "/networks/{networkId}/switch/portSchedules",
                "get",
                "tags"
            ],
            "index": 2,
            "item": {
                "kind": "N",
                "rhs": "portSchedules"
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "paths",
                "/networks/{networkId}/switch/portSchedules",
                "get",
                "tags"
            ],
            "index": 1,
            "item": {
                "kind": "N",
                "rhs": "configure"
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "paths",
                "/networks/{networkId}/switch/portSchedules",
                "get",
                "tags",
                0
            ],
            "lhs": "Switch port schedules",
            "rhs": "switch",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "D",
            "path": [
                "paths",
                "/networks/{networkId}/switch/portSchedules",
                "post",
                "responses",
                "201",
                "schema",
                "x-is-dynamic"
            ],
            "lhs": true,
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "paths",
                "/networks/{networkId}/switch/portSchedules",
                "post",
                "tags"
            ],
            "index": 2,
            "item": {
                "kind": "N",
                "rhs": "portSchedules"
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "paths",
                "/networks/{networkId}/switch/portSchedules",
                "post",
                "tags"
            ],
            "index": 1,
            "item": {
                "kind": "N",
                "rhs": "configure"
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "paths",
                "/networks/{networkId}/switch/portSchedules",
                "post",
                "tags",
                0
            ],
            "lhs": "Switch port schedules",
            "rhs": "switch",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "D",
            "path": [
                "paths",
                "/networks/{networkId}/switch/portSchedules/{portScheduleId}",
                "put",
                "responses",
                "200",
                "schema",
                "x-is-dynamic"
            ],
            "lhs": true,
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "paths",
                "/networks/{networkId}/switch/portSchedules/{portScheduleId}",
                "put",
                "tags"
            ],
            "index": 2,
            "item": {
                "kind": "N",
                "rhs": "portSchedules"
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "paths",
                "/networks/{networkId}/switch/portSchedules/{portScheduleId}",
                "put",
                "tags"
            ],
            "index": 1,
            "item": {
                "kind": "N",
                "rhs": "configure"
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "paths",
                "/networks/{networkId}/switch/portSchedules/{portScheduleId}",
                "put",
                "tags",
                0
            ],
            "lhs": "Switch port schedules",
            "rhs": "switch",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "paths",
                "/networks/{networkId}/switch/portSchedules/{portScheduleId}",
                "delete",
                "tags"
            ],
            "index": 2,
            "item": {
                "kind": "N",
                "rhs": "portSchedules"
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "paths",
                "/networks/{networkId}/switch/portSchedules/{portScheduleId}",
                "delete",
                "tags"
            ],
            "index": 1,
            "item": {
                "kind": "N",
                "rhs": "configure"
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "paths",
                "/networks/{networkId}/switch/portSchedules/{portScheduleId}",
                "delete",
                "tags",
                0
            ],
            "lhs": "Switch port schedules",
            "rhs": "switch",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "D",
            "path": [
                "paths",
                "/networks/{networkId}/switch/settings",
                "get",
                "responses",
                "200",
                "schema",
                "x-is-dynamic"
            ],
            "lhs": true,
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "paths",
                "/networks/{networkId}/switch/settings",
                "get",
                "tags"
            ],
            "index": 2,
            "item": {
                "kind": "N",
                "rhs": "settings"
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "paths",
                "/networks/{networkId}/switch/settings",
                "get",
                "tags"
            ],
            "index": 1,
            "item": {
                "kind": "N",
                "rhs": "configure"
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "paths",
                "/networks/{networkId}/switch/settings",
                "get",
                "tags",
                0
            ],
            "lhs": "Switch settings",
            "rhs": "switch",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "D",
            "path": [
                "paths",
                "/networks/{networkId}/switch/settings",
                "put",
                "responses",
                "200",
                "schema",
                "x-is-dynamic"
            ],
            "lhs": true,
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "paths",
                "/networks/{networkId}/switch/settings",
                "put",
                "tags"
            ],
            "index": 2,
            "item": {
                "kind": "N",
                "rhs": "settings"
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "paths",
                "/networks/{networkId}/switch/settings",
                "put",
                "tags"
            ],
            "index": 1,
            "item": {
                "kind": "N",
                "rhs": "configure"
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "paths",
                "/networks/{networkId}/switch/settings",
                "put",
                "tags",
                0
            ],
            "lhs": "Switch settings",
            "rhs": "switch",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "D",
            "path": [
                "paths",
                "/networks/{networkId}/syslogServers",
                "get",
                "responses",
                "200",
                "schema",
                "x-is-dynamic"
            ],
            "lhs": true,
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "paths",
                "/networks/{networkId}/syslogServers",
                "get",
                "responses",
                "200",
                "examples",
                "application/json"
            ],
            "lhs": [{
                "host": "1.2.3.4",
                "port": 443,
                "roles": [
                    "Wireless event log",
                    "URLs"
                ]
            }],
            "rhs": {
                "servers": [{
                    "host": "1.2.3.4",
                    "port": 443,
                    "roles": [
                        "Wireless event log",
                        "URLs"
                    ]
                }]
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "paths",
                "/networks/{networkId}/syslogServers",
                "get",
                "tags"
            ],
            "index": 2,
            "item": {
                "kind": "N",
                "rhs": "syslogServers"
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "paths",
                "/networks/{networkId}/syslogServers",
                "get",
                "tags"
            ],
            "index": 1,
            "item": {
                "kind": "N",
                "rhs": "configure"
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "paths",
                "/networks/{networkId}/syslogServers",
                "get",
                "tags",
                0
            ],
            "lhs": "Syslog servers",
            "rhs": "networks",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "D",
            "path": [
                "paths",
                "/networks/{networkId}/syslogServers",
                "put",
                "responses",
                "200",
                "schema",
                "x-is-dynamic"
            ],
            "lhs": true,
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "paths",
                "/networks/{networkId}/syslogServers",
                "put",
                "responses",
                "200",
                "examples",
                "application/json"
            ],
            "lhs": [{
                "host": "1.2.3.4",
                "port": 443,
                "roles": [
                    "Wireless event log",
                    "URLs"
                ]
            }],
            "rhs": {
                "servers": [{
                    "host": "1.2.3.4",
                    "port": 443,
                    "roles": [
                        "Wireless event log",
                        "URLs"
                    ]
                }]
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "paths",
                "/networks/{networkId}/syslogServers",
                "put",
                "tags"
            ],
            "index": 2,
            "item": {
                "kind": "N",
                "rhs": "syslogServers"
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "paths",
                "/networks/{networkId}/syslogServers",
                "put",
                "tags"
            ],
            "index": 1,
            "item": {
                "kind": "N",
                "rhs": "configure"
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "paths",
                "/networks/{networkId}/syslogServers",
                "put",
                "tags",
                0
            ],
            "lhs": "Syslog servers",
            "rhs": "networks",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "D",
            "path": [
                "paths",
                "/networks/{networkId}/traffic",
                "get",
                "parameters",
                "timespan",
                "x-example"
            ],
            "lhs": 604800,
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "D",
            "path": [
                "paths",
                "/networks/{networkId}/traffic",
                "get",
                "responses",
                "200",
                "schema",
                "x-is-dynamic"
            ],
            "lhs": true,
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "paths",
                "/networks/{networkId}/traffic",
                "get",
                "tags"
            ],
            "index": 2,
            "item": {
                "kind": "N",
                "rhs": "traffic"
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "paths",
                "/networks/{networkId}/traffic",
                "get",
                "tags"
            ],
            "index": 1,
            "item": {
                "kind": "N",
                "rhs": "monitor"
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "paths",
                "/networks/{networkId}/traffic",
                "get",
                "tags",
                0
            ],
            "lhs": "Networks",
            "rhs": "networks",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "D",
            "path": [
                "paths",
                "/networks/{networkId}/trafficShaping/applicationCategories",
                "get",
                "responses",
                "200",
                "schema",
                "x-is-dynamic"
            ],
            "lhs": true,
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "paths",
                "/networks/{networkId}/trafficShaping/applicationCategories",
                "get",
                "tags"
            ],
            "index": 3,
            "item": {
                "kind": "N",
                "rhs": "applicationCategories"
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "paths",
                "/networks/{networkId}/trafficShaping/applicationCategories",
                "get",
                "tags"
            ],
            "index": 2,
            "item": {
                "kind": "N",
                "rhs": "trafficShaping"
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "paths",
                "/networks/{networkId}/trafficShaping/applicationCategories",
                "get",
                "tags"
            ],
            "index": 1,
            "item": {
                "kind": "N",
                "rhs": "configure"
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "paths",
                "/networks/{networkId}/trafficShaping/applicationCategories",
                "get",
                "tags",
                0
            ],
            "lhs": "Traffic shaping",
            "rhs": "networks",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "D",
            "path": [
                "paths",
                "/networks/{networkId}/trafficShaping/dscpTaggingOptions",
                "get",
                "responses",
                "200",
                "schema",
                "x-is-dynamic"
            ],
            "lhs": true,
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "paths",
                "/networks/{networkId}/trafficShaping/dscpTaggingOptions",
                "get",
                "tags"
            ],
            "index": 3,
            "item": {
                "kind": "N",
                "rhs": "dscpTaggingOptions"
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "paths",
                "/networks/{networkId}/trafficShaping/dscpTaggingOptions",
                "get",
                "tags"
            ],
            "index": 2,
            "item": {
                "kind": "N",
                "rhs": "trafficShaping"
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "paths",
                "/networks/{networkId}/trafficShaping/dscpTaggingOptions",
                "get",
                "tags"
            ],
            "index": 1,
            "item": {
                "kind": "N",
                "rhs": "configure"
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "paths",
                "/networks/{networkId}/trafficShaping/dscpTaggingOptions",
                "get",
                "tags",
                0
            ],
            "lhs": "Traffic shaping",
            "rhs": "networks",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "N",
            "path": [
                "paths",
                "/networks/{networkId}/unbind",
                "post",
                "responses",
                "200",
                "schema"
            ],
            "rhs": {
                "type": "object"
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "N",
            "path": [
                "paths",
                "/networks/{networkId}/unbind",
                "post",
                "responses",
                "200",
                "examples"
            ],
            "rhs": {
                "application/json": {
                    "id": "L_123456",
                    "organizationId": "2930418",
                    "name": "Long Island Office",
                    "timeZone": "America/Los_Angeles",
                    "tags": [
                        "tag1",
                        "tag2"
                    ],
                    "productTypes": [
                        "appliance",
                        "switch",
                        "wireless"
                    ],
                    "enrollmentString": "long-island-office"
                }
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "paths",
                "/networks/{networkId}/unbind",
                "post",
                "tags"
            ],
            "index": 1,
            "item": {
                "kind": "N",
                "rhs": "configure"
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "paths",
                "/networks/{networkId}/unbind",
                "post",
                "tags",
                0
            ],
            "lhs": "Networks",
            "rhs": "networks",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "D",
            "path": [
                "paths",
                "/networks/{networkId}/wireless/rfProfiles",
                "get",
                "responses",
                "200",
                "schema",
                "x-is-dynamic"
            ],
            "lhs": true,
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "paths",
                "/networks/{networkId}/wireless/rfProfiles",
                "get",
                "tags"
            ],
            "index": 2,
            "item": {
                "kind": "N",
                "rhs": "rfProfiles"
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "paths",
                "/networks/{networkId}/wireless/rfProfiles",
                "get",
                "tags"
            ],
            "index": 1,
            "item": {
                "kind": "N",
                "rhs": "configure"
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "paths",
                "/networks/{networkId}/wireless/rfProfiles",
                "get",
                "tags",
                0
            ],
            "lhs": "Radio settings",
            "rhs": "wireless",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "D",
            "path": [
                "paths",
                "/networks/{networkId}/wireless/rfProfiles",
                "post",
                "responses",
                "201",
                "schema",
                "x-is-dynamic"
            ],
            "lhs": true,
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "paths",
                "/networks/{networkId}/wireless/rfProfiles",
                "post",
                "tags"
            ],
            "index": 2,
            "item": {
                "kind": "N",
                "rhs": "rfProfiles"
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "paths",
                "/networks/{networkId}/wireless/rfProfiles",
                "post",
                "tags"
            ],
            "index": 1,
            "item": {
                "kind": "N",
                "rhs": "configure"
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "paths",
                "/networks/{networkId}/wireless/rfProfiles",
                "post",
                "tags",
                0
            ],
            "lhs": "Radio settings",
            "rhs": "wireless",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "D",
            "path": [
                "paths",
                "/networks/{networkId}/wireless/rfProfiles/{rfProfileId}",
                "get",
                "responses",
                "200",
                "schema",
                "x-is-dynamic"
            ],
            "lhs": true,
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "paths",
                "/networks/{networkId}/wireless/rfProfiles/{rfProfileId}",
                "get",
                "tags"
            ],
            "index": 2,
            "item": {
                "kind": "N",
                "rhs": "rfProfiles"
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "paths",
                "/networks/{networkId}/wireless/rfProfiles/{rfProfileId}",
                "get",
                "tags"
            ],
            "index": 1,
            "item": {
                "kind": "N",
                "rhs": "configure"
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "paths",
                "/networks/{networkId}/wireless/rfProfiles/{rfProfileId}",
                "get",
                "tags",
                0
            ],
            "lhs": "Radio settings",
            "rhs": "wireless",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "D",
            "path": [
                "paths",
                "/networks/{networkId}/wireless/rfProfiles/{rfProfileId}",
                "put",
                "responses",
                "200",
                "schema",
                "x-is-dynamic"
            ],
            "lhs": true,
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "paths",
                "/networks/{networkId}/wireless/rfProfiles/{rfProfileId}",
                "put",
                "tags"
            ],
            "index": 2,
            "item": {
                "kind": "N",
                "rhs": "rfProfiles"
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "paths",
                "/networks/{networkId}/wireless/rfProfiles/{rfProfileId}",
                "put",
                "tags"
            ],
            "index": 1,
            "item": {
                "kind": "N",
                "rhs": "configure"
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "paths",
                "/networks/{networkId}/wireless/rfProfiles/{rfProfileId}",
                "put",
                "tags",
                0
            ],
            "lhs": "Radio settings",
            "rhs": "wireless",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "paths",
                "/networks/{networkId}/wireless/rfProfiles/{rfProfileId}",
                "delete",
                "tags"
            ],
            "index": 2,
            "item": {
                "kind": "N",
                "rhs": "rfProfiles"
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "paths",
                "/networks/{networkId}/wireless/rfProfiles/{rfProfileId}",
                "delete",
                "tags"
            ],
            "index": 1,
            "item": {
                "kind": "N",
                "rhs": "configure"
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "paths",
                "/networks/{networkId}/wireless/rfProfiles/{rfProfileId}",
                "delete",
                "tags",
                0
            ],
            "lhs": "Radio settings",
            "rhs": "wireless",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "D",
            "path": [
                "paths",
                "/networks/{networkId}/wireless/settings",
                "get",
                "responses",
                "200",
                "schema",
                "x-is-dynamic"
            ],
            "lhs": true,
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "paths",
                "/networks/{networkId}/wireless/settings",
                "get",
                "tags"
            ],
            "index": 2,
            "item": {
                "kind": "N",
                "rhs": "settings"
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "paths",
                "/networks/{networkId}/wireless/settings",
                "get",
                "tags"
            ],
            "index": 1,
            "item": {
                "kind": "N",
                "rhs": "configure"
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "paths",
                "/networks/{networkId}/wireless/settings",
                "get",
                "tags",
                0
            ],
            "lhs": "Wireless settings",
            "rhs": "wireless",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "N",
            "path": [
                "paths",
                "/networks/{networkId}/wireless/settings",
                "put",
                "parameters",
                "updateNetworkWirelessSettings",
                "schema",
                "example",
                "upgradeStrategy"
            ],
            "rhs": "minimizeUpgradeTime",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "D",
            "path": [
                "paths",
                "/networks/{networkId}/wireless/settings",
                "put",
                "responses",
                "200",
                "schema",
                "x-is-dynamic"
            ],
            "lhs": true,
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "N",
            "path": [
                "paths",
                "/networks/{networkId}/wireless/settings",
                "put",
                "responses",
                "200",
                "examples",
                "application/json",
                "upgradeStrategy"
            ],
            "rhs": "minimizeUpgradeTime",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "paths",
                "/networks/{networkId}/wireless/settings",
                "put",
                "tags"
            ],
            "index": 2,
            "item": {
                "kind": "N",
                "rhs": "settings"
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "paths",
                "/networks/{networkId}/wireless/settings",
                "put",
                "tags"
            ],
            "index": 1,
            "item": {
                "kind": "N",
                "rhs": "configure"
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "paths",
                "/networks/{networkId}/wireless/settings",
                "put",
                "tags",
                0
            ],
            "lhs": "Wireless settings",
            "rhs": "wireless",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "D",
            "path": [
                "paths",
                "/organizations",
                "get",
                "responses",
                "200",
                "schema",
                "x-is-dynamic"
            ],
            "lhs": true,
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "paths",
                "/organizations",
                "get",
                "tags"
            ],
            "index": 1,
            "item": {
                "kind": "N",
                "rhs": "configure"
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "paths",
                "/organizations",
                "get",
                "tags",
                0
            ],
            "lhs": "Organizations",
            "rhs": "organizations",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "D",
            "path": [
                "paths",
                "/organizations",
                "post",
                "responses",
                "201",
                "schema",
                "x-is-dynamic"
            ],
            "lhs": true,
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "paths",
                "/organizations",
                "post",
                "tags"
            ],
            "index": 1,
            "item": {
                "kind": "N",
                "rhs": "configure"
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "paths",
                "/organizations",
                "post",
                "tags",
                0
            ],
            "lhs": "Organizations",
            "rhs": "organizations",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "D",
            "path": [
                "paths",
                "/organizations/{organizationId}",
                "get",
                "responses",
                "200",
                "schema",
                "x-is-dynamic"
            ],
            "lhs": true,
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "paths",
                "/organizations/{organizationId}",
                "get",
                "tags"
            ],
            "index": 1,
            "item": {
                "kind": "N",
                "rhs": "configure"
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "paths",
                "/organizations/{organizationId}",
                "get",
                "tags",
                0
            ],
            "lhs": "Organizations",
            "rhs": "organizations",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "D",
            "path": [
                "paths",
                "/organizations/{organizationId}",
                "put",
                "responses",
                "200",
                "schema",
                "x-is-dynamic"
            ],
            "lhs": true,
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "paths",
                "/organizations/{organizationId}",
                "put",
                "tags"
            ],
            "index": 1,
            "item": {
                "kind": "N",
                "rhs": "configure"
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "paths",
                "/organizations/{organizationId}",
                "put",
                "tags",
                0
            ],
            "lhs": "Organizations",
            "rhs": "organizations",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "paths",
                "/organizations/{organizationId}",
                "delete",
                "tags"
            ],
            "index": 1,
            "item": {
                "kind": "N",
                "rhs": "configure"
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "paths",
                "/organizations/{organizationId}",
                "delete",
                "tags",
                0
            ],
            "lhs": "Organizations",
            "rhs": "organizations",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "D",
            "path": [
                "paths",
                "/organizations/{organizationId}/actionBatches",
                "get",
                "responses",
                "200",
                "schema",
                "x-is-dynamic"
            ],
            "lhs": true,
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "paths",
                "/organizations/{organizationId}/actionBatches",
                "get",
                "tags"
            ],
            "index": 2,
            "item": {
                "kind": "N",
                "rhs": "actionBatches"
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "paths",
                "/organizations/{organizationId}/actionBatches",
                "get",
                "tags"
            ],
            "index": 1,
            "item": {
                "kind": "N",
                "rhs": "configure"
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "paths",
                "/organizations/{organizationId}/actionBatches",
                "get",
                "tags",
                0
            ],
            "lhs": "Action batches",
            "rhs": "organizations",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "D",
            "path": [
                "paths",
                "/organizations/{organizationId}/actionBatches",
                "post",
                "responses",
                "201",
                "schema",
                "x-is-dynamic"
            ],
            "lhs": true,
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "paths",
                "/organizations/{organizationId}/actionBatches",
                "post",
                "tags"
            ],
            "index": 2,
            "item": {
                "kind": "N",
                "rhs": "actionBatches"
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "paths",
                "/organizations/{organizationId}/actionBatches",
                "post",
                "tags"
            ],
            "index": 1,
            "item": {
                "kind": "N",
                "rhs": "configure"
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "paths",
                "/organizations/{organizationId}/actionBatches",
                "post",
                "tags",
                0
            ],
            "lhs": "Action batches",
            "rhs": "organizations",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "D",
            "path": [
                "paths",
                "/organizations/{organizationId}/actionBatches/{actionBatchId}",
                "get",
                "responses",
                "200",
                "schema",
                "x-is-dynamic"
            ],
            "lhs": true,
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "paths",
                "/organizations/{organizationId}/actionBatches/{actionBatchId}",
                "get",
                "tags"
            ],
            "index": 2,
            "item": {
                "kind": "N",
                "rhs": "actionBatches"
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "paths",
                "/organizations/{organizationId}/actionBatches/{actionBatchId}",
                "get",
                "tags"
            ],
            "index": 1,
            "item": {
                "kind": "N",
                "rhs": "configure"
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "paths",
                "/organizations/{organizationId}/actionBatches/{actionBatchId}",
                "get",
                "tags",
                0
            ],
            "lhs": "Action batches",
            "rhs": "organizations",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "D",
            "path": [
                "paths",
                "/organizations/{organizationId}/actionBatches/{actionBatchId}",
                "put",
                "responses",
                "200",
                "schema",
                "x-is-dynamic"
            ],
            "lhs": true,
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "paths",
                "/organizations/{organizationId}/actionBatches/{actionBatchId}",
                "put",
                "tags"
            ],
            "index": 2,
            "item": {
                "kind": "N",
                "rhs": "actionBatches"
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "paths",
                "/organizations/{organizationId}/actionBatches/{actionBatchId}",
                "put",
                "tags"
            ],
            "index": 1,
            "item": {
                "kind": "N",
                "rhs": "configure"
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "paths",
                "/organizations/{organizationId}/actionBatches/{actionBatchId}",
                "put",
                "tags",
                0
            ],
            "lhs": "Action batches",
            "rhs": "organizations",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "paths",
                "/organizations/{organizationId}/actionBatches/{actionBatchId}",
                "delete",
                "tags"
            ],
            "index": 2,
            "item": {
                "kind": "N",
                "rhs": "actionBatches"
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "paths",
                "/organizations/{organizationId}/actionBatches/{actionBatchId}",
                "delete",
                "tags"
            ],
            "index": 1,
            "item": {
                "kind": "N",
                "rhs": "configure"
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "paths",
                "/organizations/{organizationId}/actionBatches/{actionBatchId}",
                "delete",
                "tags",
                0
            ],
            "lhs": "Action batches",
            "rhs": "organizations",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "D",
            "path": [
                "paths",
                "/organizations/{organizationId}/admins",
                "get",
                "responses",
                "200",
                "schema",
                "x-is-dynamic"
            ],
            "lhs": true,
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "paths",
                "/organizations/{organizationId}/admins",
                "get",
                "responses",
                "200",
                "examples",
                "application/json",
                0,
                "lastActive"
            ],
            "lhs": "2019-01-28 14:58:56 -0800",
            "rhs": "2018-02-11T00:00:00Z",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "paths",
                "/organizations/{organizationId}/admins",
                "get",
                "tags"
            ],
            "index": 2,
            "item": {
                "kind": "N",
                "rhs": "admins"
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "paths",
                "/organizations/{organizationId}/admins",
                "get",
                "tags"
            ],
            "index": 1,
            "item": {
                "kind": "N",
                "rhs": "configure"
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "paths",
                "/organizations/{organizationId}/admins",
                "get",
                "tags",
                0
            ],
            "lhs": "Admins",
            "rhs": "organizations",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "paths",
                "/organizations/{organizationId}/admins",
                "post",
                "parameters",
                "createOrganizationAdmin",
                "schema",
                "properties",
                "tags",
                "items",
                "properties",
                "access",
                "description"
            ],
            "lhs": "The privilege of the dashboard administrator on the tag",
            "rhs": "The privilege of the dashboard administrator on the tag. Can be one of 'full', 'read-only', 'guest-ambassador' or 'monitor-only'",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "N",
            "path": [
                "paths",
                "/organizations/{organizationId}/admins",
                "post",
                "parameters",
                "createOrganizationAdmin",
                "schema",
                "properties",
                "tags",
                "items",
                "properties",
                "access",
                "enum"
            ],
            "rhs": [
                "full",
                "read-only",
                "guest-ambassador",
                "monitor-only"
            ],
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "paths",
                "/organizations/{organizationId}/admins",
                "post",
                "parameters",
                "createOrganizationAdmin",
                "schema",
                "properties",
                "networks",
                "items",
                "properties",
                "access",
                "description"
            ],
            "lhs": "The privilege of the dashboard administrator on the network",
            "rhs": "The privilege of the dashboard administrator on the network. Can be one of 'full', 'read-only', 'guest-ambassador' or 'monitor-only'",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "N",
            "path": [
                "paths",
                "/organizations/{organizationId}/admins",
                "post",
                "parameters",
                "createOrganizationAdmin",
                "schema",
                "properties",
                "networks",
                "items",
                "properties",
                "access",
                "enum"
            ],
            "rhs": [
                "full",
                "read-only",
                "guest-ambassador",
                "monitor-only"
            ],
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "D",
            "path": [
                "paths",
                "/organizations/{organizationId}/admins",
                "post",
                "responses",
                "201",
                "schema",
                "x-is-dynamic"
            ],
            "lhs": true,
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "paths",
                "/organizations/{organizationId}/admins",
                "post",
                "responses",
                "201",
                "examples",
                "application/json",
                "lastActive"
            ],
            "lhs": "2019-01-28 14:58:56 -0800",
            "rhs": "2018-02-11T00:00:00Z",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "N",
            "path": [
                "paths",
                "/organizations/{organizationId}/admins",
                "post",
                "responses",
                "201",
                "examples",
                "application/json",
                "authenticationMethod"
            ],
            "rhs": "Email",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "paths",
                "/organizations/{organizationId}/admins",
                "post",
                "tags"
            ],
            "index": 2,
            "item": {
                "kind": "N",
                "rhs": "admins"
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "paths",
                "/organizations/{organizationId}/admins",
                "post",
                "tags"
            ],
            "index": 1,
            "item": {
                "kind": "N",
                "rhs": "configure"
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "paths",
                "/organizations/{organizationId}/admins",
                "post",
                "tags",
                0
            ],
            "lhs": "Admins",
            "rhs": "organizations",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "D",
            "path": [
                "paths",
                "/organizations/{organizationId}/apiRequests",
                "get",
                "responses",
                "200",
                "schema",
                "x-is-dynamic"
            ],
            "lhs": true,
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "paths",
                "/organizations/{organizationId}/apiRequests",
                "get",
                "tags"
            ],
            "index": 2,
            "item": {
                "kind": "N",
                "rhs": "apiRequests"
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "paths",
                "/organizations/{organizationId}/apiRequests",
                "get",
                "tags"
            ],
            "index": 1,
            "item": {
                "kind": "N",
                "rhs": "monitor"
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "paths",
                "/organizations/{organizationId}/apiRequests",
                "get",
                "tags",
                0
            ],
            "lhs": "API usage",
            "rhs": "organizations",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "D",
            "path": [
                "paths",
                "/organizations/{organizationId}/apiRequests/overview",
                "get",
                "responses",
                "200",
                "schema",
                "x-is-dynamic"
            ],
            "lhs": true,
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "paths",
                "/organizations/{organizationId}/apiRequests/overview",
                "get",
                "tags"
            ],
            "index": 3,
            "item": {
                "kind": "N",
                "rhs": "overview"
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "paths",
                "/organizations/{organizationId}/apiRequests/overview",
                "get",
                "tags"
            ],
            "index": 2,
            "item": {
                "kind": "N",
                "rhs": "apiRequests"
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "paths",
                "/organizations/{organizationId}/apiRequests/overview",
                "get",
                "tags"
            ],
            "index": 1,
            "item": {
                "kind": "N",
                "rhs": "monitor"
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "paths",
                "/organizations/{organizationId}/apiRequests/overview",
                "get",
                "tags",
                0
            ],
            "lhs": "API usage",
            "rhs": "organizations",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "D",
            "path": [
                "paths",
                "/organizations/{organizationId}/brandingPolicies",
                "get",
                "responses",
                "200",
                "schema",
                "x-is-dynamic"
            ],
            "lhs": true,
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "paths",
                "/organizations/{organizationId}/brandingPolicies",
                "get",
                "tags"
            ],
            "index": 2,
            "item": {
                "kind": "N",
                "rhs": "brandingPolicies"
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "paths",
                "/organizations/{organizationId}/brandingPolicies",
                "get",
                "tags"
            ],
            "index": 1,
            "item": {
                "kind": "N",
                "rhs": "configure"
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "paths",
                "/organizations/{organizationId}/brandingPolicies",
                "get",
                "tags",
                0
            ],
            "lhs": "Dashboard branding policies",
            "rhs": "organizations",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "D",
            "path": [
                "paths",
                "/organizations/{organizationId}/brandingPolicies",
                "post",
                "responses",
                "201",
                "schema",
                "x-is-dynamic"
            ],
            "lhs": true,
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "paths",
                "/organizations/{organizationId}/brandingPolicies",
                "post",
                "tags"
            ],
            "index": 2,
            "item": {
                "kind": "N",
                "rhs": "brandingPolicies"
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "paths",
                "/organizations/{organizationId}/brandingPolicies",
                "post",
                "tags"
            ],
            "index": 1,
            "item": {
                "kind": "N",
                "rhs": "configure"
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "paths",
                "/organizations/{organizationId}/brandingPolicies",
                "post",
                "tags",
                0
            ],
            "lhs": "Dashboard branding policies",
            "rhs": "organizations",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "D",
            "path": [
                "paths",
                "/organizations/{organizationId}/brandingPolicies/priorities",
                "get",
                "responses",
                "200",
                "schema",
                "x-is-dynamic"
            ],
            "lhs": true,
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "paths",
                "/organizations/{organizationId}/brandingPolicies/priorities",
                "get",
                "tags"
            ],
            "index": 3,
            "item": {
                "kind": "N",
                "rhs": "priorities"
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "paths",
                "/organizations/{organizationId}/brandingPolicies/priorities",
                "get",
                "tags"
            ],
            "index": 2,
            "item": {
                "kind": "N",
                "rhs": "brandingPolicies"
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "paths",
                "/organizations/{organizationId}/brandingPolicies/priorities",
                "get",
                "tags"
            ],
            "index": 1,
            "item": {
                "kind": "N",
                "rhs": "configure"
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "paths",
                "/organizations/{organizationId}/brandingPolicies/priorities",
                "get",
                "tags",
                0
            ],
            "lhs": "Dashboard branding policies",
            "rhs": "organizations",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "D",
            "path": [
                "paths",
                "/organizations/{organizationId}/brandingPolicies/priorities",
                "put",
                "responses",
                "200",
                "schema",
                "x-is-dynamic"
            ],
            "lhs": true,
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "paths",
                "/organizations/{organizationId}/brandingPolicies/priorities",
                "put",
                "tags"
            ],
            "index": 3,
            "item": {
                "kind": "N",
                "rhs": "priorities"
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "paths",
                "/organizations/{organizationId}/brandingPolicies/priorities",
                "put",
                "tags"
            ],
            "index": 2,
            "item": {
                "kind": "N",
                "rhs": "brandingPolicies"
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "paths",
                "/organizations/{organizationId}/brandingPolicies/priorities",
                "put",
                "tags"
            ],
            "index": 1,
            "item": {
                "kind": "N",
                "rhs": "configure"
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "paths",
                "/organizations/{organizationId}/brandingPolicies/priorities",
                "put",
                "tags",
                0
            ],
            "lhs": "Dashboard branding policies",
            "rhs": "organizations",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "D",
            "path": [
                "paths",
                "/organizations/{organizationId}/brandingPolicies/{brandingPolicyId}",
                "get",
                "responses",
                "200",
                "schema",
                "x-is-dynamic"
            ],
            "lhs": true,
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "paths",
                "/organizations/{organizationId}/brandingPolicies/{brandingPolicyId}",
                "get",
                "tags"
            ],
            "index": 2,
            "item": {
                "kind": "N",
                "rhs": "brandingPolicies"
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "paths",
                "/organizations/{organizationId}/brandingPolicies/{brandingPolicyId}",
                "get",
                "tags"
            ],
            "index": 1,
            "item": {
                "kind": "N",
                "rhs": "configure"
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "paths",
                "/organizations/{organizationId}/brandingPolicies/{brandingPolicyId}",
                "get",
                "tags",
                0
            ],
            "lhs": "Dashboard branding policies",
            "rhs": "organizations",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "D",
            "path": [
                "paths",
                "/organizations/{organizationId}/brandingPolicies/{brandingPolicyId}",
                "put",
                "responses",
                "200",
                "schema",
                "x-is-dynamic"
            ],
            "lhs": true,
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "paths",
                "/organizations/{organizationId}/brandingPolicies/{brandingPolicyId}",
                "put",
                "tags"
            ],
            "index": 2,
            "item": {
                "kind": "N",
                "rhs": "brandingPolicies"
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "paths",
                "/organizations/{organizationId}/brandingPolicies/{brandingPolicyId}",
                "put",
                "tags"
            ],
            "index": 1,
            "item": {
                "kind": "N",
                "rhs": "configure"
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "paths",
                "/organizations/{organizationId}/brandingPolicies/{brandingPolicyId}",
                "put",
                "tags",
                0
            ],
            "lhs": "Dashboard branding policies",
            "rhs": "organizations",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "paths",
                "/organizations/{organizationId}/brandingPolicies/{brandingPolicyId}",
                "delete",
                "tags"
            ],
            "index": 2,
            "item": {
                "kind": "N",
                "rhs": "brandingPolicies"
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "paths",
                "/organizations/{organizationId}/brandingPolicies/{brandingPolicyId}",
                "delete",
                "tags"
            ],
            "index": 1,
            "item": {
                "kind": "N",
                "rhs": "configure"
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "paths",
                "/organizations/{organizationId}/brandingPolicies/{brandingPolicyId}",
                "delete",
                "tags",
                0
            ],
            "lhs": "Dashboard branding policies",
            "rhs": "organizations",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "D",
            "path": [
                "paths",
                "/organizations/{organizationId}/claim",
                "post",
                "responses",
                "200",
                "schema",
                "x-is-dynamic"
            ],
            "lhs": true,
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "paths",
                "/organizations/{organizationId}/claim",
                "post",
                "tags"
            ],
            "index": 1,
            "item": {
                "kind": "N",
                "rhs": "configure"
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "paths",
                "/organizations/{organizationId}/claim",
                "post",
                "tags",
                0
            ],
            "lhs": "Organizations",
            "rhs": "organizations",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "D",
            "path": [
                "paths",
                "/organizations/{organizationId}/clone",
                "post",
                "responses",
                "201",
                "schema",
                "x-is-dynamic"
            ],
            "lhs": true,
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "paths",
                "/organizations/{organizationId}/clone",
                "post",
                "tags"
            ],
            "index": 1,
            "item": {
                "kind": "N",
                "rhs": "configure"
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "paths",
                "/organizations/{organizationId}/clone",
                "post",
                "tags",
                0
            ],
            "lhs": "Organizations",
            "rhs": "organizations",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "D",
            "path": [
                "paths",
                "/organizations/{organizationId}/configTemplates",
                "get",
                "responses",
                "200",
                "schema",
                "x-is-dynamic"
            ],
            "lhs": true,
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "paths",
                "/organizations/{organizationId}/configTemplates",
                "get",
                "tags"
            ],
            "index": 2,
            "item": {
                "kind": "N",
                "rhs": "configTemplates"
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "paths",
                "/organizations/{organizationId}/configTemplates",
                "get",
                "tags"
            ],
            "index": 1,
            "item": {
                "kind": "N",
                "rhs": "configure"
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "paths",
                "/organizations/{organizationId}/configTemplates",
                "get",
                "tags",
                0
            ],
            "lhs": "Config templates",
            "rhs": "organizations",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "paths",
                "/organizations/{organizationId}/configTemplates/{configTemplateId}",
                "delete",
                "tags"
            ],
            "index": 2,
            "item": {
                "kind": "N",
                "rhs": "configTemplates"
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "paths",
                "/organizations/{organizationId}/configTemplates/{configTemplateId}",
                "delete",
                "tags"
            ],
            "index": 1,
            "item": {
                "kind": "N",
                "rhs": "configure"
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "paths",
                "/organizations/{organizationId}/configTemplates/{configTemplateId}",
                "delete",
                "tags",
                0
            ],
            "lhs": "Config templates",
            "rhs": "organizations",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "D",
            "path": [
                "paths",
                "/organizations/{organizationId}/configurationChanges",
                "get",
                "responses",
                "200",
                "schema",
                "x-is-dynamic"
            ],
            "lhs": true,
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "paths",
                "/organizations/{organizationId}/configurationChanges",
                "get",
                "tags"
            ],
            "index": 2,
            "item": {
                "kind": "N",
                "rhs": "configurationChanges"
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "paths",
                "/organizations/{organizationId}/configurationChanges",
                "get",
                "tags"
            ],
            "index": 1,
            "item": {
                "kind": "N",
                "rhs": "monitor"
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "paths",
                "/organizations/{organizationId}/configurationChanges",
                "get",
                "tags",
                0
            ],
            "lhs": "Change log",
            "rhs": "organizations",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "D",
            "path": [
                "paths",
                "/organizations/{organizationId}/devices",
                "get",
                "responses",
                "200",
                "schema",
                "x-is-dynamic"
            ],
            "lhs": true,
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "paths",
                "/organizations/{organizationId}/devices",
                "get",
                "tags"
            ],
            "index": 2,
            "item": {
                "kind": "N",
                "rhs": "devices"
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "paths",
                "/organizations/{organizationId}/devices",
                "get",
                "tags"
            ],
            "index": 1,
            "item": {
                "kind": "N",
                "rhs": "configure"
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "paths",
                "/organizations/{organizationId}/devices",
                "get",
                "tags",
                0
            ],
            "lhs": "Devices",
            "rhs": "organizations",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "D",
            "path": [
                "paths",
                "/organizations/{organizationId}/insight/monitoredMediaServers",
                "get",
                "responses",
                "200",
                "schema",
                "x-is-dynamic"
            ],
            "lhs": true,
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "paths",
                "/organizations/{organizationId}/insight/monitoredMediaServers",
                "get",
                "tags"
            ],
            "index": 2,
            "item": {
                "kind": "N",
                "rhs": "monitoredMediaServers"
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "paths",
                "/organizations/{organizationId}/insight/monitoredMediaServers",
                "get",
                "tags"
            ],
            "index": 1,
            "item": {
                "kind": "N",
                "rhs": "configure"
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "paths",
                "/organizations/{organizationId}/insight/monitoredMediaServers",
                "get",
                "tags",
                0
            ],
            "lhs": "Monitored media servers",
            "rhs": "insight",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "N",
            "path": [
                "paths",
                "/organizations/{organizationId}/insight/monitoredMediaServers",
                "post",
                "parameters",
                "createOrganizationInsightMonitoredMediaServer",
                "schema",
                "example",
                "bestEffortMonitoringEnabled"
            ],
            "rhs": true,
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "D",
            "path": [
                "paths",
                "/organizations/{organizationId}/insight/monitoredMediaServers",
                "post",
                "responses",
                "201",
                "schema",
                "x-is-dynamic"
            ],
            "lhs": true,
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "N",
            "path": [
                "paths",
                "/organizations/{organizationId}/insight/monitoredMediaServers",
                "post",
                "responses",
                "201",
                "examples",
                "application/json",
                "bestEffortMonitoringEnabled"
            ],
            "rhs": true,
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "paths",
                "/organizations/{organizationId}/insight/monitoredMediaServers",
                "post",
                "tags"
            ],
            "index": 2,
            "item": {
                "kind": "N",
                "rhs": "monitoredMediaServers"
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "paths",
                "/organizations/{organizationId}/insight/monitoredMediaServers",
                "post",
                "tags"
            ],
            "index": 1,
            "item": {
                "kind": "N",
                "rhs": "configure"
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "paths",
                "/organizations/{organizationId}/insight/monitoredMediaServers",
                "post",
                "tags",
                0
            ],
            "lhs": "Monitored media servers",
            "rhs": "insight",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "D",
            "path": [
                "paths",
                "/organizations/{organizationId}/insight/monitoredMediaServers/{monitoredMediaServerId}",
                "get",
                "responses",
                "200",
                "schema",
                "x-is-dynamic"
            ],
            "lhs": true,
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "paths",
                "/organizations/{organizationId}/insight/monitoredMediaServers/{monitoredMediaServerId}",
                "get",
                "tags"
            ],
            "index": 2,
            "item": {
                "kind": "N",
                "rhs": "monitoredMediaServers"
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "paths",
                "/organizations/{organizationId}/insight/monitoredMediaServers/{monitoredMediaServerId}",
                "get",
                "tags"
            ],
            "index": 1,
            "item": {
                "kind": "N",
                "rhs": "configure"
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "paths",
                "/organizations/{organizationId}/insight/monitoredMediaServers/{monitoredMediaServerId}",
                "get",
                "tags",
                0
            ],
            "lhs": "Monitored media servers",
            "rhs": "insight",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "N",
            "path": [
                "paths",
                "/organizations/{organizationId}/insight/monitoredMediaServers/{monitoredMediaServerId}",
                "put",
                "parameters",
                "updateOrganizationInsightMonitoredMediaServer",
                "schema",
                "example",
                "bestEffortMonitoringEnabled"
            ],
            "rhs": true,
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "D",
            "path": [
                "paths",
                "/organizations/{organizationId}/insight/monitoredMediaServers/{monitoredMediaServerId}",
                "put",
                "responses",
                "200",
                "schema",
                "x-is-dynamic"
            ],
            "lhs": true,
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "N",
            "path": [
                "paths",
                "/organizations/{organizationId}/insight/monitoredMediaServers/{monitoredMediaServerId}",
                "put",
                "responses",
                "200",
                "examples",
                "application/json",
                "bestEffortMonitoringEnabled"
            ],
            "rhs": true,
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "paths",
                "/organizations/{organizationId}/insight/monitoredMediaServers/{monitoredMediaServerId}",
                "put",
                "tags"
            ],
            "index": 2,
            "item": {
                "kind": "N",
                "rhs": "monitoredMediaServers"
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "paths",
                "/organizations/{organizationId}/insight/monitoredMediaServers/{monitoredMediaServerId}",
                "put",
                "tags"
            ],
            "index": 1,
            "item": {
                "kind": "N",
                "rhs": "configure"
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "paths",
                "/organizations/{organizationId}/insight/monitoredMediaServers/{monitoredMediaServerId}",
                "put",
                "tags",
                0
            ],
            "lhs": "Monitored media servers",
            "rhs": "insight",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "paths",
                "/organizations/{organizationId}/insight/monitoredMediaServers/{monitoredMediaServerId}",
                "delete",
                "tags"
            ],
            "index": 2,
            "item": {
                "kind": "N",
                "rhs": "monitoredMediaServers"
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "paths",
                "/organizations/{organizationId}/insight/monitoredMediaServers/{monitoredMediaServerId}",
                "delete",
                "tags"
            ],
            "index": 1,
            "item": {
                "kind": "N",
                "rhs": "configure"
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "paths",
                "/organizations/{organizationId}/insight/monitoredMediaServers/{monitoredMediaServerId}",
                "delete",
                "tags",
                0
            ],
            "lhs": "Monitored media servers",
            "rhs": "insight",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "D",
            "path": [
                "paths",
                "/organizations/{organizationId}/licenses",
                "get",
                "responses",
                "200",
                "schema",
                "x-is-dynamic"
            ],
            "lhs": true,
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "paths",
                "/organizations/{organizationId}/licenses",
                "get",
                "tags"
            ],
            "index": 2,
            "item": {
                "kind": "N",
                "rhs": "licenses"
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "paths",
                "/organizations/{organizationId}/licenses",
                "get",
                "tags"
            ],
            "index": 1,
            "item": {
                "kind": "N",
                "rhs": "configure"
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "paths",
                "/organizations/{organizationId}/licenses",
                "get",
                "tags",
                0
            ],
            "lhs": "Licenses",
            "rhs": "organizations",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "D",
            "path": [
                "paths",
                "/organizations/{organizationId}/licenses/assignSeats",
                "post",
                "responses",
                "200",
                "schema",
                "x-is-dynamic"
            ],
            "lhs": true,
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "paths",
                "/organizations/{organizationId}/licenses/assignSeats",
                "post",
                "tags"
            ],
            "index": 2,
            "item": {
                "kind": "N",
                "rhs": "licenses"
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "paths",
                "/organizations/{organizationId}/licenses/assignSeats",
                "post",
                "tags"
            ],
            "index": 1,
            "item": {
                "kind": "N",
                "rhs": "configure"
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "paths",
                "/organizations/{organizationId}/licenses/assignSeats",
                "post",
                "tags",
                0
            ],
            "lhs": "Licenses",
            "rhs": "organizations",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "D",
            "path": [
                "paths",
                "/organizations/{organizationId}/licenses/move",
                "post",
                "responses",
                "200",
                "schema",
                "x-is-dynamic"
            ],
            "lhs": true,
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "paths",
                "/organizations/{organizationId}/licenses/move",
                "post",
                "tags"
            ],
            "index": 2,
            "item": {
                "kind": "N",
                "rhs": "licenses"
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "paths",
                "/organizations/{organizationId}/licenses/move",
                "post",
                "tags"
            ],
            "index": 1,
            "item": {
                "kind": "N",
                "rhs": "configure"
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "paths",
                "/organizations/{organizationId}/licenses/move",
                "post",
                "tags",
                0
            ],
            "lhs": "Licenses",
            "rhs": "organizations",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "D",
            "path": [
                "paths",
                "/organizations/{organizationId}/licenses/moveSeats",
                "post",
                "responses",
                "200",
                "schema",
                "x-is-dynamic"
            ],
            "lhs": true,
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "paths",
                "/organizations/{organizationId}/licenses/moveSeats",
                "post",
                "tags"
            ],
            "index": 2,
            "item": {
                "kind": "N",
                "rhs": "licenses"
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "paths",
                "/organizations/{organizationId}/licenses/moveSeats",
                "post",
                "tags"
            ],
            "index": 1,
            "item": {
                "kind": "N",
                "rhs": "configure"
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "paths",
                "/organizations/{organizationId}/licenses/moveSeats",
                "post",
                "tags",
                0
            ],
            "lhs": "Licenses",
            "rhs": "organizations",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "D",
            "path": [
                "paths",
                "/organizations/{organizationId}/licenses/renewSeats",
                "post",
                "responses",
                "200",
                "schema",
                "x-is-dynamic"
            ],
            "lhs": true,
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "paths",
                "/organizations/{organizationId}/licenses/renewSeats",
                "post",
                "tags"
            ],
            "index": 2,
            "item": {
                "kind": "N",
                "rhs": "licenses"
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "paths",
                "/organizations/{organizationId}/licenses/renewSeats",
                "post",
                "tags"
            ],
            "index": 1,
            "item": {
                "kind": "N",
                "rhs": "configure"
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "paths",
                "/organizations/{organizationId}/licenses/renewSeats",
                "post",
                "tags",
                0
            ],
            "lhs": "Licenses",
            "rhs": "organizations",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "D",
            "path": [
                "paths",
                "/organizations/{organizationId}/licenses/{licenseId}",
                "get",
                "responses",
                "200",
                "schema",
                "x-is-dynamic"
            ],
            "lhs": true,
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "paths",
                "/organizations/{organizationId}/licenses/{licenseId}",
                "get",
                "tags"
            ],
            "index": 2,
            "item": {
                "kind": "N",
                "rhs": "licenses"
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "paths",
                "/organizations/{organizationId}/licenses/{licenseId}",
                "get",
                "tags"
            ],
            "index": 1,
            "item": {
                "kind": "N",
                "rhs": "configure"
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "paths",
                "/organizations/{organizationId}/licenses/{licenseId}",
                "get",
                "tags",
                0
            ],
            "lhs": "Licenses",
            "rhs": "organizations",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "D",
            "path": [
                "paths",
                "/organizations/{organizationId}/licenses/{licenseId}",
                "put",
                "responses",
                "200",
                "schema",
                "x-is-dynamic"
            ],
            "lhs": true,
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "paths",
                "/organizations/{organizationId}/licenses/{licenseId}",
                "put",
                "tags"
            ],
            "index": 2,
            "item": {
                "kind": "N",
                "rhs": "licenses"
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "paths",
                "/organizations/{organizationId}/licenses/{licenseId}",
                "put",
                "tags"
            ],
            "index": 1,
            "item": {
                "kind": "N",
                "rhs": "configure"
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "paths",
                "/organizations/{organizationId}/licenses/{licenseId}",
                "put",
                "tags",
                0
            ],
            "lhs": "Licenses",
            "rhs": "organizations",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "paths",
                "/organizations/{organizationId}/networks",
                "get",
                "description"
            ],
            "lhs": "List the networks in an organization",
            "rhs": "List the networks that the user has privileges on in an organization",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "D",
            "path": [
                "paths",
                "/organizations/{organizationId}/networks",
                "get",
                "responses",
                "200",
                "schema",
                "x-is-dynamic"
            ],
            "lhs": true,
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "paths",
                "/organizations/{organizationId}/networks",
                "get",
                "responses",
                "200",
                "examples",
                "application/json",
                0,
                "tags"
            ],
            "lhs": " tag1 tag2 ",
            "rhs": [
                "tag1",
                "tag2"
            ],
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "D",
            "path": [
                "paths",
                "/organizations/{organizationId}/networks",
                "get",
                "responses",
                "200",
                "examples",
                "application/json",
                0,
                "type"
            ],
            "lhs": "combined",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "D",
            "path": [
                "paths",
                "/organizations/{organizationId}/networks",
                "get",
                "responses",
                "200",
                "examples",
                "application/json",
                0,
                "disableMyMerakiCom"
            ],
            "lhs": false,
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "paths",
                "/organizations/{organizationId}/networks",
                "get",
                "tags"
            ],
            "index": 2,
            "item": {
                "kind": "N",
                "rhs": "networks"
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "paths",
                "/organizations/{organizationId}/networks",
                "get",
                "tags"
            ],
            "index": 1,
            "item": {
                "kind": "N",
                "rhs": "configure"
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "paths",
                "/organizations/{organizationId}/networks",
                "get",
                "tags",
                0
            ],
            "lhs": "Networks",
            "rhs": "organizations",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "paths",
                "/organizations/{organizationId}/networks",
                "post",
                "parameters",
                "createOrganizationNetwork",
                "schema",
                "properties",
                "tags",
                "description"
            ],
            "lhs": "A space-separated list of tags to be applied to the network",
            "rhs": "A list of tags to be applied to the network",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "N",
            "path": [
                "paths",
                "/organizations/{organizationId}/networks",
                "post",
                "parameters",
                "createOrganizationNetwork",
                "schema",
                "properties",
                "tags",
                "items"
            ],
            "rhs": {
                "type": "string"
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "paths",
                "/organizations/{organizationId}/networks",
                "post",
                "parameters",
                "createOrganizationNetwork",
                "schema",
                "example",
                "tags"
            ],
            "lhs": " tag1 tag2 ",
            "rhs": [
                "tag1",
                "tag2"
            ],
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "D",
            "path": [
                "paths",
                "/organizations/{organizationId}/networks",
                "post",
                "parameters",
                "createOrganizationNetwork",
                "schema",
                "example",
                "disableMyMerakiCom"
            ],
            "lhs": false,
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "D",
            "path": [
                "paths",
                "/organizations/{organizationId}/networks",
                "post",
                "parameters",
                "createOrganizationNetwork",
                "schema",
                "example",
                "type"
            ],
            "lhs": "appliance switch camera",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "N",
            "path": [
                "paths",
                "/organizations/{organizationId}/networks",
                "post",
                "parameters",
                "createOrganizationNetwork",
                "schema",
                "example",
                "productTypes"
            ],
            "rhs": [
                "appliance",
                "switch",
                "camera"
            ],
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "D",
            "path": [
                "paths",
                "/organizations/{organizationId}/networks",
                "post",
                "responses",
                "201",
                "schema",
                "x-is-dynamic"
            ],
            "lhs": true,
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "paths",
                "/organizations/{organizationId}/networks",
                "post",
                "responses",
                "201",
                "examples",
                "application/json",
                "tags"
            ],
            "lhs": " tag1 tag2 ",
            "rhs": [
                "tag1",
                "tag2"
            ],
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "D",
            "path": [
                "paths",
                "/organizations/{organizationId}/networks",
                "post",
                "responses",
                "201",
                "examples",
                "application/json",
                "type"
            ],
            "lhs": "combined",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "D",
            "path": [
                "paths",
                "/organizations/{organizationId}/networks",
                "post",
                "responses",
                "201",
                "examples",
                "application/json",
                "disableMyMerakiCom"
            ],
            "lhs": false,
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "paths",
                "/organizations/{organizationId}/networks",
                "post",
                "tags"
            ],
            "index": 2,
            "item": {
                "kind": "N",
                "rhs": "networks"
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "paths",
                "/organizations/{organizationId}/networks",
                "post",
                "tags"
            ],
            "index": 1,
            "item": {
                "kind": "N",
                "rhs": "configure"
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "paths",
                "/organizations/{organizationId}/networks",
                "post",
                "tags",
                0
            ],
            "lhs": "Networks",
            "rhs": "organizations",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "D",
            "path": [
                "paths",
                "/organizations/{organizationId}/networks/combine",
                "post",
                "responses",
                "200",
                "schema",
                "x-is-dynamic"
            ],
            "lhs": true,
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "paths",
                "/organizations/{organizationId}/networks/combine",
                "post",
                "responses",
                "200",
                "examples",
                "application/json",
                "resultingNetwork",
                "tags"
            ],
            "lhs": " tag1 tag2 ",
            "rhs": [
                "tag1",
                "tag2"
            ],
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "D",
            "path": [
                "paths",
                "/organizations/{organizationId}/networks/combine",
                "post",
                "responses",
                "200",
                "examples",
                "application/json",
                "resultingNetwork",
                "type"
            ],
            "lhs": "combined",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "D",
            "path": [
                "paths",
                "/organizations/{organizationId}/networks/combine",
                "post",
                "responses",
                "200",
                "examples",
                "application/json",
                "resultingNetwork",
                "disableMyMerakiCom"
            ],
            "lhs": false,
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "paths",
                "/organizations/{organizationId}/networks/combine",
                "post",
                "tags"
            ],
            "index": 2,
            "item": {
                "kind": "N",
                "rhs": "networks"
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "paths",
                "/organizations/{organizationId}/networks/combine",
                "post",
                "tags"
            ],
            "index": 1,
            "item": {
                "kind": "N",
                "rhs": "configure"
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "paths",
                "/organizations/{organizationId}/networks/combine",
                "post",
                "tags",
                0
            ],
            "lhs": "Networks",
            "rhs": "organizations",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "D",
            "path": [
                "paths",
                "/organizations/{organizationId}/openapiSpec",
                "get",
                "responses",
                "200",
                "schema",
                "x-is-dynamic"
            ],
            "lhs": true,
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "paths",
                "/organizations/{organizationId}/openapiSpec",
                "get",
                "tags"
            ],
            "index": 2,
            "item": {
                "kind": "N",
                "rhs": "openapiSpec"
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "paths",
                "/organizations/{organizationId}/openapiSpec",
                "get",
                "tags"
            ],
            "index": 1,
            "item": {
                "kind": "N",
                "rhs": "monitor"
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "paths",
                "/organizations/{organizationId}/openapiSpec",
                "get",
                "tags",
                0
            ],
            "lhs": "OpenAPI Spec",
            "rhs": "organizations",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "D",
            "path": [
                "paths",
                "/organizations/{organizationId}/samlRoles",
                "get",
                "responses",
                "200",
                "schema",
                "x-is-dynamic"
            ],
            "lhs": true,
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "paths",
                "/organizations/{organizationId}/samlRoles",
                "get",
                "tags"
            ],
            "index": 2,
            "item": {
                "kind": "N",
                "rhs": "samlRoles"
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "paths",
                "/organizations/{organizationId}/samlRoles",
                "get",
                "tags"
            ],
            "index": 1,
            "item": {
                "kind": "N",
                "rhs": "configure"
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "paths",
                "/organizations/{organizationId}/samlRoles",
                "get",
                "tags",
                0
            ],
            "lhs": "SAML roles",
            "rhs": "organizations",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "paths",
                "/organizations/{organizationId}/samlRoles",
                "post",
                "parameters",
                "createOrganizationSamlRole",
                "schema",
                "properties",
                "orgAccess",
                "description"
            ],
            "lhs": "The privilege of the SAML administrator on the organization",
            "rhs": "The privilege of the SAML administrator on the organization. Can be one of 'none', 'read-only' or 'full'",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "N",
            "path": [
                "paths",
                "/organizations/{organizationId}/samlRoles",
                "post",
                "parameters",
                "createOrganizationSamlRole",
                "schema",
                "properties",
                "orgAccess",
                "enum"
            ],
            "rhs": [
                "none",
                "read-only",
                "full"
            ],
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "paths",
                "/organizations/{organizationId}/samlRoles",
                "post",
                "parameters",
                "createOrganizationSamlRole",
                "schema",
                "properties",
                "tags",
                "items",
                "properties",
                "access",
                "description"
            ],
            "lhs": "The privilege of the SAML administrator on the tag",
            "rhs": "The privilege of the SAML administrator on the tag. Can be one of 'full', 'read-only', 'guest-ambassador' or 'monitor-only'",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "N",
            "path": [
                "paths",
                "/organizations/{organizationId}/samlRoles",
                "post",
                "parameters",
                "createOrganizationSamlRole",
                "schema",
                "properties",
                "tags",
                "items",
                "properties",
                "access",
                "enum"
            ],
            "rhs": [
                "full",
                "read-only",
                "guest-ambassador",
                "monitor-only"
            ],
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "paths",
                "/organizations/{organizationId}/samlRoles",
                "post",
                "parameters",
                "createOrganizationSamlRole",
                "schema",
                "properties",
                "networks",
                "items",
                "properties",
                "access",
                "description"
            ],
            "lhs": "The privilege of the SAML administrator on the network",
            "rhs": "The privilege of the SAML administrator on the network. Can be one of 'full', 'read-only', 'guest-ambassador' or 'monitor-only'",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "N",
            "path": [
                "paths",
                "/organizations/{organizationId}/samlRoles",
                "post",
                "parameters",
                "createOrganizationSamlRole",
                "schema",
                "properties",
                "networks",
                "items",
                "properties",
                "access",
                "enum"
            ],
            "rhs": [
                "full",
                "read-only",
                "guest-ambassador",
                "monitor-only"
            ],
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "N",
            "path": [
                "paths",
                "/organizations/{organizationId}/samlRoles",
                "post",
                "parameters",
                "createOrganizationSamlRole",
                "schema",
                "example",
                "role"
            ],
            "rhs": "myrole",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "N",
            "path": [
                "paths",
                "/organizations/{organizationId}/samlRoles",
                "post",
                "parameters",
                "createOrganizationSamlRole",
                "schema",
                "example",
                "orgAccess"
            ],
            "rhs": "none",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "N",
            "path": [
                "paths",
                "/organizations/{organizationId}/samlRoles",
                "post",
                "parameters",
                "createOrganizationSamlRole",
                "schema",
                "example",
                "networks"
            ],
            "rhs": [{
                "id": "N_1234",
                "access": "full"
            }],
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "N",
            "path": [
                "paths",
                "/organizations/{organizationId}/samlRoles",
                "post",
                "parameters",
                "createOrganizationSamlRole",
                "schema",
                "example",
                "tags"
            ],
            "rhs": [{
                "tag": "west",
                "access": "read-only"
            }],
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "D",
            "path": [
                "paths",
                "/organizations/{organizationId}/samlRoles",
                "post",
                "responses",
                "201",
                "schema",
                "x-is-dynamic"
            ],
            "lhs": true,
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "paths",
                "/organizations/{organizationId}/samlRoles",
                "post",
                "tags"
            ],
            "index": 2,
            "item": {
                "kind": "N",
                "rhs": "samlRoles"
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "paths",
                "/organizations/{organizationId}/samlRoles",
                "post",
                "tags"
            ],
            "index": 1,
            "item": {
                "kind": "N",
                "rhs": "configure"
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "paths",
                "/organizations/{organizationId}/samlRoles",
                "post",
                "tags",
                0
            ],
            "lhs": "SAML roles",
            "rhs": "organizations",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "D",
            "path": [
                "paths",
                "/organizations/{organizationId}/samlRoles/{samlRoleId}",
                "get",
                "responses",
                "200",
                "schema",
                "x-is-dynamic"
            ],
            "lhs": true,
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "paths",
                "/organizations/{organizationId}/samlRoles/{samlRoleId}",
                "get",
                "tags"
            ],
            "index": 2,
            "item": {
                "kind": "N",
                "rhs": "samlRoles"
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "paths",
                "/organizations/{organizationId}/samlRoles/{samlRoleId}",
                "get",
                "tags"
            ],
            "index": 1,
            "item": {
                "kind": "N",
                "rhs": "configure"
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "paths",
                "/organizations/{organizationId}/samlRoles/{samlRoleId}",
                "get",
                "tags",
                0
            ],
            "lhs": "SAML roles",
            "rhs": "organizations",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "paths",
                "/organizations/{organizationId}/samlRoles/{samlRoleId}",
                "put",
                "parameters",
                "updateOrganizationSamlRole",
                "schema",
                "properties",
                "orgAccess",
                "description"
            ],
            "lhs": "The privilege of the SAML administrator on the organization",
            "rhs": "The privilege of the SAML administrator on the organization. Can be one of 'none', 'read-only' or 'full'",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "N",
            "path": [
                "paths",
                "/organizations/{organizationId}/samlRoles/{samlRoleId}",
                "put",
                "parameters",
                "updateOrganizationSamlRole",
                "schema",
                "properties",
                "orgAccess",
                "enum"
            ],
            "rhs": [
                "none",
                "read-only",
                "full"
            ],
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "paths",
                "/organizations/{organizationId}/samlRoles/{samlRoleId}",
                "put",
                "parameters",
                "updateOrganizationSamlRole",
                "schema",
                "properties",
                "tags",
                "items",
                "properties",
                "access",
                "description"
            ],
            "lhs": "The privilege of the SAML administrator on the tag",
            "rhs": "The privilege of the SAML administrator on the tag. Can be one of 'full', 'read-only', 'guest-ambassador' or 'monitor-only'",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "N",
            "path": [
                "paths",
                "/organizations/{organizationId}/samlRoles/{samlRoleId}",
                "put",
                "parameters",
                "updateOrganizationSamlRole",
                "schema",
                "properties",
                "tags",
                "items",
                "properties",
                "access",
                "enum"
            ],
            "rhs": [
                "full",
                "read-only",
                "guest-ambassador",
                "monitor-only"
            ],
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "paths",
                "/organizations/{organizationId}/samlRoles/{samlRoleId}",
                "put",
                "parameters",
                "updateOrganizationSamlRole",
                "schema",
                "properties",
                "networks",
                "items",
                "properties",
                "access",
                "description"
            ],
            "lhs": "The privilege of the SAML administrator on the network",
            "rhs": "The privilege of the SAML administrator on the network. Can be one of 'full', 'read-only', 'guest-ambassador' or 'monitor-only'",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "N",
            "path": [
                "paths",
                "/organizations/{organizationId}/samlRoles/{samlRoleId}",
                "put",
                "parameters",
                "updateOrganizationSamlRole",
                "schema",
                "properties",
                "networks",
                "items",
                "properties",
                "access",
                "enum"
            ],
            "rhs": [
                "full",
                "read-only",
                "guest-ambassador",
                "monitor-only"
            ],
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "N",
            "path": [
                "paths",
                "/organizations/{organizationId}/samlRoles/{samlRoleId}",
                "put",
                "parameters",
                "updateOrganizationSamlRole",
                "schema",
                "example",
                "orgAccess"
            ],
            "rhs": "none",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "N",
            "path": [
                "paths",
                "/organizations/{organizationId}/samlRoles/{samlRoleId}",
                "put",
                "parameters",
                "updateOrganizationSamlRole",
                "schema",
                "example",
                "networks"
            ],
            "rhs": [{
                "id": "N_1234",
                "access": "full"
            }],
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "N",
            "path": [
                "paths",
                "/organizations/{organizationId}/samlRoles/{samlRoleId}",
                "put",
                "parameters",
                "updateOrganizationSamlRole",
                "schema",
                "example",
                "tags"
            ],
            "rhs": [{
                "tag": "west",
                "access": "read-only"
            }],
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "D",
            "path": [
                "paths",
                "/organizations/{organizationId}/samlRoles/{samlRoleId}",
                "put",
                "responses",
                "200",
                "schema",
                "x-is-dynamic"
            ],
            "lhs": true,
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "paths",
                "/organizations/{organizationId}/samlRoles/{samlRoleId}",
                "put",
                "tags"
            ],
            "index": 2,
            "item": {
                "kind": "N",
                "rhs": "samlRoles"
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "paths",
                "/organizations/{organizationId}/samlRoles/{samlRoleId}",
                "put",
                "tags"
            ],
            "index": 1,
            "item": {
                "kind": "N",
                "rhs": "configure"
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "paths",
                "/organizations/{organizationId}/samlRoles/{samlRoleId}",
                "put",
                "tags",
                0
            ],
            "lhs": "SAML roles",
            "rhs": "organizations",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "paths",
                "/organizations/{organizationId}/samlRoles/{samlRoleId}",
                "delete",
                "tags"
            ],
            "index": 2,
            "item": {
                "kind": "N",
                "rhs": "samlRoles"
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "paths",
                "/organizations/{organizationId}/samlRoles/{samlRoleId}",
                "delete",
                "tags"
            ],
            "index": 1,
            "item": {
                "kind": "N",
                "rhs": "configure"
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "paths",
                "/organizations/{organizationId}/samlRoles/{samlRoleId}",
                "delete",
                "tags",
                0
            ],
            "lhs": "SAML roles",
            "rhs": "organizations",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "D",
            "path": [
                "paths",
                "/organizations/{organizationId}/snmp",
                "get",
                "responses",
                "200",
                "schema",
                "x-is-dynamic"
            ],
            "lhs": true,
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "paths",
                "/organizations/{organizationId}/snmp",
                "get",
                "responses",
                "200",
                "examples",
                "application/json",
                "peerIps"
            ],
            "lhs": "123.123.123.1",
            "rhs": [
                "123.123.123.1"
            ],
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "paths",
                "/organizations/{organizationId}/snmp",
                "get",
                "tags"
            ],
            "index": 2,
            "item": {
                "kind": "N",
                "rhs": "snmp"
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "paths",
                "/organizations/{organizationId}/snmp",
                "get",
                "tags"
            ],
            "index": 1,
            "item": {
                "kind": "N",
                "rhs": "configure"
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "paths",
                "/organizations/{organizationId}/snmp",
                "get",
                "tags",
                0
            ],
            "lhs": "SNMP settings",
            "rhs": "organizations",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "paths",
                "/organizations/{organizationId}/snmp",
                "put",
                "parameters",
                "updateOrganizationSnmp",
                "schema",
                "properties",
                "peerIps",
                "description"
            ],
            "lhs": "The IPs that are allowed to access the SNMP server. This list should be IPv4 addresses separated by semi-colons (ie. \"1.2.3.4;2.3.4.5\").",
            "rhs": "The list of IPv4 addresses that are allowed to access the SNMP server.",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "N",
            "path": [
                "paths",
                "/organizations/{organizationId}/snmp",
                "put",
                "parameters",
                "updateOrganizationSnmp",
                "schema",
                "properties",
                "peerIps",
                "items"
            ],
            "rhs": {
                "type": "string"
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "paths",
                "/organizations/{organizationId}/snmp",
                "put",
                "parameters",
                "updateOrganizationSnmp",
                "schema",
                "example",
                "peerIps"
            ],
            "lhs": "123.123.123.1",
            "rhs": [
                "123.123.123.1"
            ],
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "D",
            "path": [
                "paths",
                "/organizations/{organizationId}/snmp",
                "put",
                "responses",
                "200",
                "schema",
                "x-is-dynamic"
            ],
            "lhs": true,
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "paths",
                "/organizations/{organizationId}/snmp",
                "put",
                "responses",
                "200",
                "examples",
                "application/json",
                "peerIps"
            ],
            "lhs": "123.123.123.1",
            "rhs": [
                "123.123.123.1"
            ],
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "paths",
                "/organizations/{organizationId}/snmp",
                "put",
                "tags"
            ],
            "index": 2,
            "item": {
                "kind": "N",
                "rhs": "snmp"
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "paths",
                "/organizations/{organizationId}/snmp",
                "put",
                "tags"
            ],
            "index": 1,
            "item": {
                "kind": "N",
                "rhs": "configure"
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "paths",
                "/organizations/{organizationId}/snmp",
                "put",
                "tags",
                0
            ],
            "lhs": "SNMP settings",
            "rhs": "organizations",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "tags"
            ],
            "index": 169,
            "item": {
                "kind": "N",
                "rhs": {
                    "name": "zones"
                }
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "tags"
            ],
            "index": 168,
            "item": {
                "kind": "N",
                "rhs": {
                    "name": "wlanLists"
                }
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "tags"
            ],
            "index": 167,
            "item": {
                "kind": "N",
                "rhs": {
                    "name": "webhooks"
                }
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "tags"
            ],
            "index": 166,
            "item": {
                "kind": "N",
                "rhs": {
                    "name": "webhookTests"
                }
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "tags"
            ],
            "index": 165,
            "item": {
                "kind": "N",
                "rhs": {
                    "name": "warmSpare"
                }
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "tags"
            ],
            "index": 164,
            "item": {
                "kind": "N",
                "rhs": {
                    "name": "vppAccounts"
                }
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "tags"
            ],
            "index": 163,
            "item": {
                "kind": "N",
                "rhs": {
                    "name": "vpnFirewallRules"
                }
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "tags"
            ],
            "index": 162,
            "item": {
                "kind": "N",
                "rhs": {
                    "name": "vpn"
                }
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "tags"
            ],
            "index": 161,
            "item": {
                "kind": "N",
                "rhs": {
                    "name": "vlans"
                }
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "tags"
            ],
            "index": 160,
            "item": {
                "kind": "N",
                "rhs": {
                    "name": "videoLink"
                }
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "tags"
            ],
            "index": 159,
            "item": {
                "kind": "N",
                "rhs": {
                    "name": "video"
                }
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "tags"
            ],
            "index": 158,
            "item": {
                "kind": "N",
                "rhs": {
                    "name": "users"
                }
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "tags"
            ],
            "index": 157,
            "item": {
                "kind": "N",
                "rhs": {
                    "name": "usageHistory"
                }
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "tags"
            ],
            "index": 156,
            "item": {
                "kind": "N",
                "rhs": {
                    "name": "uplinksLossAndLatency"
                }
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "tags"
            ],
            "index": 155,
            "item": {
                "kind": "N",
                "rhs": {
                    "name": "uplinkSelection"
                }
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "tags"
            ],
            "index": 154,
            "item": {
                "kind": "N",
                "rhs": {
                    "name": "uplinkBandwidth"
                }
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "tags"
            ],
            "index": 153,
            "item": {
                "kind": "N",
                "rhs": {
                    "name": "uplink"
                }
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "tags"
            ],
            "index": 152,
            "item": {
                "kind": "N",
                "rhs": {
                    "name": "trafficShaping"
                }
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "tags"
            ],
            "index": 151,
            "item": {
                "kind": "N",
                "rhs": {
                    "name": "trafficHistory"
                }
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "tags"
            ],
            "index": 150,
            "item": {
                "kind": "N",
                "rhs": {
                    "name": "trafficAnalysis"
                }
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "tags"
            ],
            "index": 149,
            "item": {
                "kind": "N",
                "rhs": {
                    "name": "traffic"
                }
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "tags"
            ],
            "index": 148,
            "item": {
                "kind": "N",
                "rhs": {
                    "name": "thirdPartyVPNPeers"
                }
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "tags"
            ],
            "index": 147,
            "item": {
                "kind": "N",
                "rhs": {
                    "name": "targetGroups"
                }
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "tags"
            ],
            "index": 146,
            "item": {
                "kind": "N",
                "rhs": {
                    "name": "syslogServers"
                }
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "tags"
            ],
            "index": 145,
            "item": {
                "kind": "N",
                "rhs": {
                    "name": "subnets"
                }
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "tags"
            ],
            "index": 144,
            "item": {
                "kind": "N",
                "rhs": {
                    "name": "subnetPool"
                }
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "tags"
            ],
            "index": 143,
            "item": {
                "kind": "N",
                "rhs": {
                    "name": "stp"
                }
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "tags"
            ],
            "index": 142,
            "item": {
                "kind": "N",
                "rhs": {
                    "name": "stormControl"
                }
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "tags"
            ],
            "index": 141,
            "item": {
                "kind": "N",
                "rhs": {
                    "name": "statuses"
                }
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "tags"
            ],
            "index": 140,
            "item": {
                "kind": "N",
                "rhs": {
                    "name": "status"
                }
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "tags"
            ],
            "index": 139,
            "item": {
                "kind": "N",
                "rhs": {
                    "name": "stats"
                }
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "tags"
            ],
            "index": 138,
            "item": {
                "kind": "N",
                "rhs": {
                    "name": "staticRoutes"
                }
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "tags"
            ],
            "index": 137,
            "item": {
                "kind": "N",
                "rhs": {
                    "name": "stacks"
                }
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "tags"
            ],
            "index": 136,
            "item": {
                "kind": "N",
                "rhs": {
                    "name": "ssids"
                }
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "tags"
            ],
            "index": 135,
            "item": {
                "kind": "N",
                "rhs": {
                    "name": "splashLoginAttempts"
                }
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "tags"
            ],
            "index": 134,
            "item": {
                "kind": "N",
                "rhs": {
                    "name": "splashAuthorizationStatus"
                }
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "tags"
            ],
            "index": 133,
            "item": {
                "kind": "N",
                "rhs": {
                    "name": "splash"
                }
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "tags"
            ],
            "index": 132,
            "item": {
                "kind": "N",
                "rhs": {
                    "name": "softwares"
                }
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "tags"
            ],
            "index": 131,
            "item": {
                "kind": "N",
                "rhs": {
                    "name": "snmp"
                }
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "tags"
            ],
            "index": 130,
            "item": {
                "kind": "N",
                "rhs": {
                    "name": "smOwnersForKey"
                }
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "tags"
            ],
            "index": 129,
            "item": {
                "kind": "N",
                "rhs": {
                    "name": "smDevicesForKey"
                }
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "tags"
            ],
            "index": 128,
            "item": {
                "kind": "N",
                "rhs": {
                    "name": "siteToSiteVpn"
                }
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "tags"
            ],
            "index": 127,
            "item": {
                "kind": "N",
                "rhs": {
                    "name": "singleLan"
                }
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "tags"
            ],
            "index": 126,
            "item": {
                "kind": "N",
                "rhs": {
                    "name": "signalQualityHistory"
                }
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "tags"
            ],
            "index": 125,
            "item": {
                "kind": "N",
                "rhs": {
                    "name": "settings"
                }
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "tags"
            ],
            "index": 124,
            "item": {
                "kind": "N",
                "rhs": {
                    "name": "sense"
                }
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "tags"
            ],
            "index": 123,
            "item": {
                "kind": "N",
                "rhs": {
                    "name": "securityCenters"
                }
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "tags"
            ],
            "index": 122,
            "item": {
                "kind": "N",
                "rhs": {
                    "name": "security"
                }
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "tags"
            ],
            "index": 121,
            "item": {
                "kind": "N",
                "rhs": {
                    "name": "schedules"
                }
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "tags"
            ],
            "index": 120,
            "item": {
                "kind": "N",
                "rhs": {
                    "name": "samlRoles"
                }
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "tags"
            ],
            "index": 119,
            "item": {
                "kind": "N",
                "rhs": {
                    "name": "saml"
                }
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "tags"
            ],
            "index": 118,
            "item": {
                "kind": "N",
                "rhs": {
                    "name": "rules"
                }
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "tags"
            ],
            "index": 117,
            "item": {
                "kind": "N",
                "rhs": {
                    "name": "routing"
                }
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "tags"
            ],
            "index": 116,
            "item": {
                "kind": "N",
                "rhs": {
                    "name": "rfProfiles"
                }
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "tags"
            ],
            "index": 115,
            "item": {
                "kind": "N",
                "rhs": {
                    "name": "restrictions"
                }
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "tags"
            ],
            "index": 114,
            "item": {
                "kind": "N",
                "rhs": {
                    "name": "requests"
                }
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "tags"
            ],
            "index": 113,
            "item": {
                "kind": "N",
                "rhs": {
                    "name": "rendezvousPoints"
                }
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "tags"
            ],
            "index": 112,
            "item": {
                "kind": "N",
                "rhs": {
                    "name": "recent"
                }
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "tags"
            ],
            "index": 111,
            "item": {
                "kind": "N",
                "rhs": {
                    "name": "radio"
                }
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "tags"
            ],
            "index": 110,
            "item": {
                "kind": "N",
                "rhs": {
                    "name": "qualityRetentionProfiles"
                }
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "tags"
            ],
            "index": 109,
            "item": {
                "kind": "N",
                "rhs": {
                    "name": "qualityAndRetention"
                }
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "tags"
            ],
            "index": 108,
            "item": {
                "kind": "N",
                "rhs": {
                    "name": "qosRules"
                }
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "tags"
            ],
            "index": 107,
            "item": {
                "kind": "N",
                "rhs": {
                    "name": "profiles"
                }
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "tags"
            ],
            "index": 106,
            "item": {
                "kind": "N",
                "rhs": {
                    "name": "priorities"
                }
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "tags"
            ],
            "index": 105,
            "item": {
                "kind": "N",
                "rhs": {
                    "name": "ports"
                }
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "tags"
            ],
            "index": 104,
            "item": {
                "kind": "N",
                "rhs": {
                    "name": "portSchedules"
                }
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "tags"
            ],
            "index": 103,
            "item": {
                "kind": "N",
                "rhs": {
                    "name": "portForwardingRules"
                }
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "tags"
            ],
            "index": 102,
            "item": {
                "kind": "N",
                "rhs": {
                    "name": "policy"
                }
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "tags"
            ],
            "index": 101,
            "item": {
                "kind": "N",
                "rhs": {
                    "name": "piiKeys"
                }
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "tags"
            ],
            "index": 100,
            "item": {
                "kind": "N",
                "rhs": {
                    "name": "pii"
                }
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "tags"
            ],
            "index": 99,
            "item": {
                "kind": "N",
                "rhs": {
                    "name": "performanceHistory"
                }
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "tags"
            ],
            "index": 98,
            "item": {
                "kind": "N",
                "rhs": {
                    "name": "performance"
                }
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "tags"
            ],
            "index": 97,
            "item": {
                "kind": "N",
                "rhs": {
                    "name": "packets"
                }
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "tags"
            ],
            "index": 96,
            "item": {
                "kind": "N",
                "rhs": {
                    "name": "overview"
                }
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "tags"
            ],
            "index": 95,
            "item": {
                "kind": "N",
                "rhs": {
                    "name": "ospf"
                }
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "tags"
            ],
            "index": 94,
            "item": {
                "kind": "N",
                "rhs": {
                    "name": "order"
                }
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "tags"
            ],
            "index": 93,
            "item": {
                "kind": "N",
                "rhs": {
                    "name": "openapiSpec"
                }
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "tags"
            ],
            "index": 92,
            "item": {
                "kind": "N",
                "rhs": {
                    "name": "oneToOneNatRules"
                }
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "tags"
            ],
            "index": 91,
            "item": {
                "kind": "N",
                "rhs": {
                    "name": "oneToManyNatRules"
                }
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "tags"
            ],
            "index": 90,
            "item": {
                "kind": "N",
                "rhs": {
                    "name": "objectDetectionModels"
                }
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "tags"
            ],
            "index": 89,
            "item": {
                "kind": "N",
                "rhs": {
                    "name": "networkHealth"
                }
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "tags"
            ],
            "index": 88,
            "item": {
                "kind": "N",
                "rhs": {
                    "name": "networkAdapters"
                }
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "tags"
            ],
            "index": 87,
            "item": {
                "kind": "N",
                "rhs": {
                    "name": "netflow"
                }
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "tags"
            ],
            "index": 86,
            "item": {
                "kind": "N",
                "rhs": {
                    "name": "multicast"
                }
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "tags"
            ],
            "index": 85,
            "item": {
                "kind": "N",
                "rhs": {
                    "name": "mtu"
                }
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "tags"
            ],
            "index": 84,
            "item": {
                "kind": "N",
                "rhs": {
                    "name": "mqttBrokers"
                }
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "tags"
            ],
            "index": 83,
            "item": {
                "kind": "N",
                "rhs": {
                    "name": "monitoredMediaServers"
                }
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "tags"
            ],
            "index": 82,
            "item": {
                "kind": "N",
                "rhs": {
                    "name": "monitor"
                }
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "tags"
            ],
            "index": 81,
            "item": {
                "kind": "N",
                "rhs": {
                    "name": "meshStatuses"
                }
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "tags"
            ],
            "index": 80,
            "item": {
                "kind": "N",
                "rhs": {
                    "name": "merakiAuthUsers"
                }
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "tags"
            ],
            "index": 79,
            "item": {
                "kind": "N",
                "rhs": {
                    "name": "managementInterface"
                }
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "tags"
            ],
            "index": 78,
            "item": {
                "kind": "N",
                "rhs": {
                    "name": "malware"
                }
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "tags"
            ],
            "index": 77,
            "item": {
                "kind": "N",
                "rhs": {
                    "name": "lossAndLatencyHistory"
                }
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "tags"
            ],
            "index": 76,
            "item": {
                "kind": "N",
                "rhs": {
                    "name": "logs"
                }
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "tags",
                75,
                "name"
            ],
            "lhs": "Wireless settings",
            "rhs": "lldpCdp",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "tags",
                74,
                "name"
            ],
            "lhs": "Wireless health",
            "rhs": "liveTools",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "tags",
                73,
                "name"
            ],
            "lhs": "Webhook logs",
            "rhs": "live",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "tags",
                72,
                "name"
            ],
            "lhs": "VLANs",
            "rhs": "linkAggregations",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "tags",
                71,
                "name"
            ],
            "lhs": "Uplink settings",
            "rhs": "licenses",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "tags",
                70,
                "name"
            ],
            "lhs": "Traffic shaping",
            "rhs": "latencyStats",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "tags",
                69,
                "name"
            ],
            "lhs": "Traffic analysis settings",
            "rhs": "latencyHistory",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "tags",
                68,
                "name"
            ],
            "lhs": "Syslog servers",
            "rhs": "lan",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "tags",
                67,
                "name"
            ],
            "lhs": "Switch stacks",
            "rhs": "l7FirewallRules",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "tags",
                66,
                "name"
            ],
            "lhs": "Switch settings",
            "rhs": "l3FirewallRules",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "tags",
                65,
                "name"
            ],
            "lhs": "Switch profiles",
            "rhs": "inventoryDevices",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "tags",
                64,
                "name"
            ],
            "lhs": "Switch ports",
            "rhs": "intrusion",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "tags",
                63,
                "name"
            ],
            "lhs": "Switch port schedules",
            "rhs": "interfaces",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "tags",
                62,
                "name"
            ],
            "lhs": "Switch ACLs",
            "rhs": "inboundFirewallRules",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "tags",
                61,
                "name"
            ],
            "lhs": "Splash settings",
            "rhs": "idps",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "tags",
                60,
                "name"
            ],
            "lhs": "Splash login attempts",
            "rhs": "identityPsks",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "tags",
                59,
                "name"
            ],
            "lhs": "Security events",
            "rhs": "httpServers",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "tags",
                58,
                "name"
            ],
            "lhs": "SSIDs",
            "rhs": "history",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "tags",
                57,
                "name"
            ],
            "lhs": "SNMP settings",
            "rhs": "groupPolicies",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "tags",
                56,
                "name"
            ],
            "lhs": "SM",
            "rhs": "floorPlans",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "tags",
                55,
                "name"
            ],
            "lhs": "SAML roles",
            "rhs": "firmwareUpgrades",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "tags",
                54,
                "name"
            ],
            "lhs": "Radio settings",
            "rhs": "firewalledServices",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "tags",
                53,
                "name"
            ],
            "lhs": "PII",
            "rhs": "firewall",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "tags",
                52,
                "name"
            ],
            "lhs": "Organizations",
            "rhs": "fields",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "tags",
                51,
                "name"
            ],
            "lhs": "OpenAPI Spec",
            "rhs": "failedConnections",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "tags",
                50,
                "name"
            ],
            "lhs": "Networks",
            "rhs": "events",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "tags",
                49,
                "name"
            ],
            "lhs": "NetFlow settings",
            "rhs": "eventTypes",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "tags",
                48,
                "name"
            ],
            "lhs": "Named tag scope",
            "rhs": "dscpToCosMappings",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "tags",
                47,
                "name"
            ],
            "lhs": "Monitored media servers",
            "rhs": "dscpTaggingOptions",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "tags",
                46,
                "name"
            ],
            "lhs": "Meraki auth users",
            "rhs": "dhcpServerPolicy",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "tags",
                45,
                "name"
            ],
            "lhs": "Management interface settings",
            "rhs": "dhcp",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "tags",
                44,
                "name"
            ],
            "lhs": "Malware settings",
            "rhs": "deviceProfiles",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "tags",
                43,
                "name"
            ],
            "lhs": "MX warm spare settings",
            "rhs": "deviceCommandLogs",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "tags",
                42,
                "name"
            ],
            "lhs": "MX static routes",
            "rhs": "desktopLogs",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "tags",
                41,
                "name"
            ],
            "lhs": "MX port forwarding rules",
            "rhs": "dataRateHistory",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "tags",
                40,
                "name"
            ],
            "lhs": "MX inbound firewall",
            "rhs": "customPerformanceClasses",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "tags",
                39,
                "name"
            ],
            "lhs": "MX cellular firewall",
            "rhs": "contentFiltering",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "tags",
                38,
                "name"
            ],
            "lhs": "MX VPN firewall",
            "rhs": "connectivityMonitoringDestinations",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "tags",
                37,
                "name"
            ],
            "lhs": "MX VLAN ports",
            "rhs": "connectivityEvents",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "tags",
                36,
                "name"
            ],
            "lhs": "MX L7 firewall",
            "rhs": "connectivity",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "tags",
                35,
                "name"
            ],
            "lhs": "MX L7 application categories",
            "rhs": "connectionStats",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "tags",
                34,
                "name"
            ],
            "lhs": "MX L3 firewall",
            "rhs": "configure",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "tags",
                33,
                "name"
            ],
            "lhs": "MX 1:Many NAT rules",
            "rhs": "configurationChanges",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "tags",
                32,
                "name"
            ],
            "lhs": "MX 1:1 NAT rules",
            "rhs": "configTemplates",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "tags",
                31,
                "name"
            ],
            "lhs": "MV Sense",
            "rhs": "clients",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "tags",
                30,
                "name"
            ],
            "lhs": "MR L3 firewall",
            "rhs": "clientCountHistory",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "tags",
                29,
                "name"
            ],
            "lhs": "MG uplink settings",
            "rhs": "channelUtilizationHistory",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "tags",
                28,
                "name"
            ],
            "lhs": "MG subnet pool settings",
            "rhs": "channelUtilization",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "tags",
                27,
                "name"
            ],
            "lhs": "MG port forwarding rules",
            "rhs": "certs",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "tags",
                26,
                "name"
            ],
            "lhs": "MG connectivity monitoring destinations",
            "rhs": "cellularUsageHistory",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "tags",
                25,
                "name"
            ],
            "lhs": "MG LAN settings",
            "rhs": "cellularFirewallRules",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "tags",
                24,
                "name"
            ],
            "lhs": "MG DHCP settings",
            "rhs": "categories",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "tags",
                23,
                "name"
            ],
            "lhs": "Link aggregations",
            "rhs": "bypassActivationLockAttempts",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "tags",
                22,
                "name"
            ],
            "lhs": "Licenses",
            "rhs": "brandingPolicies",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "tags",
                21,
                "name"
            ],
            "lhs": "Intrusion settings",
            "rhs": "bluetoothClients",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "tags",
                20,
                "name"
            ],
            "lhs": "HTTP servers",
            "rhs": "bluetooth",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "tags",
                19,
                "name"
            ],
            "lhs": "Group policies",
            "rhs": "applicationCategories",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "tags",
                18,
                "name"
            ],
            "lhs": "Floorplans",
            "rhs": "apnsCert",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "tags",
                17,
                "name"
            ],
            "lhs": "Firewalled services",
            "rhs": "apiRequests",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "tags",
                16,
                "name"
            ],
            "lhs": "Events",
            "rhs": "analytics",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "tags",
                15,
                "name"
            ],
            "lhs": "Devices",
            "rhs": "alternateManagementInterface",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "tags",
                14,
                "name"
            ],
            "lhs": "Dashboard branding policies",
            "rhs": "alerts",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "tags",
                13,
                "name"
            ],
            "lhs": "Content filtering rules",
            "rhs": "airMarshal",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "tags",
                12,
                "name"
            ],
            "lhs": "Content filtering categories",
            "rhs": "admins",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "tags",
                11,
                "name"
            ],
            "lhs": "Connectivity monitoring destinations",
            "rhs": "actionBatches",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "tags",
                10,
                "name"
            ],
            "lhs": "Config templates",
            "rhs": "accessControlLists",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "tags",
                9,
                "name"
            ],
            "lhs": "Clients",
            "rhs": "sm",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "tags",
                8,
                "name"
            ],
            "lhs": "Change log",
            "rhs": "cellularGateway",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "tags",
                7,
                "name"
            ],
            "lhs": "Cameras",
            "rhs": "switch",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "tags",
                6,
                "name"
            ],
            "lhs": "Camera quality retention profiles",
            "rhs": "appliance",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "tags",
                5,
                "name"
            ],
            "lhs": "Bluetooth settings",
            "rhs": "camera",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "tags",
                4,
                "name"
            ],
            "lhs": "Bluetooth clients",
            "rhs": "wireless",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "tags",
                3,
                "name"
            ],
            "lhs": "Alert settings",
            "rhs": "insight",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "tags",
                2,
                "name"
            ],
            "lhs": "Admins",
            "rhs": "devices",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "tags",
                1,
                "name"
            ],
            "lhs": "Action batches",
            "rhs": "networks",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "tags",
                0,
                "name"
            ],
            "lhs": "API usage",
            "rhs": "organizations",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "x-batchable-actions"
            ],
            "index": 110,
            "item": {
                "kind": "N",
                "rhs": {
                    "group": "Wireless settings",
                    "summary": "Update the wireless settings for a network",
                    "resource": "/networks/{networkId}/wireless/settings",
                    "operation": "update"
                }
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "x-batchable-actions"
            ],
            "index": 109,
            "item": {
                "kind": "N",
                "rhs": {
                    "group": "Wireless l7 firewall",
                    "summary": "Update the L7 firewall rules of an SSID on an MR network",
                    "resource": "/networks/{networkId}/wireless/ssids/{number}/firewall/l7FirewallRules",
                    "operation": "update"
                }
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "x-batchable-actions"
            ],
            "index": 108,
            "item": {
                "kind": "N",
                "rhs": {
                    "group": "Wireless alternate management interface",
                    "summary": "Update alternate management interface and device static IP",
                    "resource": "/networks/{networkId}/wireless/alternateManagementInterface",
                    "operation": "update"
                }
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "x-batchable-actions"
            ],
            "index": 107,
            "item": {
                "kind": "N",
                "rhs": {
                    "group": "Warm spare",
                    "summary": "Update MX warm spare settings",
                    "resource": "/networks/{networkId}/appliance/warmSpare",
                    "operation": "update"
                }
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "x-batchable-actions"
            ],
            "index": 106,
            "item": {
                "kind": "N",
                "rhs": {
                    "group": "Warm spare",
                    "summary": "Swap MX primary and warm spare appliances",
                    "resource": "/networks/{networkId}/appliance/warmSpare",
                    "operation": "swap"
                }
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "x-batchable-actions"
            ],
            "index": 105,
            "item": {
                "kind": "N",
                "rhs": {
                    "group": "VLAN",
                    "summary": "Update a VLAN",
                    "resource": "/networks/{networkId}/appliance/vlans/{vlanId}",
                    "operation": "update"
                }
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "x-batchable-actions"
            ],
            "index": 104,
            "item": {
                "kind": "N",
                "rhs": {
                    "group": "VLAN",
                    "summary": "Delete a VLAN from a network",
                    "resource": "/networks/{networkId}/appliance/vlans/{vlanId}",
                    "operation": "destroy"
                }
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "x-batchable-actions"
            ],
            "index": 103,
            "item": {
                "kind": "N",
                "rhs": {
                    "group": "VLAN",
                    "summary": "Add a VLAN",
                    "resource": "/networks/{networkId}/appliance/vlans",
                    "operation": "create"
                }
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "x-batchable-actions"
            ],
            "index": 102,
            "item": {
                "kind": "N",
                "rhs": {
                    "group": "Uplink selection settings",
                    "summary": "Update uplink selection settings for an MX network",
                    "resource": "/networks/{networkId}/appliance/trafficShaping/uplinkSelection",
                    "operation": "update"
                }
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "x-batchable-actions"
            ],
            "index": 101,
            "item": {
                "kind": "N",
                "rhs": {
                    "group": "Traffic shaping settings",
                    "summary": "Update the traffic shaping settings for an SSID on an MR network",
                    "resource": "/networks/{networkId}/wireless/ssids/{number}/trafficShaping/rules",
                    "operation": "update"
                }
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "x-batchable-actions"
            ],
            "index": 100,
            "item": {
                "kind": "N",
                "rhs": {
                    "group": "Traffic shaping settings",
                    "summary": "Update the traffic shaping settings rules for an MX network",
                    "resource": "/networks/{networkId}/appliance/trafficShaping/rules",
                    "operation": "update"
                }
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "x-batchable-actions"
            ],
            "index": 99,
            "item": {
                "kind": "N",
                "rhs": {
                    "group": "Switch warm spare settings",
                    "summary": "Update warm spare configuration for a switch. The spare will use the same L3 configuration as the primary. Note that this will irreversibly destroy any existing L3 configuration on the spare.",
                    "resource": "/devices/{serial}/switch/warmSpare",
                    "operation": "update"
                }
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "x-batchable-actions"
            ],
            "index": 98,
            "item": {
                "kind": "N",
                "rhs": {
                    "group": "Switch stacks l3 static route",
                    "summary": "Update a layer 3 static route for a switch stack",
                    "resource": "/networks/{networkId}/switch/stacks/{switchStackId}/routing/staticRoutes/{staticRouteId}",
                    "operation": "update"
                }
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "x-batchable-actions"
            ],
            "index": 97,
            "item": {
                "kind": "N",
                "rhs": {
                    "group": "Switch stacks l3 static route",
                    "summary": "Delete a layer 3 static route for a switch stack",
                    "resource": "/networks/{networkId}/switch/stacks/{switchStackId}/routing/staticRoutes/{staticRouteId}",
                    "operation": "destroy"
                }
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "x-batchable-actions"
            ],
            "index": 96,
            "item": {
                "kind": "N",
                "rhs": {
                    "group": "Switch stacks l3 static route",
                    "summary": "Create a layer 3 static route for a switch stack",
                    "resource": "/networks/{networkId}/switch/stacks/{switchStackId}/routing/staticRoutes",
                    "operation": "create"
                }
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "x-batchable-actions"
            ],
            "index": 95,
            "item": {
                "kind": "N",
                "rhs": {
                    "group": "Switch stacks l3 interface dhcp",
                    "summary": "Update a layer 3 interface DHCP configuration for a switch stack",
                    "resource": "/networks/{networkId}/switch/stacks/{switchStackId}/routing/interfaces/{interfaceId}/dhcp",
                    "operation": "update"
                }
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "x-batchable-actions"
            ],
            "index": 94,
            "item": {
                "kind": "N",
                "rhs": {
                    "group": "Switch stacks l3 interface",
                    "summary": "Update a layer 3 interface for a switch stack",
                    "resource": "/networks/{networkId}/switch/stacks/{switchStackId}/routing/interfaces/{interfaceId}",
                    "operation": "update"
                }
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "x-batchable-actions"
            ],
            "index": 93,
            "item": {
                "kind": "N",
                "rhs": {
                    "group": "Switch stacks l3 interface",
                    "summary": "Delete a layer 3 interface from a switch stack",
                    "resource": "/networks/{networkId}/switch/stacks/{switchStackId}/routing/interfaces/{interfaceId}",
                    "operation": "destroy"
                }
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "x-batchable-actions"
            ],
            "index": 92,
            "item": {
                "kind": "N",
                "rhs": {
                    "group": "Switch stacks l3 interface",
                    "summary": "Create a layer 3 interface for a switch stack",
                    "resource": "/networks/{networkId}/switch/stacks/{switchStackId}/routing/interfaces",
                    "operation": "create"
                }
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "x-batchable-actions"
            ],
            "index": 91,
            "item": {
                "kind": "N",
                "rhs": {
                    "group": "Switch profile port",
                    "summary": "Update a switch profile port",
                    "resource": "/organizations/{organizationId}/configTemplates/{configTemplateId}/switch/profiles/{profileId}/ports/{portId}",
                    "operation": "update"
                }
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "x-batchable-actions"
            ],
            "index": 90,
            "item": {
                "kind": "N",
                "rhs": {
                    "group": "Switch port schedule",
                    "summary": "Update a switch port schedule",
                    "resource": "/networks/{networkId}/switch/portSchedules/{portScheduleId}",
                    "operation": "update"
                }
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "x-batchable-actions"
            ],
            "index": 89,
            "item": {
                "kind": "N",
                "rhs": {
                    "group": "Switch port",
                    "summary": "Update a switch port",
                    "resource": "/devices/{serial}/switch/ports/{portId}",
                    "operation": "update"
                }
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "x-batchable-actions"
            ],
            "index": 88,
            "item": {
                "kind": "N",
                "rhs": {
                    "group": "Switch port",
                    "summary": "Cycle a set of switch ports",
                    "resource": "/devices/{serial}/switch/ports",
                    "operation": "cycle"
                }
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "x-batchable-actions"
            ],
            "index": 87,
            "item": {
                "kind": "N",
                "rhs": {
                    "group": "Storm control",
                    "summary": "Update the storm control configuration for a switch network",
                    "resource": "/networks/{networkId}/switch/stormControl",
                    "operation": "update"
                }
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "x-batchable-actions"
            ],
            "index": 86,
            "item": {
                "kind": "N",
                "rhs": {
                    "group": "Ssid",
                    "summary": "Update the attributes of an MR SSID",
                    "resource": "/networks/{networkId}/wireless/ssids/{number}",
                    "operation": "update"
                }
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "x-batchable-actions"
            ],
            "index": 85,
            "item": {
                "kind": "N",
                "rhs": {
                    "group": "Site to site vpn",
                    "summary": "Update the site-to-site VPN settings of a network. Only valid for MX networks in NAT mode.",
                    "resource": "/networks/{networkId}/appliance/vpn/siteToSiteVpn",
                    "operation": "update"
                }
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "x-batchable-actions"
            ],
            "index": 84,
            "item": {
                "kind": "N",
                "rhs": {
                    "group": "Single lan",
                    "summary": "Update single LAN configuration",
                    "resource": "/networks/{networkId}/appliance/singleLan",
                    "operation": "update"
                }
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "x-batchable-actions"
            ],
            "index": 83,
            "item": {
                "kind": "N",
                "rhs": {
                    "group": "Sense setting",
                    "summary": "Update sense settings for the given camera",
                    "resource": "/devices/{serial}/camera/sense",
                    "operation": "update"
                }
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "x-batchable-actions"
            ],
            "index": 82,
            "item": {
                "kind": "N",
                "rhs": {
                    "group": "STP configuration",
                    "summary": "Updates STP settings",
                    "resource": "/networks/{networkId}/switch/stp",
                    "operation": "update"
                }
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "x-batchable-actions"
            ],
            "index": 81,
            "item": {
                "kind": "N",
                "rhs": {
                    "group": "Rendezvous point",
                    "summary": "Update a multicast rendezvous point",
                    "resource": "/networks/{networkId}/switch/routing/multicast/rendezvousPoints/{rendezvousPointId}",
                    "operation": "update"
                }
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "x-batchable-actions"
            ],
            "index": 80,
            "item": {
                "kind": "N",
                "rhs": {
                    "group": "Rendezvous point",
                    "summary": "Delete a multicast rendezvous point",
                    "resource": "/networks/{networkId}/switch/routing/multicast/rendezvousPoints/{rendezvousPointId}",
                    "operation": "destroy"
                }
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "x-batchable-actions"
            ],
            "index": 79,
            "item": {
                "kind": "N",
                "rhs": {
                    "group": "Rendezvous point",
                    "summary": "Create a multicast rendezvous point",
                    "resource": "/networks/{networkId}/switch/routing/multicast/rendezvousPoints",
                    "operation": "create"
                }
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "x-batchable-actions"
            ],
            "index": 78,
            "item": {
                "kind": "N",
                "rhs": {
                    "group": "Radio settings",
                    "summary": "Update the radio settings of a device",
                    "resource": "/devices/{serial}/wireless/radio/settings",
                    "operation": "update"
                }
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "x-batchable-actions"
            ],
            "index": 77,
            "item": {
                "kind": "N",
                "rhs": {
                    "group": "RF profile",
                    "summary": "Updates specified RF profile for this network",
                    "resource": "/networks/{networkId}/wireless/rfProfiles/{rfProfileId}",
                    "operation": "update"
                }
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "x-batchable-actions"
            ],
            "index": 76,
            "item": {
                "kind": "N",
                "rhs": {
                    "group": "RF profile",
                    "summary": "Delete a RF Profile",
                    "resource": "/networks/{networkId}/wireless/rfProfiles/{rfProfileId}",
                    "operation": "destroy"
                }
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "x-batchable-actions"
            ],
            "index": 75,
            "item": {
                "kind": "N",
                "rhs": {
                    "group": "RF profile",
                    "summary": "Creates new RF profile for this network",
                    "resource": "/networks/{networkId}/wireless/rfProfiles",
                    "operation": "create"
                }
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "x-batchable-actions"
            ],
            "index": 74,
            "item": {
                "kind": "N",
                "rhs": {
                    "group": "Quality and retention setting",
                    "summary": "Update quality and retention settings for the given camera",
                    "resource": "/devices/{serial}/camera/qualityAndRetention",
                    "operation": "update"
                }
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "x-batchable-actions"
            ],
            "index": 73,
            "item": {
                "kind": "N",
                "rhs": {
                    "group": "Qos rule",
                    "summary": "Update a quality of service rule",
                    "resource": "/networks/{networkId}/switch/qosRules/{qosRuleId}",
                    "operation": "update"
                }
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "x-batchable-actions"
            ],
            "index": 72,
            "item": {
                "kind": "N",
                "rhs": {
                    "group": "Qos rule",
                    "summary": "Delete a quality of service rule",
                    "resource": "/networks/{networkId}/switch/qosRules/{qosRuleId}",
                    "operation": "destroy"
                }
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "x-batchable-actions"
            ],
            "index": 71,
            "item": {
                "kind": "N",
                "rhs": {
                    "group": "Qos rule",
                    "summary": "Update the order in which the rules should be processed by the switch",
                    "resource": "/networks/{networkId}/switch/qosRules/order",
                    "operation": "update_order"
                }
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "x-batchable-actions"
            ],
            "index": 70,
            "item": {
                "kind": "N",
                "rhs": {
                    "group": "Qos rule",
                    "summary": "Add a quality of service rule",
                    "resource": "/networks/{networkId}/switch/qosRules",
                    "operation": "create"
                }
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "x-batchable-actions"
            ],
            "index": 69,
            "item": {
                "kind": "N",
                "rhs": {
                    "group": "Psk group",
                    "summary": "Update an Identity PSK",
                    "resource": "/networks/{networkId}/wireless/ssids/{number}/identityPsks/{identityPskId}",
                    "operation": "update"
                }
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "x-batchable-actions"
            ],
            "index": 68,
            "item": {
                "kind": "N",
                "rhs": {
                    "group": "Psk group",
                    "summary": "Delete an Identity PSK",
                    "resource": "/networks/{networkId}/wireless/ssids/{number}/identityPsks/{identityPskId}",
                    "operation": "destroy"
                }
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "x-batchable-actions"
            ],
            "index": 67,
            "item": {
                "kind": "N",
                "rhs": {
                    "group": "Psk group",
                    "summary": "Create an Identity PSK",
                    "resource": "/networks/{networkId}/wireless/ssids/{number}/identityPsks",
                    "operation": "create"
                }
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "x-batchable-actions"
            ],
            "index": 66,
            "item": {
                "kind": "N",
                "rhs": {
                    "group": "Ospf routing",
                    "summary": "Update layer 3 OSPF routing configuration",
                    "resource": "/networks/{networkId}/switch/routing/ospf",
                    "operation": "update"
                }
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "A",
            "path": [
                "x-batchable-actions"
            ],
            "index": 65,
            "item": {
                "kind": "N",
                "rhs": {
                    "group": "Organization SAML IdP",
                    "summary": "Update a SAML IdP in your organization",
                    "resource": "/organizations/{organizationId}/saml/idps/{idpId}",
                    "operation": "update"
                }
            },
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "x-batchable-actions",
                64,
                "group"
            ],
            "lhs": "Wireless settings",
            "rhs": "Organization SAML IdP",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "x-batchable-actions",
                64,
                "summary"
            ],
            "lhs": "Update the wireless settings for a network",
            "rhs": "Remove a SAML IdP in your organization.",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "x-batchable-actions",
                64,
                "resource"
            ],
            "lhs": "/networks/{networkId}/wireless/settings",
            "rhs": "/organizations/{organizationId}/saml/idps/{idpId}",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "x-batchable-actions",
                64,
                "operation"
            ],
            "lhs": "update",
            "rhs": "destroy",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "x-batchable-actions",
                63,
                "group"
            ],
            "lhs": "Warm spare",
            "rhs": "Organization SAML IdP",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "x-batchable-actions",
                63,
                "summary"
            ],
            "lhs": "Update MX warm spare settings",
            "rhs": "Create a SAML IdP for your organization.",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "x-batchable-actions",
                63,
                "resource"
            ],
            "lhs": "/networks/{networkId}/warmSpareSettings",
            "rhs": "/organizations/{organizationId}/saml/idps",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "x-batchable-actions",
                63,
                "operation"
            ],
            "lhs": "update",
            "rhs": "create",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "x-batchable-actions",
                62,
                "group"
            ],
            "lhs": "Warm spare",
            "rhs": "Network settings",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "x-batchable-actions",
                62,
                "summary"
            ],
            "lhs": "Swap MX primary and warm spare appliances",
            "rhs": "Update the settings for a network",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "x-batchable-actions",
                62,
                "resource"
            ],
            "lhs": "/networks/{networkId}/swapWarmSpare",
            "rhs": "/networks/{networkId}/settings",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "x-batchable-actions",
                62,
                "operation"
            ],
            "lhs": "swap",
            "rhs": "update",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "x-batchable-actions",
                61,
                "group"
            ],
            "lhs": "VLAN",
            "rhs": "Network",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "x-batchable-actions",
                61,
                "summary"
            ],
            "lhs": "Update a VLAN",
            "rhs": "Create a network",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "x-batchable-actions",
                61,
                "resource"
            ],
            "lhs": "/networks/{networkId}/vlans/{vlanId}",
            "rhs": "/organizations/{organizationId}/networks",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "x-batchable-actions",
                61,
                "operation"
            ],
            "lhs": "update",
            "rhs": "create",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "x-batchable-actions",
                60,
                "group"
            ],
            "lhs": "VLAN",
            "rhs": "Network",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "x-batchable-actions",
                60,
                "summary"
            ],
            "lhs": "Delete a VLAN from a network",
            "rhs": "Combine multiple networks into a single network",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "x-batchable-actions",
                60,
                "resource"
            ],
            "lhs": "/networks/{networkId}/vlans/{vlanId}",
            "rhs": "/organizations/{organizationId}/networks",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "x-batchable-actions",
                60,
                "operation"
            ],
            "lhs": "destroy",
            "rhs": "combine",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "x-batchable-actions",
                59,
                "group"
            ],
            "lhs": "VLAN",
            "rhs": "Network",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "x-batchable-actions",
                59,
                "summary"
            ],
            "lhs": "Add a VLAN",
            "rhs": "Update a network",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "x-batchable-actions",
                59,
                "resource"
            ],
            "lhs": "/networks/{networkId}/vlans",
            "rhs": "/networks/{networkId}",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "x-batchable-actions",
                59,
                "operation"
            ],
            "lhs": "create",
            "rhs": "update",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "x-batchable-actions",
                58,
                "group"
            ],
            "lhs": "Traffic shaping settings",
            "rhs": "Network",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "x-batchable-actions",
                58,
                "summary"
            ],
            "lhs": "Update the traffic shaping settings for an MX network",
            "rhs": "Split a combined network into individual networks for each type of device",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "x-batchable-actions",
                58,
                "resource"
            ],
            "lhs": "/networks/{networkId}/trafficShaping",
            "rhs": "/networks/{networkId}",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "x-batchable-actions",
                58,
                "operation"
            ],
            "lhs": "update",
            "rhs": "split",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "x-batchable-actions",
                57,
                "group"
            ],
            "lhs": "Traffic shaping settings",
            "rhs": "Network",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "x-batchable-actions",
                57,
                "summary"
            ],
            "lhs": "Update the traffic shaping settings for an SSID on an MR network",
            "rhs": "Delete a network",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "x-batchable-actions",
                57,
                "resource"
            ],
            "lhs": "/networks/{networkId}/ssids/{number}/trafficShaping",
            "rhs": "/networks/{networkId}",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "x-batchable-actions",
                57,
                "operation"
            ],
            "lhs": "update",
            "rhs": "destroy",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "x-batchable-actions",
                56,
                "group"
            ],
            "lhs": "Switch port schedule",
            "rhs": "Network",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "x-batchable-actions",
                56,
                "summary"
            ],
            "lhs": "Update a switch port schedule",
            "rhs": "Bind a network to a template.",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "x-batchable-actions",
                56,
                "resource"
            ],
            "lhs": "/networks/{networkId}/switch/portSchedules/{portScheduleId}",
            "rhs": "/networks/{networkId}",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "x-batchable-actions",
                56,
                "operation"
            ],
            "lhs": "update",
            "rhs": "bind",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "x-batchable-actions",
                55,
                "group"
            ],
            "lhs": "Switch port",
            "rhs": "Multicast",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "x-batchable-actions",
                55,
                "summary"
            ],
            "lhs": "Update a switch port",
            "rhs": "Update multicast settings for a network",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "x-batchable-actions",
                55,
                "resource"
            ],
            "lhs": "/devices/{serial}/switchPorts/{number}",
            "rhs": "/networks/{networkId}/switch/routing/multicast",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "x-batchable-actions",
                54,
                "group"
            ],
            "lhs": "Switch port",
            "rhs": "Mqtt broker",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "x-batchable-actions",
                54,
                "summary"
            ],
            "lhs": "Cycle a set of switch ports",
            "rhs": "Update an MQTT broker",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "x-batchable-actions",
                54,
                "resource"
            ],
            "lhs": "/devices/{serial}/switch/ports",
            "rhs": "/networks/{networkId}/mqttBrokers/{mqttBrokerId}",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "x-batchable-actions",
                54,
                "operation"
            ],
            "lhs": "cycle",
            "rhs": "update",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "x-batchable-actions",
                53,
                "group"
            ],
            "lhs": "Storm control",
            "rhs": "Mqtt broker",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "x-batchable-actions",
                53,
                "summary"
            ],
            "lhs": "Update the storm control configuration for a switch network",
            "rhs": "Delete an MQTT broker",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "x-batchable-actions",
                53,
                "resource"
            ],
            "lhs": "/networks/{networkId}/switch/settings/stormControl",
            "rhs": "/networks/{networkId}/mqttBrokers/{mqttBrokerId}",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "x-batchable-actions",
                53,
                "operation"
            ],
            "lhs": "update",
            "rhs": "destroy",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "x-batchable-actions",
                52,
                "group"
            ],
            "lhs": "Ssid",
            "rhs": "Mqtt broker",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "x-batchable-actions",
                52,
                "summary"
            ],
            "lhs": "Update the attributes of an SSID",
            "rhs": "Add an MQTT broker",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "x-batchable-actions",
                52,
                "resource"
            ],
            "lhs": "/networks/{networkId}/ssids/{number}",
            "rhs": "/networks/{networkId}/mqttBrokers",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "x-batchable-actions",
                52,
                "operation"
            ],
            "lhs": "update",
            "rhs": "create",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "x-batchable-actions",
                51,
                "group"
            ],
            "lhs": "Site to site vpn",
            "rhs": "Monitored media server",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "x-batchable-actions",
                51,
                "summary"
            ],
            "lhs": "Update the site-to-site VPN settings of a network. Only valid for MX networks in NAT mode.",
            "rhs": "Update a monitored media server for this organization. Only valid for organizations with Meraki Insight.",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "x-batchable-actions",
                51,
                "resource"
            ],
            "lhs": "/networks/{networkId}/siteToSiteVpn",
            "rhs": "/organizations/{organizationId}/insight/monitoredMediaServers/{monitoredMediaServerId}",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "x-batchable-actions",
                50,
                "group"
            ],
            "lhs": "STP configuration",
            "rhs": "Monitored media server",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "x-batchable-actions",
                50,
                "summary"
            ],
            "lhs": "Updates STP settings",
            "rhs": "Delete a monitored media server from this organization. Only valid for organizations with Meraki Insight.",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "x-batchable-actions",
                50,
                "resource"
            ],
            "lhs": "/networks/{networkId}/switch/settings/stp",
            "rhs": "/organizations/{organizationId}/insight/monitoredMediaServers/{monitoredMediaServerId}",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "x-batchable-actions",
                50,
                "operation"
            ],
            "lhs": "update",
            "rhs": "destroy",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "x-batchable-actions",
                49,
                "group"
            ],
            "lhs": "Radio settings",
            "rhs": "Monitored media server",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "x-batchable-actions",
                49,
                "summary"
            ],
            "lhs": "Update the radio settings of a device",
            "rhs": "Add a media server to be monitored for this organization. Only valid for organizations with Meraki Insight.",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "x-batchable-actions",
                49,
                "resource"
            ],
            "lhs": "/networks/{networkId}/devices/{serial}/wireless/radioSettings",
            "rhs": "/organizations/{organizationId}/insight/monitoredMediaServers",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "x-batchable-actions",
                49,
                "operation"
            ],
            "lhs": "update",
            "rhs": "create",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "x-batchable-actions",
                48,
                "group"
            ],
            "lhs": "RF profile",
            "rhs": "Meraki auth user",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "x-batchable-actions",
                48,
                "summary"
            ],
            "lhs": "Updates specified RF profile for this network",
            "rhs": "Update a user configured with Meraki Authentication (currently only 802.1X RADIUS users can be updated)",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "x-batchable-actions",
                48,
                "resource"
            ],
            "lhs": "/networks/{networkId}/wireless/rfProfiles/{rfProfileId}",
            "rhs": "/networks/{networkId}/merakiAuthUsers/{merakiAuthUserId}",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "x-batchable-actions",
                47,
                "group"
            ],
            "lhs": "RF profile",
            "rhs": "Meraki auth user",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "x-batchable-actions",
                47,
                "summary"
            ],
            "lhs": "Delete a RF Profile",
            "rhs": "Delete a user configured with Meraki Authentication (currently only 802.1X RADIUS users can be deleted)",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "x-batchable-actions",
                47,
                "resource"
            ],
            "lhs": "/networks/{networkId}/wireless/rfProfiles/{rfProfileId}",
            "rhs": "/networks/{networkId}/merakiAuthUsers/{merakiAuthUserId}",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "x-batchable-actions",
                46,
                "group"
            ],
            "lhs": "RF profile",
            "rhs": "Meraki auth user",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "x-batchable-actions",
                46,
                "summary"
            ],
            "lhs": "Creates new RF profile for this network",
            "rhs": "Create a user configured with Meraki Authentication for a network (currently supports 802.1X and Splash Guest users, and currently, organizations have a 50,000 user cap)",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "x-batchable-actions",
                46,
                "resource"
            ],
            "lhs": "/networks/{networkId}/wireless/rfProfiles",
            "rhs": "/networks/{networkId}/merakiAuthUsers",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "x-batchable-actions",
                45,
                "group"
            ],
            "lhs": "Quality and retention setting",
            "rhs": "Management interface settings",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "x-batchable-actions",
                45,
                "summary"
            ],
            "lhs": "Update quality and retention settings for the given camera",
            "rhs": "Update the management interface settings for a device",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "x-batchable-actions",
                45,
                "resource"
            ],
            "lhs": "/devices/{serial}/camera/qualityAndRetentionSettings",
            "rhs": "/devices/{serial}/managementInterface",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "x-batchable-actions",
                44,
                "group"
            ],
            "lhs": "Qos rule",
            "rhs": "MX uplink setting",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "x-batchable-actions",
                44,
                "summary"
            ],
            "lhs": "Update a quality of service rule",
            "rhs": "Updates the uplink bandwidth settings for your MX network.",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "x-batchable-actions",
                44,
                "resource"
            ],
            "lhs": "/networks/{networkId}/switch/settings/qosRules/{qosRuleId}",
            "rhs": "/networks/{networkId}/appliance/trafficShaping/uplinkBandwidth",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "x-batchable-actions",
                43,
                "group"
            ],
            "lhs": "Qos rule",
            "rhs": "MX port",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "x-batchable-actions",
                43,
                "summary"
            ],
            "lhs": "Delete a quality of service rule",
            "rhs": "Update the per-port VLAN settings for a single MX port.",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "x-batchable-actions",
                43,
                "resource"
            ],
            "lhs": "/networks/{networkId}/switch/settings/qosRules/{qosRuleId}",
            "rhs": "/networks/{networkId}/appliance/ports/{portId}",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "x-batchable-actions",
                43,
                "operation"
            ],
            "lhs": "destroy",
            "rhs": "update",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "x-batchable-actions",
                42,
                "group"
            ],
            "lhs": "Qos rule",
            "rhs": "MX l7 firewall",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "x-batchable-actions",
                42,
                "summary"
            ],
            "lhs": "Update the order in which the rules should be processed by the switch",
            "rhs": "Update the MX L7 firewall rules for an MX network",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "x-batchable-actions",
                42,
                "resource"
            ],
            "lhs": "/networks/{networkId}/switch/settings/qosRules/order",
            "rhs": "/networks/{networkId}/appliance/firewall/l7FirewallRules",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "x-batchable-actions",
                42,
                "operation"
            ],
            "lhs": "update_order",
            "rhs": "update",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "x-batchable-actions",
                41,
                "group"
            ],
            "lhs": "Qos rule",
            "rhs": "MX connectivity monitoring destination",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "x-batchable-actions",
                41,
                "summary"
            ],
            "lhs": "Add a quality of service rule",
            "rhs": "Update the connectivity testing destinations for an MX network",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "x-batchable-actions",
                41,
                "resource"
            ],
            "lhs": "/networks/{networkId}/switch/settings/qosRules",
            "rhs": "/networks/{networkId}/appliance/connectivityMonitoringDestinations",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "x-batchable-actions",
                41,
                "operation"
            ],
            "lhs": "create",
            "rhs": "update",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "x-batchable-actions",
                40,
                "group"
            ],
            "lhs": "Network",
            "rhs": "MX VLAN settings",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "x-batchable-actions",
                40,
                "summary"
            ],
            "lhs": "Create a network",
            "rhs": "Enable/Disable VLANs for the given network",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "x-batchable-actions",
                40,
                "resource"
            ],
            "lhs": "/organizations/{organizationId}/networks",
            "rhs": "/networks/{networkId}/appliance/vlans/settings",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "x-batchable-actions",
                40,
                "operation"
            ],
            "lhs": "create",
            "rhs": "update",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "x-batchable-actions",
                39,
                "group"
            ],
            "lhs": "Network",
            "rhs": "MTU configuration",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "x-batchable-actions",
                39,
                "summary"
            ],
            "lhs": "Combine multiple networks into a single network",
            "rhs": "Update the MTU configuration",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "x-batchable-actions",
                39,
                "resource"
            ],
            "lhs": "/organizations/{organizationId}/networks",
            "rhs": "/networks/{networkId}/switch/mtu",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "x-batchable-actions",
                39,
                "operation"
            ],
            "lhs": "combine",
            "rhs": "update",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "x-batchable-actions",
                38,
                "group"
            ],
            "lhs": "Network",
            "rhs": "Link aggregation",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "x-batchable-actions",
                38,
                "summary"
            ],
            "lhs": "Update a network",
            "rhs": "Update a link aggregation group",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "x-batchable-actions",
                38,
                "resource"
            ],
            "lhs": "/networks/{networkId}",
            "rhs": "/networks/{networkId}/switch/linkAggregations/{linkAggregationId}",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "x-batchable-actions",
                37,
                "group"
            ],
            "lhs": "Network",
            "rhs": "Link aggregation",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "x-batchable-actions",
                37,
                "summary"
            ],
            "lhs": "Split a combined network into individual networks for each type of device",
            "rhs": "Split a link aggregation group into separate ports",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "x-batchable-actions",
                37,
                "resource"
            ],
            "lhs": "/networks/{networkId}",
            "rhs": "/networks/{networkId}/switch/linkAggregations/{linkAggregationId}",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "x-batchable-actions",
                37,
                "operation"
            ],
            "lhs": "split",
            "rhs": "destroy",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "x-batchable-actions",
                36,
                "group"
            ],
            "lhs": "Network",
            "rhs": "Link aggregation",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "x-batchable-actions",
                36,
                "summary"
            ],
            "lhs": "Delete a network",
            "rhs": "Create a link aggregation group",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "x-batchable-actions",
                36,
                "resource"
            ],
            "lhs": "/networks/{networkId}",
            "rhs": "/networks/{networkId}/switch/linkAggregations",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "x-batchable-actions",
                36,
                "operation"
            ],
            "lhs": "destroy",
            "rhs": "create",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "x-batchable-actions",
                35,
                "group"
            ],
            "lhs": "Multicast",
            "rhs": "License",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "x-batchable-actions",
                35,
                "summary"
            ],
            "lhs": "Update multicast settings for a network",
            "rhs": "Update a license",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "x-batchable-actions",
                35,
                "resource"
            ],
            "lhs": "/networks/{networkId}/switch/settings/multicast",
            "rhs": "/organizations/{organizationId}/licenses/{licenseId}",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "x-batchable-actions",
                34,
                "group"
            ],
            "lhs": "Monitored media server",
            "rhs": "License",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "x-batchable-actions",
                34,
                "summary"
            ],
            "lhs": "Update a monitored media server for this organization. Only valid for organizations with Meraki Insight.",
            "rhs": "Renew SM seats of a license. This will extend the license expiration date of managed SM devices covered by this license",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "x-batchable-actions",
                34,
                "resource"
            ],
            "lhs": "/organizations/{organizationId}/insight/monitoredMediaServers/{monitoredMediaServerId}",
            "rhs": "/organizations/{organizationId}/licenses",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "x-batchable-actions",
                34,
                "operation"
            ],
            "lhs": "update",
            "rhs": "renewSeats",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "x-batchable-actions",
                33,
                "group"
            ],
            "lhs": "Monitored media server",
            "rhs": "License",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "x-batchable-actions",
                33,
                "summary"
            ],
            "lhs": "Delete a monitored media server from this organization. Only valid for organizations with Meraki Insight.",
            "rhs": "Move SM seats to another organization",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "x-batchable-actions",
                33,
                "resource"
            ],
            "lhs": "/organizations/{organizationId}/insight/monitoredMediaServers/{monitoredMediaServerId}",
            "rhs": "/organizations/{organizationId}/licenses",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "x-batchable-actions",
                33,
                "operation"
            ],
            "lhs": "destroy",
            "rhs": "moveSeats",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "x-batchable-actions",
                32,
                "group"
            ],
            "lhs": "Monitored media server",
            "rhs": "License",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "x-batchable-actions",
                32,
                "summary"
            ],
            "lhs": "Add a media server to be monitored for this organization. Only valid for organizations with Meraki Insight.",
            "rhs": "Move licenses to another organization. This will also move any devices that the licenses are assigned to",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "x-batchable-actions",
                32,
                "resource"
            ],
            "lhs": "/organizations/{organizationId}/insight/monitoredMediaServers",
            "rhs": "/organizations/{organizationId}/licenses",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "x-batchable-actions",
                32,
                "operation"
            ],
            "lhs": "create",
            "rhs": "move",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "x-batchable-actions",
                31,
                "group"
            ],
            "lhs": "Management interface settings",
            "rhs": "License",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "x-batchable-actions",
                31,
                "summary"
            ],
            "lhs": "Update the management interface settings for a device",
            "rhs": "Assign SM seats to a network. This will increase the managed SM device limit of the network",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "x-batchable-actions",
                31,
                "resource"
            ],
            "lhs": "/networks/{networkId}/devices/{serial}/managementInterfaceSettings",
            "rhs": "/organizations/{organizationId}/licenses",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "x-batchable-actions",
                31,
                "operation"
            ],
            "lhs": "update",
            "rhs": "assignSeats",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "x-batchable-actions",
                30,
                "group"
            ],
            "lhs": "MX uplink setting",
            "rhs": "L3 static route",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "x-batchable-actions",
                30,
                "summary"
            ],
            "lhs": "Updates the uplink settings for your MX network.",
            "rhs": "Update a layer 3 static route for a switch",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "x-batchable-actions",
                30,
                "resource"
            ],
            "lhs": "/networks/{networkId}/uplinkSettings",
            "rhs": "/devices/{serial}/switch/routing/staticRoutes/{staticRouteId}",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "x-batchable-actions",
                29,
                "group"
            ],
            "lhs": "MX port",
            "rhs": "L3 static route",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "x-batchable-actions",
                29,
                "summary"
            ],
            "lhs": "Update the per-port VLAN settings for a single MX port.",
            "rhs": "Delete a layer 3 static route for a switch",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "x-batchable-actions",
                29,
                "resource"
            ],
            "lhs": "/networks/{networkId}/appliancePorts/{appliancePortId}",
            "rhs": "/devices/{serial}/switch/routing/staticRoutes/{staticRouteId}",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "x-batchable-actions",
                29,
                "operation"
            ],
            "lhs": "update",
            "rhs": "destroy",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "x-batchable-actions",
                28,
                "group"
            ],
            "lhs": "MX l7 firewall",
            "rhs": "L3 static route",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "x-batchable-actions",
                28,
                "summary"
            ],
            "lhs": "Update the MX L7 firewall rules for an MX network",
            "rhs": "Create a layer 3 static route for a switch",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "x-batchable-actions",
                28,
                "resource"
            ],
            "lhs": "/networks/{networkId}/l7FirewallRules",
            "rhs": "/devices/{serial}/switch/routing/staticRoutes",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "x-batchable-actions",
                28,
                "operation"
            ],
            "lhs": "update",
            "rhs": "create",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "x-batchable-actions",
                27,
                "group"
            ],
            "lhs": "MX connectivity monitoring destination",
            "rhs": "L3 interface dhcp",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "x-batchable-actions",
                27,
                "summary"
            ],
            "lhs": "Update the connectivity testing destinations for an MX network",
            "rhs": "Update a layer 3 interface DHCP configuration for a switch",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "x-batchable-actions",
                27,
                "resource"
            ],
            "lhs": "/networks/{networkId}/connectivityMonitoringDestinations",
            "rhs": "/devices/{serial}/switch/routing/interfaces/{interfaceId}/dhcp",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "x-batchable-actions",
                26,
                "group"
            ],
            "lhs": "MTU configuration",
            "rhs": "L3 interface",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "x-batchable-actions",
                26,
                "summary"
            ],
            "lhs": "Update the MTU configuration",
            "rhs": "Update a layer 3 interface for a switch",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "x-batchable-actions",
                26,
                "resource"
            ],
            "lhs": "/networks/{networkId}/switch/settings/mtu",
            "rhs": "/devices/{serial}/switch/routing/interfaces/{interfaceId}",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "x-batchable-actions",
                25,
                "group"
            ],
            "lhs": "Link aggregation",
            "rhs": "L3 interface",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "x-batchable-actions",
                25,
                "summary"
            ],
            "lhs": "Update a link aggregation group",
            "rhs": "Delete a layer 3 interface from the switch",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "x-batchable-actions",
                25,
                "resource"
            ],
            "lhs": "/networks/{networkId}/switch/linkAggregations/{linkAggregationId}",
            "rhs": "/devices/{serial}/switch/routing/interfaces/{interfaceId}",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "x-batchable-actions",
                25,
                "operation"
            ],
            "lhs": "update",
            "rhs": "destroy",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "x-batchable-actions",
                24,
                "group"
            ],
            "lhs": "Link aggregation",
            "rhs": "L3 interface",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "x-batchable-actions",
                24,
                "summary"
            ],
            "lhs": "Split a link aggregation group into separate ports",
            "rhs": "Create a layer 3 interface for a switch",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "x-batchable-actions",
                24,
                "resource"
            ],
            "lhs": "/networks/{networkId}/switch/linkAggregations/{linkAggregationId}",
            "rhs": "/devices/{serial}/switch/routing/interfaces",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "x-batchable-actions",
                24,
                "operation"
            ],
            "lhs": "destroy",
            "rhs": "create",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "x-batchable-actions",
                23,
                "group"
            ],
            "lhs": "Link aggregation",
            "rhs": "Group policy",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "x-batchable-actions",
                23,
                "summary"
            ],
            "lhs": "Create a link aggregation group",
            "rhs": "Update a group policy",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "x-batchable-actions",
                23,
                "resource"
            ],
            "lhs": "/networks/{networkId}/switch/linkAggregations",
            "rhs": "/networks/{networkId}/groupPolicies/{groupPolicyId}",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "x-batchable-actions",
                23,
                "operation"
            ],
            "lhs": "create",
            "rhs": "update",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "x-batchable-actions",
                22,
                "group"
            ],
            "lhs": "License",
            "rhs": "Group policy",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "x-batchable-actions",
                22,
                "summary"
            ],
            "lhs": "Update a license",
            "rhs": "Delete a group policy",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "x-batchable-actions",
                22,
                "resource"
            ],
            "lhs": "/organizations/{organizationId}/licenses/{licenseId}",
            "rhs": "/networks/{networkId}/groupPolicies/{groupPolicyId}",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "x-batchable-actions",
                22,
                "operation"
            ],
            "lhs": "update",
            "rhs": "destroy",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "x-batchable-actions",
                21,
                "group"
            ],
            "lhs": "License",
            "rhs": "Group policy",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "x-batchable-actions",
                21,
                "summary"
            ],
            "lhs": "Renew SM seats of a license. This will extend the license expiration date of managed SM devices covered by this license",
            "rhs": "Create a group policy",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "x-batchable-actions",
                21,
                "resource"
            ],
            "lhs": "/organizations/{organizationId}/licenses",
            "rhs": "/networks/{networkId}/groupPolicies",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "x-batchable-actions",
                21,
                "operation"
            ],
            "lhs": "renewSeats",
            "rhs": "create",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "x-batchable-actions",
                20,
                "group"
            ],
            "lhs": "License",
            "rhs": "Floor plan",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "x-batchable-actions",
                20,
                "summary"
            ],
            "lhs": "Move SM seats to another organization",
            "rhs": "Update a floor plan's geolocation and other meta data",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "x-batchable-actions",
                20,
                "resource"
            ],
            "lhs": "/organizations/{organizationId}/licenses",
            "rhs": "/networks/{networkId}/floorPlans/{floorPlanId}",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "x-batchable-actions",
                20,
                "operation"
            ],
            "lhs": "moveSeats",
            "rhs": "update",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "x-batchable-actions",
                19,
                "group"
            ],
            "lhs": "License",
            "rhs": "Floor plan",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "x-batchable-actions",
                19,
                "summary"
            ],
            "lhs": "Move licenses to another organization. This will also move any devices that the licenses are assigned to",
            "rhs": "Destroy a floor plan",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "x-batchable-actions",
                19,
                "resource"
            ],
            "lhs": "/organizations/{organizationId}/licenses",
            "rhs": "/networks/{networkId}/floorPlans/{floorPlanId}",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "x-batchable-actions",
                19,
                "operation"
            ],
            "lhs": "move",
            "rhs": "destroy",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "x-batchable-actions",
                18,
                "group"
            ],
            "lhs": "License",
            "rhs": "Dscp cos mapping",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "x-batchable-actions",
                18,
                "summary"
            ],
            "lhs": "Assign SM seats to a network. This will increase the managed SM device limit of the network",
            "rhs": "Update the DSCP to CoS mappings",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "x-batchable-actions",
                18,
                "resource"
            ],
            "lhs": "/organizations/{organizationId}/licenses",
            "rhs": "/networks/{networkId}/switch/dscpToCosMappings",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "x-batchable-actions",
                18,
                "operation"
            ],
            "lhs": "assignSeats",
            "rhs": "update",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "x-batchable-actions",
                17,
                "group"
            ],
            "lhs": "Group policy",
            "rhs": "Dhcp server policy",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "x-batchable-actions",
                17,
                "summary"
            ],
            "lhs": "Update a group policy",
            "rhs": "Update the DHCP server policy",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "x-batchable-actions",
                17,
                "resource"
            ],
            "lhs": "/networks/{networkId}/groupPolicies/{groupPolicyId}",
            "rhs": "/networks/{networkId}/switch/dhcpServerPolicy",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "x-batchable-actions",
                16,
                "group"
            ],
            "lhs": "Group policy",
            "rhs": "Device",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "x-batchable-actions",
                16,
                "summary"
            ],
            "lhs": "Delete a group policy",
            "rhs": "Remove a single device",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "x-batchable-actions",
                16,
                "resource"
            ],
            "lhs": "/networks/{networkId}/groupPolicies/{groupPolicyId}",
            "rhs": "/networks/{networkId}/devices",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "x-batchable-actions",
                16,
                "operation"
            ],
            "lhs": "destroy",
            "rhs": "remove",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "x-batchable-actions",
                15,
                "group"
            ],
            "lhs": "Group policy",
            "rhs": "Device",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "x-batchable-actions",
                15,
                "summary"
            ],
            "lhs": "Create a group policy",
            "rhs": "Claim devices into a network",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "x-batchable-actions",
                15,
                "resource"
            ],
            "lhs": "/networks/{networkId}/groupPolicies",
            "rhs": "/networks/{networkId}/devices",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "x-batchable-actions",
                15,
                "operation"
            ],
            "lhs": "create",
            "rhs": "claim",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "x-batchable-actions",
                14,
                "group"
            ],
            "lhs": "Floor plan",
            "rhs": "Device",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "x-batchable-actions",
                14,
                "summary"
            ],
            "lhs": "Update a floor plan's geolocation and other meta data",
            "rhs": "Update the attributes of a device",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "x-batchable-actions",
                14,
                "resource"
            ],
            "lhs": "/networks/{networkId}/floorPlans/{floorPlanId}",
            "rhs": "/devices/{serial}",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "x-batchable-actions",
                13,
                "group"
            ],
            "lhs": "Floor plan",
            "rhs": "Custom performance class",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "x-batchable-actions",
                13,
                "summary"
            ],
            "lhs": "Destroy a floor plan",
            "rhs": "Update a custom performance class for an MX network",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "x-batchable-actions",
                13,
                "resource"
            ],
            "lhs": "/networks/{networkId}/floorPlans/{floorPlanId}",
            "rhs": "/networks/{networkId}/appliance/trafficShaping/customPerformanceClasses/{customPerformanceClassId}",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "x-batchable-actions",
                13,
                "operation"
            ],
            "lhs": "destroy",
            "rhs": "update",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "x-batchable-actions",
                12,
                "group"
            ],
            "lhs": "Dscp cos mapping",
            "rhs": "Custom performance class",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "x-batchable-actions",
                12,
                "summary"
            ],
            "lhs": "Update the DSCP to CoS mappings",
            "rhs": "Delete a custom performance class from an MX network",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "x-batchable-actions",
                12,
                "resource"
            ],
            "lhs": "/networks/{networkId}/switch/settings/dscpToCosMappings",
            "rhs": "/networks/{networkId}/appliance/trafficShaping/customPerformanceClasses/{customPerformanceClassId}",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "x-batchable-actions",
                12,
                "operation"
            ],
            "lhs": "update",
            "rhs": "destroy",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "x-batchable-actions",
                11,
                "group"
            ],
            "lhs": "Dhcp server policy",
            "rhs": "Custom performance class",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "x-batchable-actions",
                11,
                "summary"
            ],
            "lhs": "Update the DHCP server policy",
            "rhs": "Add a custom performance class for an MX network",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "x-batchable-actions",
                11,
                "resource"
            ],
            "lhs": "/networks/{networkId}/switch/settings/dhcpServerPolicy",
            "rhs": "/networks/{networkId}/appliance/trafficShaping/customPerformanceClasses",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "x-batchable-actions",
                11,
                "operation"
            ],
            "lhs": "update",
            "rhs": "create",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "x-batchable-actions",
                10,
                "group"
            ],
            "lhs": "Device",
            "rhs": "Config template",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "x-batchable-actions",
                10,
                "summary"
            ],
            "lhs": "Update the attributes of a device",
            "rhs": "Update a configuration template",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "x-batchable-actions",
                10,
                "resource"
            ],
            "lhs": "/networks/{networkId}/devices/{serial}",
            "rhs": "/organizations/{organizationId}/configTemplates/{configTemplateId}",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "x-batchable-actions",
                9,
                "group"
            ],
            "lhs": "Device",
            "rhs": "Config template",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "x-batchable-actions",
                9,
                "summary"
            ],
            "lhs": "Remove a single device",
            "rhs": "Create a new configuration template",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "x-batchable-actions",
                9,
                "resource"
            ],
            "lhs": "/networks/{networkId}/devices/{serial}",
            "rhs": "/organizations/{organizationId}/configTemplates",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "x-batchable-actions",
                9,
                "operation"
            ],
            "lhs": "remove",
            "rhs": "create",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "x-batchable-actions",
                8,
                "group"
            ],
            "lhs": "Device",
            "rhs": "Client",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "x-batchable-actions",
                8,
                "summary"
            ],
            "lhs": "Claim devices into a network",
            "rhs": "Provisions a client with a name and policy. Clients can be provisioned before they associate to the network.",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "x-batchable-actions",
                8,
                "resource"
            ],
            "lhs": "/networks/{networkId}/devices",
            "rhs": "/networks/{networkId}/clients",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "x-batchable-actions",
                8,
                "operation"
            ],
            "lhs": "claim",
            "rhs": "provision",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "x-batchable-actions",
                7,
                "resource"
            ],
            "lhs": "/networks/{networkId}/cellularGateway/settings/uplink",
            "rhs": "/networks/{networkId}/cellularGateway/uplink",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "x-batchable-actions",
                6,
                "resource"
            ],
            "lhs": "/networks/{networkId}/cellularGateway/settings/subnetPool",
            "rhs": "/networks/{networkId}/cellularGateway/subnetPool",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "x-batchable-actions",
                5,
                "resource"
            ],
            "lhs": "/devices/{serial}/cellularGateway/settings/portForwardingRules",
            "rhs": "/devices/{serial}/cellularGateway/portForwardingRules",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "x-batchable-actions",
                4,
                "resource"
            ],
            "lhs": "/networks/{networkId}/cellularGateway/settings/dhcp",
            "rhs": "/networks/{networkId}/cellularGateway/dhcp",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "x-batchable-actions",
                3,
                "resource"
            ],
            "lhs": "/devices/{serial}/cellularGateway/settings",
            "rhs": "/devices/{serial}/cellularGateway/lan",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "kind": "E",
            "path": [
                "x-batchable-actions",
                2,
                "resource"
            ],
            "lhs": "/networks/{networkId}/cellularGateway/settings/connectivityMonitoringDestinations",
            "rhs": "/networks/{networkId}/cellularGateway/connectivityMonitoringDestinations",
            "type": "unmatchDiffs",
            "name": "UnmatchDiffs"
        },
        {
            "ruleId": "rename-path",
            "message": "Path `/devices/{serial}/camera/qualityAndRetentionSettings` renamed to `/devices/{serial}/camera/qualityAndRetention`",
            "messageHtml": "renamed to <code>/devices/{serial}/camera/qualityAndRetention</code>",
            "path": "/devices/{serial}/camera/qualityAndRetentionSettings",
            "newPath": "/devices/{serial}/camera/qualityAndRetention",
            "type": "renamed",
            "name": "What's Changed"
        },
        {
            "ruleId": "rename-path",
            "message": "Path `/devices/{serial}/cellularGateway/settings` renamed to `/devices/{serial}/cellularGateway/lan`",
            "messageHtml": "renamed to <code>/devices/{serial}/cellularGateway/lan</code>",
            "path": "/devices/{serial}/cellularGateway/settings",
            "newPath": "/devices/{serial}/cellularGateway/lan",
            "type": "renamed",
            "name": "What's Changed"
        },
        {
            "ruleId": "rename-path",
            "message": "Path `/devices/{serial}/cellularGateway/settings/portForwardingRules` renamed to `/devices/{serial}/cellularGateway/portForwardingRules`",
            "messageHtml": "renamed to <code>/devices/{serial}/cellularGateway/portForwardingRules</code>",
            "path": "/devices/{serial}/cellularGateway/settings/portForwardingRules",
            "newPath": "/devices/{serial}/cellularGateway/portForwardingRules",
            "type": "renamed",
            "name": "What's Changed"
        },
        {
            "ruleId": "rename-path",
            "message": "Path `/devices/{serial}/switchPortStatuses` renamed to `/devices/{serial}/switch/ports/statuses`",
            "messageHtml": "renamed to <code>/devices/{serial}/switch/ports/statuses</code>",
            "path": "/devices/{serial}/switchPortStatuses",
            "newPath": "/devices/{serial}/switch/ports/statuses",
            "type": "renamed",
            "name": "What's Changed"
        },
        {
            "ruleId": "rename-path",
            "message": "Path `/devices/{serial}/switchPortStatuses/packets` renamed to `/devices/{serial}/switch/ports/statuses/packets`",
            "messageHtml": "renamed to <code>/devices/{serial}/switch/ports/statuses/packets</code>",
            "path": "/devices/{serial}/switchPortStatuses/packets",
            "newPath": "/devices/{serial}/switch/ports/statuses/packets",
            "type": "renamed",
            "name": "What's Changed"
        },
        {
            "ruleId": "rename-path",
            "message": "Path `/devices/{serial}/switchPorts` renamed to `/devices/{serial}/switch/ports`",
            "messageHtml": "renamed to <code>/devices/{serial}/switch/ports</code>",
            "path": "/devices/{serial}/switchPorts",
            "newPath": "/devices/{serial}/switch/ports",
            "type": "renamed",
            "name": "What's Changed"
        },
        {
            "ruleId": "rename-path",
            "message": "Path `/devices/{serial}/switchPorts/{number}` renamed to `/devices/{serial}/switch/ports/{portId}`",
            "messageHtml": "renamed to <code>/devices/{serial}/switch/ports/{portId}</code>",
            "path": "/devices/{serial}/switchPorts/{number}",
            "newPath": "/devices/{serial}/switch/ports/{portId}",
            "type": "renamed",
            "name": "What's Changed"
        },
        {
            "ruleId": "rename-path",
            "message": "Path `/networks/{networkId}/airMarshal` renamed to `/networks/{networkId}/wireless/airMarshal`",
            "messageHtml": "renamed to <code>/networks/{networkId}/wireless/airMarshal</code>",
            "path": "/networks/{networkId}/airMarshal",
            "newPath": "/networks/{networkId}/wireless/airMarshal",
            "type": "renamed",
            "name": "What's Changed"
        },
        {
            "ruleId": "rename-path",
            "message": "Path `/networks/{networkId}/alertSettings` renamed to `/networks/{networkId}/alerts/settings`",
            "messageHtml": "renamed to <code>/networks/{networkId}/alerts/settings</code>",
            "path": "/networks/{networkId}/alertSettings",
            "newPath": "/networks/{networkId}/alerts/settings",
            "type": "renamed",
            "name": "What's Changed"
        },
        {
            "ruleId": "rename-path",
            "message": "Path `/networks/{networkId}/appliancePorts` renamed to `/networks/{networkId}/appliance/ports`",
            "messageHtml": "renamed to <code>/networks/{networkId}/appliance/ports</code>",
            "path": "/networks/{networkId}/appliancePorts",
            "newPath": "/networks/{networkId}/appliance/ports",
            "type": "renamed",
            "name": "What's Changed"
        },
        {
            "ruleId": "rename-path",
            "message": "Path `/networks/{networkId}/appliancePorts/{appliancePortId}` renamed to `/networks/{networkId}/appliance/ports/{portId}`",
            "messageHtml": "renamed to <code>/networks/{networkId}/appliance/ports/{portId}</code>",
            "path": "/networks/{networkId}/appliancePorts/{appliancePortId}",
            "newPath": "/networks/{networkId}/appliance/ports/{portId}",
            "type": "renamed",
            "name": "What's Changed"
        },
        {
            "ruleId": "rename-path",
            "message": "Path `/networks/{networkId}/bluetoothSettings` renamed to `/networks/{networkId}/wireless/bluetooth/settings`",
            "messageHtml": "renamed to <code>/networks/{networkId}/wireless/bluetooth/settings</code>",
            "path": "/networks/{networkId}/bluetoothSettings",
            "newPath": "/networks/{networkId}/wireless/bluetooth/settings",
            "type": "renamed",
            "name": "What's Changed"
        },
        {
            "ruleId": "rename-path",
            "message": "Path `/networks/{networkId}/cameras/{serial}/snapshot` renamed to `/devices/{serial}/camera/generateSnapshot`",
            "messageHtml": "renamed to <code>/devices/{serial}/camera/generateSnapshot</code>",
            "path": "/networks/{networkId}/cameras/{serial}/snapshot",
            "newPath": "/devices/{serial}/camera/generateSnapshot",
            "type": "renamed",
            "name": "What's Changed"
        },
        {
            "ruleId": "rename-path",
            "message": "Path `/networks/{networkId}/cameras/{serial}/videoLink` renamed to `/devices/{serial}/camera/videoLink`",
            "messageHtml": "renamed to <code>/devices/{serial}/camera/videoLink</code>",
            "path": "/networks/{networkId}/cameras/{serial}/videoLink",
            "newPath": "/devices/{serial}/camera/videoLink",
            "type": "renamed",
            "name": "What's Changed"
        },
        {
            "ruleId": "rename-path",
            "message": "Path `/networks/{networkId}/cellularFirewallRules` renamed to `/networks/{networkId}/appliance/firewall/cellularFirewallRules`",
            "messageHtml": "renamed to <code>/networks/{networkId}/appliance/firewall/cellularFirewallRules</code>",
            "path": "/networks/{networkId}/cellularFirewallRules",
            "newPath": "/networks/{networkId}/appliance/firewall/cellularFirewallRules",
            "type": "renamed",
            "name": "What's Changed"
        },
        {
            "ruleId": "rename-path",
            "message": "Path `/networks/{networkId}/cellularGateway/settings/connectivityMonitoringDestinations` renamed to `/networks/{networkId}/cellularGateway/connectivityMonitoringDestinations`",
            "messageHtml": "renamed to <code>/networks/{networkId}/cellularGateway/connectivityMonitoringDestinations</code>",
            "path": "/networks/{networkId}/cellularGateway/settings/connectivityMonitoringDestinations",
            "newPath": "/networks/{networkId}/cellularGateway/connectivityMonitoringDestinations",
            "type": "renamed",
            "name": "What's Changed"
        },
        {
            "ruleId": "rename-path",
            "message": "Path `/networks/{networkId}/cellularGateway/settings/dhcp` renamed to `/networks/{networkId}/cellularGateway/dhcp`",
            "messageHtml": "renamed to <code>/networks/{networkId}/cellularGateway/dhcp</code>",
            "path": "/networks/{networkId}/cellularGateway/settings/dhcp",
            "newPath": "/networks/{networkId}/cellularGateway/dhcp",
            "type": "renamed",
            "name": "What's Changed"
        },
        {
            "ruleId": "rename-path",
            "message": "Path `/networks/{networkId}/cellularGateway/settings/subnetPool` renamed to `/networks/{networkId}/cellularGateway/subnetPool`",
            "messageHtml": "renamed to <code>/networks/{networkId}/cellularGateway/subnetPool</code>",
            "path": "/networks/{networkId}/cellularGateway/settings/subnetPool",
            "newPath": "/networks/{networkId}/cellularGateway/subnetPool",
            "type": "renamed",
            "name": "What's Changed"
        },
        {
            "ruleId": "rename-path",
            "message": "Path `/networks/{networkId}/cellularGateway/settings/uplink` renamed to `/networks/{networkId}/cellularGateway/uplink`",
            "messageHtml": "renamed to <code>/networks/{networkId}/cellularGateway/uplink</code>",
            "path": "/networks/{networkId}/cellularGateway/settings/uplink",
            "newPath": "/networks/{networkId}/cellularGateway/uplink",
            "type": "renamed",
            "name": "What's Changed"
        },
        {
            "ruleId": "rename-path",
            "message": "Path `/networks/{networkId}/clients/connectionStats` renamed to `/networks/{networkId}/wireless/clients/connectionStats`",
            "messageHtml": "renamed to <code>/networks/{networkId}/wireless/clients/connectionStats</code>",
            "path": "/networks/{networkId}/clients/connectionStats",
            "newPath": "/networks/{networkId}/wireless/clients/connectionStats",
            "type": "renamed",
            "name": "What's Changed"
        },
        {
            "ruleId": "rename-path",
            "message": "Path `/networks/{networkId}/clients/latencyStats` renamed to `/networks/{networkId}/wireless/clients/latencyStats`",
            "messageHtml": "renamed to <code>/networks/{networkId}/wireless/clients/latencyStats</code>",
            "path": "/networks/{networkId}/clients/latencyStats",
            "newPath": "/networks/{networkId}/wireless/clients/latencyStats",
            "type": "renamed",
            "name": "What's Changed"
        },
        {
            "ruleId": "rename-path",
            "message": "Path `/networks/{networkId}/clients/{clientId}/connectionStats` renamed to `/networks/{networkId}/wireless/clients/{clientId}/connectionStats`",
            "messageHtml": "renamed to <code>/networks/{networkId}/wireless/clients/{clientId}/connectionStats</code>",
            "path": "/networks/{networkId}/clients/{clientId}/connectionStats",
            "newPath": "/networks/{networkId}/wireless/clients/{clientId}/connectionStats",
            "type": "renamed",
            "name": "What's Changed"
        },
        {
            "ruleId": "rename-path",
            "message": "Path `/networks/{networkId}/clients/{clientId}/latencyHistory` renamed to `/networks/{networkId}/wireless/clients/{clientId}/latencyHistory`",
            "messageHtml": "renamed to <code>/networks/{networkId}/wireless/clients/{clientId}/latencyHistory</code>",
            "path": "/networks/{networkId}/clients/{clientId}/latencyHistory",
            "newPath": "/networks/{networkId}/wireless/clients/{clientId}/latencyHistory",
            "type": "renamed",
            "name": "What's Changed"
        },
        {
            "ruleId": "rename-path",
            "message": "Path `/networks/{networkId}/clients/{clientId}/latencyStats` renamed to `/networks/{networkId}/wireless/clients/{clientId}/latencyStats`",
            "messageHtml": "renamed to <code>/networks/{networkId}/wireless/clients/{clientId}/latencyStats</code>",
            "path": "/networks/{networkId}/clients/{clientId}/latencyStats",
            "newPath": "/networks/{networkId}/wireless/clients/{clientId}/latencyStats",
            "type": "renamed",
            "name": "What's Changed"
        },
        {
            "ruleId": "rename-path",
            "message": "Path `/networks/{networkId}/clients/{clientId}/securityEvents` renamed to `/networks/{networkId}/appliance/clients/{clientId}/security/events`",
            "messageHtml": "renamed to <code>/networks/{networkId}/appliance/clients/{clientId}/security/events</code>",
            "path": "/networks/{networkId}/clients/{clientId}/securityEvents",
            "newPath": "/networks/{networkId}/appliance/clients/{clientId}/security/events",
            "type": "renamed",
            "name": "What's Changed"
        },
        {
            "ruleId": "rename-path",
            "message": "Path `/networks/{networkId}/connectionStats` renamed to `/networks/{networkId}/wireless/connectionStats`",
            "messageHtml": "renamed to <code>/networks/{networkId}/wireless/connectionStats</code>",
            "path": "/networks/{networkId}/connectionStats",
            "newPath": "/networks/{networkId}/wireless/connectionStats",
            "type": "renamed",
            "name": "What's Changed"
        },
        {
            "ruleId": "rename-path",
            "message": "Path `/networks/{networkId}/connectivityMonitoringDestinations` renamed to `/networks/{networkId}/appliance/connectivityMonitoringDestinations`",
            "messageHtml": "renamed to <code>/networks/{networkId}/appliance/connectivityMonitoringDestinations</code>",
            "path": "/networks/{networkId}/connectivityMonitoringDestinations",
            "newPath": "/networks/{networkId}/appliance/connectivityMonitoringDestinations",
            "type": "renamed",
            "name": "What's Changed"
        },
        {
            "ruleId": "rename-path",
            "message": "Path `/networks/{networkId}/contentFiltering` renamed to `/networks/{networkId}/appliance/contentFiltering`",
            "messageHtml": "renamed to <code>/networks/{networkId}/appliance/contentFiltering</code>",
            "path": "/networks/{networkId}/contentFiltering",
            "newPath": "/networks/{networkId}/appliance/contentFiltering",
            "type": "renamed",
            "name": "What's Changed"
        },
        {
            "ruleId": "rename-path",
            "message": "Path `/networks/{networkId}/contentFiltering/categories` renamed to `/networks/{networkId}/appliance/contentFiltering/categories`",
            "messageHtml": "renamed to <code>/networks/{networkId}/appliance/contentFiltering/categories</code>",
            "path": "/networks/{networkId}/contentFiltering/categories",
            "newPath": "/networks/{networkId}/appliance/contentFiltering/categories",
            "type": "renamed",
            "name": "What's Changed"
        },
        {
            "ruleId": "rename-path",
            "message": "Path `/networks/{networkId}/devices/connectionStats` renamed to `/networks/{networkId}/wireless/devices/connectionStats`",
            "messageHtml": "renamed to <code>/networks/{networkId}/wireless/devices/connectionStats</code>",
            "path": "/networks/{networkId}/devices/connectionStats",
            "newPath": "/networks/{networkId}/wireless/devices/connectionStats",
            "type": "renamed",
            "name": "What's Changed"
        },
        {
            "ruleId": "rename-path",
            "message": "Path `/networks/{networkId}/devices/latencyStats` renamed to `/networks/{networkId}/wireless/devices/latencyStats`",
            "messageHtml": "renamed to <code>/networks/{networkId}/wireless/devices/latencyStats</code>",
            "path": "/networks/{networkId}/devices/latencyStats",
            "newPath": "/networks/{networkId}/wireless/devices/latencyStats",
            "type": "renamed",
            "name": "What's Changed"
        },
        {
            "ruleId": "rename-path",
            "message": "Path `/networks/{networkId}/devices/{serial}` renamed to `/devices/{serial}`",
            "messageHtml": "renamed to <code>/devices/{serial}</code>",
            "path": "/networks/{networkId}/devices/{serial}",
            "newPath": "/devices/{serial}",
            "type": "renamed",
            "name": "What's Changed"
        },
        {
            "ruleId": "rename-path",
            "message": "Path `/networks/{networkId}/devices/{serial}/blinkLeds` renamed to `/devices/{serial}/blinkLeds`",
            "messageHtml": "renamed to <code>/devices/{serial}/blinkLeds</code>",
            "path": "/networks/{networkId}/devices/{serial}/blinkLeds",
            "newPath": "/devices/{serial}/blinkLeds",
            "type": "renamed",
            "name": "What's Changed"
        },
        {
            "ruleId": "rename-path",
            "message": "Path `/networks/{networkId}/devices/{serial}/connectionStats` renamed to `/devices/{serial}/wireless/connectionStats`",
            "messageHtml": "renamed to <code>/devices/{serial}/wireless/connectionStats</code>",
            "path": "/networks/{networkId}/devices/{serial}/connectionStats",
            "newPath": "/devices/{serial}/wireless/connectionStats",
            "type": "renamed",
            "name": "What's Changed"
        },
        {
            "ruleId": "rename-path",
            "message": "Path `/networks/{networkId}/devices/{serial}/latencyStats` renamed to `/devices/{serial}/wireless/latencyStats`",
            "messageHtml": "renamed to <code>/devices/{serial}/wireless/latencyStats</code>",
            "path": "/networks/{networkId}/devices/{serial}/latencyStats",
            "newPath": "/devices/{serial}/wireless/latencyStats",
            "type": "renamed",
            "name": "What's Changed"
        },
        {
            "ruleId": "rename-path",
            "message": "Path `/networks/{networkId}/devices/{serial}/lldp_cdp` renamed to `/devices/{serial}/lldpCdp`",
            "messageHtml": "renamed to <code>/devices/{serial}/lldpCdp</code>",
            "path": "/networks/{networkId}/devices/{serial}/lldp_cdp",
            "newPath": "/devices/{serial}/lldpCdp",
            "type": "renamed",
            "name": "What's Changed"
        },
        {
            "ruleId": "rename-path",
            "message": "Path `/networks/{networkId}/devices/{serial}/lossAndLatencyHistory` renamed to `/devices/{serial}/lossAndLatencyHistory`",
            "messageHtml": "renamed to <code>/devices/{serial}/lossAndLatencyHistory</code>",
            "path": "/networks/{networkId}/devices/{serial}/lossAndLatencyHistory",
            "newPath": "/devices/{serial}/lossAndLatencyHistory",
            "type": "renamed",
            "name": "What's Changed"
        },
        {
            "ruleId": "rename-path",
            "message": "Path `/networks/{networkId}/devices/{serial}/managementInterfaceSettings` renamed to `/devices/{serial}/managementInterface`",
            "messageHtml": "renamed to <code>/devices/{serial}/managementInterface</code>",
            "path": "/networks/{networkId}/devices/{serial}/managementInterfaceSettings",
            "newPath": "/devices/{serial}/managementInterface",
            "type": "renamed",
            "name": "What's Changed"
        },
        {
            "ruleId": "rename-path",
            "message": "Path `/networks/{networkId}/devices/{serial}/performance` renamed to `/devices/{serial}/appliance/performance`",
            "messageHtml": "renamed to <code>/devices/{serial}/appliance/performance</code>",
            "path": "/networks/{networkId}/devices/{serial}/performance",
            "newPath": "/devices/{serial}/appliance/performance",
            "type": "renamed",
            "name": "What's Changed"
        },
        {
            "ruleId": "rename-path",
            "message": "Path `/networks/{networkId}/devices/{serial}/reboot` renamed to `/devices/{serial}/reboot`",
            "messageHtml": "renamed to <code>/devices/{serial}/reboot</code>",
            "path": "/networks/{networkId}/devices/{serial}/reboot",
            "newPath": "/devices/{serial}/reboot",
            "type": "renamed",
            "name": "What's Changed"
        },
        {
            "ruleId": "rename-path",
            "message": "Path `/networks/{networkId}/devices/{serial}/remove` renamed to `/networks/{networkId}/devices/remove`",
            "messageHtml": "renamed to <code>/networks/{networkId}/devices/remove</code>",
            "path": "/networks/{networkId}/devices/{serial}/remove",
            "newPath": "/networks/{networkId}/devices/remove",
            "type": "renamed",
            "name": "What's Changed"
        },
        {
            "ruleId": "rename-path",
            "message": "Path `/networks/{networkId}/devices/{serial}/wireless/radioSettings` renamed to `/devices/{serial}/wireless/radio/settings`",
            "messageHtml": "renamed to <code>/devices/{serial}/wireless/radio/settings</code>",
            "path": "/networks/{networkId}/devices/{serial}/wireless/radioSettings",
            "newPath": "/devices/{serial}/wireless/radio/settings",
            "type": "renamed",
            "name": "What's Changed"
        },
        {
            "ruleId": "rename-path",
            "message": "Path `/networks/{networkId}/devices/{serial}/wireless/status` renamed to `/devices/{serial}/wireless/status`",
            "messageHtml": "renamed to <code>/devices/{serial}/wireless/status</code>",
            "path": "/networks/{networkId}/devices/{serial}/wireless/status",
            "newPath": "/devices/{serial}/wireless/status",
            "type": "renamed",
            "name": "What's Changed"
        },
        {
            "ruleId": "rename-path",
            "message": "Path `/networks/{networkId}/failedConnections` renamed to `/networks/{networkId}/wireless/failedConnections`",
            "messageHtml": "renamed to <code>/networks/{networkId}/wireless/failedConnections</code>",
            "path": "/networks/{networkId}/failedConnections",
            "newPath": "/networks/{networkId}/wireless/failedConnections",
            "type": "renamed",
            "name": "What's Changed"
        },
        {
            "ruleId": "rename-path",
            "message": "Path `/networks/{networkId}/firewalledServices` renamed to `/networks/{networkId}/appliance/firewall/firewalledServices`",
            "messageHtml": "renamed to <code>/networks/{networkId}/appliance/firewall/firewalledServices</code>",
            "path": "/networks/{networkId}/firewalledServices",
            "newPath": "/networks/{networkId}/appliance/firewall/firewalledServices",
            "type": "renamed",
            "name": "What's Changed"
        },
        {
            "ruleId": "rename-path",
            "message": "Path `/networks/{networkId}/firewalledServices/{service}` renamed to `/networks/{networkId}/appliance/firewall/firewalledServices/{service}`",
            "messageHtml": "renamed to <code>/networks/{networkId}/appliance/firewall/firewalledServices/{service}</code>",
            "path": "/networks/{networkId}/firewalledServices/{service}",
            "newPath": "/networks/{networkId}/appliance/firewall/firewalledServices/{service}",
            "type": "renamed",
            "name": "What's Changed"
        },
        {
            "ruleId": "rename-path",
            "message": "Path `/networks/{networkId}/httpServers` renamed to `/networks/{networkId}/webhooks/httpServers`",
            "messageHtml": "renamed to <code>/networks/{networkId}/webhooks/httpServers</code>",
            "path": "/networks/{networkId}/httpServers",
            "newPath": "/networks/{networkId}/webhooks/httpServers",
            "type": "renamed",
            "name": "What's Changed"
        },
        {
            "ruleId": "rename-path",
            "message": "Path `/networks/{networkId}/httpServers/webhookTests` renamed to `/networks/{networkId}/webhooks/webhookTests`",
            "messageHtml": "renamed to <code>/networks/{networkId}/webhooks/webhookTests</code>",
            "path": "/networks/{networkId}/httpServers/webhookTests",
            "newPath": "/networks/{networkId}/webhooks/webhookTests",
            "type": "renamed",
            "name": "What's Changed"
        },
        {
            "ruleId": "rename-path",
            "message": "Path `/networks/{networkId}/httpServers/webhookTests/{id}` renamed to `/networks/{networkId}/webhooks/webhookTests/{webhookTestId}`",
            "messageHtml": "renamed to <code>/networks/{networkId}/webhooks/webhookTests/{webhookTestId}</code>",
            "path": "/networks/{networkId}/httpServers/webhookTests/{id}",
            "newPath": "/networks/{networkId}/webhooks/webhookTests/{webhookTestId}",
            "type": "renamed",
            "name": "What's Changed"
        },
        {
            "ruleId": "rename-path",
            "message": "Path `/networks/{networkId}/httpServers/{id}` renamed to `/networks/{networkId}/webhooks/httpServers/{httpServerId}`",
            "messageHtml": "renamed to <code>/networks/{networkId}/webhooks/httpServers/{httpServerId}</code>",
            "path": "/networks/{networkId}/httpServers/{id}",
            "newPath": "/networks/{networkId}/webhooks/httpServers/{httpServerId}",
            "type": "renamed",
            "name": "What's Changed"
        },
        {
            "ruleId": "rename-path",
            "message": "Path `/networks/{networkId}/l3FirewallRules` renamed to `/networks/{networkId}/appliance/firewall/l3FirewallRules`",
            "messageHtml": "renamed to <code>/networks/{networkId}/appliance/firewall/l3FirewallRules</code>",
            "path": "/networks/{networkId}/l3FirewallRules",
            "newPath": "/networks/{networkId}/appliance/firewall/l3FirewallRules",
            "type": "renamed",
            "name": "What's Changed"
        },
        {
            "ruleId": "rename-path",
            "message": "Path `/networks/{networkId}/l7FirewallRules` renamed to `/networks/{networkId}/appliance/firewall/l7FirewallRules`",
            "messageHtml": "renamed to <code>/networks/{networkId}/appliance/firewall/l7FirewallRules</code>",
            "path": "/networks/{networkId}/l7FirewallRules",
            "newPath": "/networks/{networkId}/appliance/firewall/l7FirewallRules",
            "type": "renamed",
            "name": "What's Changed"
        },
        {
            "ruleId": "rename-path",
            "message": "Path `/networks/{networkId}/l7FirewallRules/applicationCategories` renamed to `/networks/{networkId}/appliance/firewall/l7FirewallRules/applicationCategories`",
            "messageHtml": "renamed to <code>/networks/{networkId}/appliance/firewall/l7FirewallRules/applicationCategories</code>",
            "path": "/networks/{networkId}/l7FirewallRules/applicationCategories",
            "newPath": "/networks/{networkId}/appliance/firewall/l7FirewallRules/applicationCategories",
            "type": "renamed",
            "name": "What's Changed"
        },
        {
            "ruleId": "rename-path",
            "message": "Path `/networks/{networkId}/latencyStats` renamed to `/networks/{networkId}/wireless/latencyStats`",
            "messageHtml": "renamed to <code>/networks/{networkId}/wireless/latencyStats</code>",
            "path": "/networks/{networkId}/latencyStats",
            "newPath": "/networks/{networkId}/wireless/latencyStats",
            "type": "renamed",
            "name": "What's Changed"
        },
        {
            "ruleId": "rename-path",
            "message": "Path `/networks/{networkId}/netflowSettings` renamed to `/networks/{networkId}/netflow`",
            "messageHtml": "renamed to <code>/networks/{networkId}/netflow</code>",
            "path": "/networks/{networkId}/netflowSettings",
            "newPath": "/networks/{networkId}/netflow",
            "type": "renamed",
            "name": "What's Changed"
        },
        {
            "ruleId": "rename-path",
            "message": "Path `/networks/{networkId}/oneToManyNatRules` renamed to `/networks/{networkId}/appliance/firewall/oneToManyNatRules`",
            "messageHtml": "renamed to <code>/networks/{networkId}/appliance/firewall/oneToManyNatRules</code>",
            "path": "/networks/{networkId}/oneToManyNatRules",
            "newPath": "/networks/{networkId}/appliance/firewall/oneToManyNatRules",
            "type": "renamed",
            "name": "What's Changed"
        },
        {
            "ruleId": "rename-path",
            "message": "Path `/networks/{networkId}/oneToOneNatRules` renamed to `/networks/{networkId}/appliance/firewall/oneToOneNatRules`",
            "messageHtml": "renamed to <code>/networks/{networkId}/appliance/firewall/oneToOneNatRules</code>",
            "path": "/networks/{networkId}/oneToOneNatRules",
            "newPath": "/networks/{networkId}/appliance/firewall/oneToOneNatRules",
            "type": "renamed",
            "name": "What's Changed"
        },
        {
            "ruleId": "rename-path",
            "message": "Path `/networks/{networkId}/portForwardingRules` renamed to `/networks/{networkId}/appliance/firewall/portForwardingRules`",
            "messageHtml": "renamed to <code>/networks/{networkId}/appliance/firewall/portForwardingRules</code>",
            "path": "/networks/{networkId}/portForwardingRules",
            "newPath": "/networks/{networkId}/appliance/firewall/portForwardingRules",
            "type": "renamed",
            "name": "What's Changed"
        },
        {
            "ruleId": "rename-path",
            "message": "Path `/networks/{networkId}/security/intrusionSettings` renamed to `/networks/{networkId}/appliance/security/intrusion`",
            "messageHtml": "renamed to <code>/networks/{networkId}/appliance/security/intrusion</code>",
            "path": "/networks/{networkId}/security/intrusionSettings",
            "newPath": "/networks/{networkId}/appliance/security/intrusion",
            "type": "renamed",
            "name": "What's Changed"
        },
        {
            "ruleId": "rename-path",
            "message": "Path `/networks/{networkId}/security/malwareSettings` renamed to `/networks/{networkId}/appliance/security/malware`",
            "messageHtml": "renamed to <code>/networks/{networkId}/appliance/security/malware</code>",
            "path": "/networks/{networkId}/security/malwareSettings",
            "newPath": "/networks/{networkId}/appliance/security/malware",
            "type": "renamed",
            "name": "What's Changed"
        },
        {
            "ruleId": "rename-path",
            "message": "Path `/networks/{networkId}/securityEvents` renamed to `/networks/{networkId}/appliance/security/events`",
            "messageHtml": "renamed to <code>/networks/{networkId}/appliance/security/events</code>",
            "path": "/networks/{networkId}/securityEvents",
            "newPath": "/networks/{networkId}/appliance/security/events",
            "type": "renamed",
            "name": "What's Changed"
        },
        {
            "ruleId": "rename-path",
            "message": "Path `/networks/{networkId}/siteToSiteVpn` renamed to `/networks/{networkId}/appliance/vpn/siteToSiteVpn`",
            "messageHtml": "renamed to <code>/networks/{networkId}/appliance/vpn/siteToSiteVpn</code>",
            "path": "/networks/{networkId}/siteToSiteVpn",
            "newPath": "/networks/{networkId}/appliance/vpn/siteToSiteVpn",
            "type": "renamed",
            "name": "What's Changed"
        },
        {
            "ruleId": "rename-path",
            "message": "Path `/networks/{networkId}/sm/device/fields` renamed to `/networks/{networkId}/sm/devices/fields`",
            "messageHtml": "renamed to <code>/networks/{networkId}/sm/devices/fields</code>",
            "path": "/networks/{networkId}/sm/device/fields",
            "newPath": "/networks/{networkId}/sm/devices/fields",
            "type": "renamed",
            "name": "What's Changed"
        },
        {
            "ruleId": "rename-path",
            "message": "Path `/networks/{networkId}/sm/device/{deviceId}/refreshDetails` renamed to `/networks/{networkId}/sm/devices/{deviceId}/refreshDetails`",
            "messageHtml": "renamed to <code>/networks/{networkId}/sm/devices/{deviceId}/refreshDetails</code>",
            "path": "/networks/{networkId}/sm/device/{deviceId}/refreshDetails",
            "newPath": "/networks/{networkId}/sm/devices/{deviceId}/refreshDetails",
            "type": "renamed",
            "name": "What's Changed"
        },
        {
            "ruleId": "rename-path",
            "message": "Path `/networks/{networkId}/sm/user/{userId}/deviceProfiles` renamed to `/networks/{networkId}/sm/users/{userId}/deviceProfiles`",
            "messageHtml": "renamed to <code>/networks/{networkId}/sm/users/{userId}/deviceProfiles</code>",
            "path": "/networks/{networkId}/sm/user/{userId}/deviceProfiles",
            "newPath": "/networks/{networkId}/sm/users/{userId}/deviceProfiles",
            "type": "renamed",
            "name": "What's Changed"
        },
        {
            "ruleId": "rename-path",
            "message": "Path `/networks/{networkId}/sm/user/{userId}/softwares` renamed to `/networks/{networkId}/sm/users/{userId}/softwares`",
            "messageHtml": "renamed to <code>/networks/{networkId}/sm/users/{userId}/softwares</code>",
            "path": "/networks/{networkId}/sm/user/{userId}/softwares",
            "newPath": "/networks/{networkId}/sm/users/{userId}/softwares",
            "type": "renamed",
            "name": "What's Changed"
        },
        {
            "ruleId": "rename-path",
            "message": "Path `/networks/{networkId}/sm/{deviceId}/cellularUsageHistory` renamed to `/networks/{networkId}/sm/devices/{deviceId}/cellularUsageHistory`",
            "messageHtml": "renamed to <code>/networks/{networkId}/sm/devices/{deviceId}/cellularUsageHistory</code>",
            "path": "/networks/{networkId}/sm/{deviceId}/cellularUsageHistory",
            "newPath": "/networks/{networkId}/sm/devices/{deviceId}/cellularUsageHistory",
            "type": "renamed",
            "name": "What's Changed"
        },
        {
            "ruleId": "rename-path",
            "message": "Path `/networks/{networkId}/sm/{deviceId}/certs` renamed to `/networks/{networkId}/sm/devices/{deviceId}/certs`",
            "messageHtml": "renamed to <code>/networks/{networkId}/sm/devices/{deviceId}/certs</code>",
            "path": "/networks/{networkId}/sm/{deviceId}/certs",
            "newPath": "/networks/{networkId}/sm/devices/{deviceId}/certs",
            "type": "renamed",
            "name": "What's Changed"
        },
        {
            "ruleId": "rename-path",
            "message": "Path `/networks/{networkId}/sm/{deviceId}/deviceProfiles` renamed to `/networks/{networkId}/sm/devices/{deviceId}/deviceProfiles`",
            "messageHtml": "renamed to <code>/networks/{networkId}/sm/devices/{deviceId}/deviceProfiles</code>",
            "path": "/networks/{networkId}/sm/{deviceId}/deviceProfiles",
            "newPath": "/networks/{networkId}/sm/devices/{deviceId}/deviceProfiles",
            "type": "renamed",
            "name": "What's Changed"
        },
        {
            "ruleId": "rename-path",
            "message": "Path `/networks/{networkId}/sm/{deviceId}/networkAdapters` renamed to `/networks/{networkId}/sm/devices/{deviceId}/networkAdapters`",
            "messageHtml": "renamed to <code>/networks/{networkId}/sm/devices/{deviceId}/networkAdapters</code>",
            "path": "/networks/{networkId}/sm/{deviceId}/networkAdapters",
            "newPath": "/networks/{networkId}/sm/devices/{deviceId}/networkAdapters",
            "type": "renamed",
            "name": "What's Changed"
        },
        {
            "ruleId": "rename-path",
            "message": "Path `/networks/{networkId}/sm/{deviceId}/restrictions` renamed to `/networks/{networkId}/sm/devices/{deviceId}/restrictions`",
            "messageHtml": "renamed to <code>/networks/{networkId}/sm/devices/{deviceId}/restrictions</code>",
            "path": "/networks/{networkId}/sm/{deviceId}/restrictions",
            "newPath": "/networks/{networkId}/sm/devices/{deviceId}/restrictions",
            "type": "renamed",
            "name": "What's Changed"
        },
        {
            "ruleId": "rename-path",
            "message": "Path `/networks/{networkId}/sm/{deviceId}/securityCenters` renamed to `/networks/{networkId}/sm/devices/{deviceId}/securityCenters`",
            "messageHtml": "renamed to <code>/networks/{networkId}/sm/devices/{deviceId}/securityCenters</code>",
            "path": "/networks/{networkId}/sm/{deviceId}/securityCenters",
            "newPath": "/networks/{networkId}/sm/devices/{deviceId}/securityCenters",
            "type": "renamed",
            "name": "What's Changed"
        },
        {
            "ruleId": "rename-path",
            "message": "Path `/networks/{networkId}/sm/{deviceId}/softwares` renamed to `/networks/{networkId}/sm/devices/{deviceId}/softwares`",
            "messageHtml": "renamed to <code>/networks/{networkId}/sm/devices/{deviceId}/softwares</code>",
            "path": "/networks/{networkId}/sm/{deviceId}/softwares",
            "newPath": "/networks/{networkId}/sm/devices/{deviceId}/softwares",
            "type": "renamed",
            "name": "What's Changed"
        },
        {
            "ruleId": "rename-path",
            "message": "Path `/networks/{networkId}/sm/{deviceId}/wlanLists` renamed to `/networks/{networkId}/sm/devices/{deviceId}/wlanLists`",
            "messageHtml": "renamed to <code>/networks/{networkId}/sm/devices/{deviceId}/wlanLists</code>",
            "path": "/networks/{networkId}/sm/{deviceId}/wlanLists",
            "newPath": "/networks/{networkId}/sm/devices/{deviceId}/wlanLists",
            "type": "renamed",
            "name": "What's Changed"
        },
        {
            "ruleId": "rename-path",
            "message": "Path `/networks/{networkId}/snmpSettings` renamed to `/networks/{networkId}/snmp`",
            "messageHtml": "renamed to <code>/networks/{networkId}/snmp</code>",
            "path": "/networks/{networkId}/snmpSettings",
            "newPath": "/networks/{networkId}/snmp",
            "type": "renamed",
            "name": "What's Changed"
        },
        {
            "ruleId": "rename-path",
            "message": "Path `/networks/{networkId}/ssids/{number}/l3FirewallRules` renamed to `/networks/{networkId}/wireless/ssids/{number}/firewall/l3FirewallRules`",
            "messageHtml": "renamed to <code>/networks/{networkId}/wireless/ssids/{number}/firewall/l3FirewallRules</code>",
            "path": "/networks/{networkId}/ssids/{number}/l3FirewallRules",
            "newPath": "/networks/{networkId}/wireless/ssids/{number}/firewall/l3FirewallRules",
            "type": "renamed",
            "name": "What's Changed"
        },
        {
            "ruleId": "rename-path",
            "message": "Path `/networks/{networkId}/ssids/{number}/splashSettings` renamed to `/networks/{networkId}/wireless/ssids/{number}/splash/settings`",
            "messageHtml": "renamed to <code>/networks/{networkId}/wireless/ssids/{number}/splash/settings</code>",
            "path": "/networks/{networkId}/ssids/{number}/splashSettings",
            "newPath": "/networks/{networkId}/wireless/ssids/{number}/splash/settings",
            "type": "renamed",
            "name": "What's Changed"
        },
        {
            "ruleId": "rename-path",
            "message": "Path `/networks/{networkId}/ssids/{number}/trafficShaping` renamed to `/networks/{networkId}/wireless/ssids/{number}/trafficShaping/rules`",
            "messageHtml": "renamed to <code>/networks/{networkId}/wireless/ssids/{number}/trafficShaping/rules</code>",
            "path": "/networks/{networkId}/ssids/{number}/trafficShaping",
            "newPath": "/networks/{networkId}/wireless/ssids/{number}/trafficShaping/rules",
            "type": "renamed",
            "name": "What's Changed"
        },
        {
            "ruleId": "rename-path",
            "message": "Path `/networks/{networkId}/staticRoutes` renamed to `/networks/{networkId}/appliance/staticRoutes`",
            "messageHtml": "renamed to <code>/networks/{networkId}/appliance/staticRoutes</code>",
            "path": "/networks/{networkId}/staticRoutes",
            "newPath": "/networks/{networkId}/appliance/staticRoutes",
            "type": "renamed",
            "name": "What's Changed"
        },
        {
            "ruleId": "rename-path",
            "message": "Path `/networks/{networkId}/staticRoutes/{staticRouteId}` renamed to `/networks/{networkId}/appliance/staticRoutes/{staticRouteId}`",
            "messageHtml": "renamed to <code>/networks/{networkId}/appliance/staticRoutes/{staticRouteId}</code>",
            "path": "/networks/{networkId}/staticRoutes/{staticRouteId}",
            "newPath": "/networks/{networkId}/appliance/staticRoutes/{staticRouteId}",
            "type": "renamed",
            "name": "What's Changed"
        },
        {
            "ruleId": "rename-path",
            "message": "Path `/networks/{networkId}/swapWarmSpare` renamed to `/networks/{networkId}/appliance/warmSpare/swap`",
            "messageHtml": "renamed to <code>/networks/{networkId}/appliance/warmSpare/swap</code>",
            "path": "/networks/{networkId}/swapWarmSpare",
            "newPath": "/networks/{networkId}/appliance/warmSpare/swap",
            "type": "renamed",
            "name": "What's Changed"
        },
        {
            "ruleId": "rename-path",
            "message": "Path `/networks/{networkId}/switch/settings/dhcpServerPolicy` renamed to `/networks/{networkId}/switch/dhcpServerPolicy`",
            "messageHtml": "renamed to <code>/networks/{networkId}/switch/dhcpServerPolicy</code>",
            "path": "/networks/{networkId}/switch/settings/dhcpServerPolicy",
            "newPath": "/networks/{networkId}/switch/dhcpServerPolicy",
            "type": "renamed",
            "name": "What's Changed"
        },
        {
            "ruleId": "rename-path",
            "message": "Path `/networks/{networkId}/switch/settings/dscpToCosMappings` renamed to `/networks/{networkId}/switch/dscpToCosMappings`",
            "messageHtml": "renamed to <code>/networks/{networkId}/switch/dscpToCosMappings</code>",
            "path": "/networks/{networkId}/switch/settings/dscpToCosMappings",
            "newPath": "/networks/{networkId}/switch/dscpToCosMappings",
            "type": "renamed",
            "name": "What's Changed"
        },
        {
            "ruleId": "rename-path",
            "message": "Path `/networks/{networkId}/switch/settings/mtu` renamed to `/networks/{networkId}/switch/mtu`",
            "messageHtml": "renamed to <code>/networks/{networkId}/switch/mtu</code>",
            "path": "/networks/{networkId}/switch/settings/mtu",
            "newPath": "/networks/{networkId}/switch/mtu",
            "type": "renamed",
            "name": "What's Changed"
        },
        {
            "ruleId": "rename-path",
            "message": "Path `/networks/{networkId}/switch/settings/multicast` renamed to `/networks/{networkId}/switch/routing/multicast`",
            "messageHtml": "renamed to <code>/networks/{networkId}/switch/routing/multicast</code>",
            "path": "/networks/{networkId}/switch/settings/multicast",
            "newPath": "/networks/{networkId}/switch/routing/multicast",
            "type": "renamed",
            "name": "What's Changed"
        },
        {
            "ruleId": "rename-path",
            "message": "Path `/networks/{networkId}/switch/settings/qosRules` renamed to `/networks/{networkId}/switch/qosRules`",
            "messageHtml": "renamed to <code>/networks/{networkId}/switch/qosRules</code>",
            "path": "/networks/{networkId}/switch/settings/qosRules",
            "newPath": "/networks/{networkId}/switch/qosRules",
            "type": "renamed",
            "name": "What's Changed"
        },
        {
            "ruleId": "rename-path",
            "message": "Path `/networks/{networkId}/switch/settings/qosRules/order` renamed to `/networks/{networkId}/switch/qosRules/order`",
            "messageHtml": "renamed to <code>/networks/{networkId}/switch/qosRules/order</code>",
            "path": "/networks/{networkId}/switch/settings/qosRules/order",
            "newPath": "/networks/{networkId}/switch/qosRules/order",
            "type": "renamed",
            "name": "What's Changed"
        },
        {
            "ruleId": "rename-path",
            "message": "Path `/networks/{networkId}/switch/settings/qosRules/{qosRuleId}` renamed to `/networks/{networkId}/switch/qosRules/{qosRuleId}`",
            "messageHtml": "renamed to <code>/networks/{networkId}/switch/qosRules/{qosRuleId}</code>",
            "path": "/networks/{networkId}/switch/settings/qosRules/{qosRuleId}",
            "newPath": "/networks/{networkId}/switch/qosRules/{qosRuleId}",
            "type": "renamed",
            "name": "What's Changed"
        },
        {
            "ruleId": "rename-path",
            "message": "Path `/networks/{networkId}/switch/settings/stormControl` renamed to `/networks/{networkId}/switch/stormControl`",
            "messageHtml": "renamed to <code>/networks/{networkId}/switch/stormControl</code>",
            "path": "/networks/{networkId}/switch/settings/stormControl",
            "newPath": "/networks/{networkId}/switch/stormControl",
            "type": "renamed",
            "name": "What's Changed"
        },
        {
            "ruleId": "rename-path",
            "message": "Path `/networks/{networkId}/switch/settings/stp` renamed to `/networks/{networkId}/switch/stp`",
            "messageHtml": "renamed to <code>/networks/{networkId}/switch/stp</code>",
            "path": "/networks/{networkId}/switch/settings/stp",
            "newPath": "/networks/{networkId}/switch/stp",
            "type": "renamed",
            "name": "What's Changed"
        },
        {
            "ruleId": "rename-path",
            "message": "Path `/networks/{networkId}/switchStacks` renamed to `/networks/{networkId}/switch/stacks`",
            "messageHtml": "renamed to <code>/networks/{networkId}/switch/stacks</code>",
            "path": "/networks/{networkId}/switchStacks",
            "newPath": "/networks/{networkId}/switch/stacks",
            "type": "renamed",
            "name": "What's Changed"
        },
        {
            "ruleId": "rename-path",
            "message": "Path `/networks/{networkId}/switchStacks/{switchStackId}` renamed to `/networks/{networkId}/switch/stacks/{switchStackId}`",
            "messageHtml": "renamed to <code>/networks/{networkId}/switch/stacks/{switchStackId}</code>",
            "path": "/networks/{networkId}/switchStacks/{switchStackId}",
            "newPath": "/networks/{networkId}/switch/stacks/{switchStackId}",
            "type": "renamed",
            "name": "What's Changed"
        },
        {
            "ruleId": "rename-path",
            "message": "Path `/networks/{networkId}/switchStacks/{switchStackId}/add` renamed to `/networks/{networkId}/switch/stacks/{switchStackId}/add`",
            "messageHtml": "renamed to <code>/networks/{networkId}/switch/stacks/{switchStackId}/add</code>",
            "path": "/networks/{networkId}/switchStacks/{switchStackId}/add",
            "newPath": "/networks/{networkId}/switch/stacks/{switchStackId}/add",
            "type": "renamed",
            "name": "What's Changed"
        },
        {
            "ruleId": "rename-path",
            "message": "Path `/networks/{networkId}/switchStacks/{switchStackId}/remove` renamed to `/networks/{networkId}/switch/stacks/{switchStackId}/remove`",
            "messageHtml": "renamed to <code>/networks/{networkId}/switch/stacks/{switchStackId}/remove</code>",
            "path": "/networks/{networkId}/switchStacks/{switchStackId}/remove",
            "newPath": "/networks/{networkId}/switch/stacks/{switchStackId}/remove",
            "type": "renamed",
            "name": "What's Changed"
        },
        {
            "ruleId": "rename-path",
            "message": "Path `/networks/{networkId}/trafficAnalysisSettings` renamed to `/networks/{networkId}/trafficAnalysis`",
            "messageHtml": "renamed to <code>/networks/{networkId}/trafficAnalysis</code>",
            "path": "/networks/{networkId}/trafficAnalysisSettings",
            "newPath": "/networks/{networkId}/trafficAnalysis",
            "type": "renamed",
            "name": "What's Changed"
        },
        {
            "ruleId": "rename-path",
            "message": "Path `/networks/{networkId}/trafficShaping` renamed to `/networks/{networkId}/appliance/trafficShaping`",
            "messageHtml": "renamed to <code>/networks/{networkId}/appliance/trafficShaping</code>",
            "path": "/networks/{networkId}/trafficShaping",
            "newPath": "/networks/{networkId}/appliance/trafficShaping",
            "type": "renamed",
            "name": "What's Changed"
        },
        {
            "ruleId": "rename-path",
            "message": "Path `/networks/{networkId}/uplinkSettings` renamed to `/networks/{networkId}/cellularGateway/uplink`",
            "messageHtml": "renamed to <code>/networks/{networkId}/cellularGateway/uplink</code>",
            "path": "/networks/{networkId}/uplinkSettings",
            "newPath": "/networks/{networkId}/cellularGateway/uplink",
            "type": "renamed",
            "name": "What's Changed"
        },
        {
            "ruleId": "rename-path",
            "message": "Path `/networks/{networkId}/vlans` renamed to `/networks/{networkId}/appliance/vlans`",
            "messageHtml": "renamed to <code>/networks/{networkId}/appliance/vlans</code>",
            "path": "/networks/{networkId}/vlans",
            "newPath": "/networks/{networkId}/appliance/vlans",
            "type": "renamed",
            "name": "What's Changed"
        },
        {
            "ruleId": "rename-path",
            "message": "Path `/networks/{networkId}/vlans/{vlanId}` renamed to `/networks/{networkId}/appliance/vlans/{vlanId}`",
            "messageHtml": "renamed to <code>/networks/{networkId}/appliance/vlans/{vlanId}</code>",
            "path": "/networks/{networkId}/vlans/{vlanId}",
            "newPath": "/networks/{networkId}/appliance/vlans/{vlanId}",
            "type": "renamed",
            "name": "What's Changed"
        },
        {
            "ruleId": "rename-path",
            "message": "Path `/networks/{networkId}/vlansEnabledState` renamed to `/networks/{networkId}/appliance/vlans/settings`",
            "messageHtml": "renamed to <code>/networks/{networkId}/appliance/vlans/settings</code>",
            "path": "/networks/{networkId}/vlansEnabledState",
            "newPath": "/networks/{networkId}/appliance/vlans/settings",
            "type": "renamed",
            "name": "What's Changed"
        },
        {
            "ruleId": "rename-path",
            "message": "Path `/networks/{networkId}/warmSpareSettings` renamed to `/networks/{networkId}/appliance/warmSpare`",
            "messageHtml": "renamed to <code>/networks/{networkId}/appliance/warmSpare</code>",
            "path": "/networks/{networkId}/warmSpareSettings",
            "newPath": "/networks/{networkId}/appliance/warmSpare",
            "type": "renamed",
            "name": "What's Changed"
        },
        {
            "ruleId": "rename-path",
            "message": "Path `/networks/{network_id}/sm/{id}/connectivity` renamed to `/networks/{networkId}/sm/devices/{deviceId}/connectivity`",
            "messageHtml": "renamed to <code>/networks/{networkId}/sm/devices/{deviceId}/connectivity</code>",
            "path": "/networks/{network_id}/sm/{id}/connectivity",
            "newPath": "/networks/{networkId}/sm/devices/{deviceId}/connectivity",
            "type": "renamed",
            "name": "What's Changed"
        },
        {
            "ruleId": "rename-path",
            "message": "Path `/networks/{network_id}/sm/{id}/desktopLogs` renamed to `/networks/{networkId}/sm/devices/{deviceId}/desktopLogs`",
            "messageHtml": "renamed to <code>/networks/{networkId}/sm/devices/{deviceId}/desktopLogs</code>",
            "path": "/networks/{network_id}/sm/{id}/desktopLogs",
            "newPath": "/networks/{networkId}/sm/devices/{deviceId}/desktopLogs",
            "type": "renamed",
            "name": "What's Changed"
        },
        {
            "ruleId": "rename-path",
            "message": "Path `/networks/{network_id}/sm/{id}/deviceCommandLogs` renamed to `/networks/{networkId}/sm/devices/{deviceId}/deviceCommandLogs`",
            "messageHtml": "renamed to <code>/networks/{networkId}/sm/devices/{deviceId}/deviceCommandLogs</code>",
            "path": "/networks/{network_id}/sm/{id}/deviceCommandLogs",
            "newPath": "/networks/{networkId}/sm/devices/{deviceId}/deviceCommandLogs",
            "type": "renamed",
            "name": "What's Changed"
        },
        {
            "ruleId": "rename-path",
            "message": "Path `/networks/{network_id}/sm/{id}/performanceHistory` renamed to `/networks/{networkId}/sm/devices/{deviceId}/performanceHistory`",
            "messageHtml": "renamed to <code>/networks/{networkId}/sm/devices/{deviceId}/performanceHistory</code>",
            "path": "/networks/{network_id}/sm/{id}/performanceHistory",
            "newPath": "/networks/{networkId}/sm/devices/{deviceId}/performanceHistory",
            "type": "renamed",
            "name": "What's Changed"
        },
        {
            "ruleId": "rename-path",
            "message": "Path `/organizations/{organizationId}/admins/{id}` renamed to `/organizations/{organizationId}/admins/{adminId}`",
            "messageHtml": "renamed to <code>/organizations/{organizationId}/admins/{adminId}</code>",
            "path": "/organizations/{organizationId}/admins/{id}",
            "newPath": "/organizations/{organizationId}/admins/{adminId}",
            "type": "renamed",
            "name": "What's Changed"
        },
        {
            "ruleId": "rename-path",
            "message": "Path `/organizations/{organizationId}/configTemplates/{configTemplateId}/switchProfiles` renamed to `/organizations/{organizationId}/configTemplates/{configTemplateId}/switch/profiles`",
            "messageHtml": "renamed to <code>/organizations/{organizationId}/configTemplates/{configTemplateId}/switch/profiles</code>",
            "path": "/organizations/{organizationId}/configTemplates/{configTemplateId}/switchProfiles",
            "newPath": "/organizations/{organizationId}/configTemplates/{configTemplateId}/switch/profiles",
            "type": "renamed",
            "name": "What's Changed"
        },
        {
            "ruleId": "rename-path",
            "message": "Path `/organizations/{organizationId}/deviceStatuses` renamed to `/organizations/{organizationId}/devices/statuses`",
            "messageHtml": "renamed to <code>/organizations/{organizationId}/devices/statuses</code>",
            "path": "/organizations/{organizationId}/deviceStatuses",
            "newPath": "/organizations/{organizationId}/devices/statuses",
            "type": "renamed",
            "name": "What's Changed"
        },
        {
            "ruleId": "rename-path",
            "message": "Path `/organizations/{organizationId}/licenseState` renamed to `/organizations/{organizationId}/licenses/overview`",
            "messageHtml": "renamed to <code>/organizations/{organizationId}/licenses/overview</code>",
            "path": "/organizations/{organizationId}/licenseState",
            "newPath": "/organizations/{organizationId}/licenses/overview",
            "type": "renamed",
            "name": "What's Changed"
        },
        {
            "ruleId": "rename-path",
            "message": "Path `/organizations/{organizationId}/security/intrusionSettings` renamed to `/organizations/{organizationId}/appliance/security/intrusion`",
            "messageHtml": "renamed to <code>/organizations/{organizationId}/appliance/security/intrusion</code>",
            "path": "/organizations/{organizationId}/security/intrusionSettings",
            "newPath": "/organizations/{organizationId}/appliance/security/intrusion",
            "type": "renamed",
            "name": "What's Changed"
        },
        {
            "ruleId": "rename-path",
            "message": "Path `/organizations/{organizationId}/securityEvents` renamed to `/organizations/{organizationId}/appliance/security/events`",
            "messageHtml": "renamed to <code>/organizations/{organizationId}/appliance/security/events</code>",
            "path": "/organizations/{organizationId}/securityEvents",
            "newPath": "/organizations/{organizationId}/appliance/security/events",
            "type": "renamed",
            "name": "What's Changed"
        },
        {
            "ruleId": "rename-path",
            "message": "Path `/organizations/{organizationId}/thirdPartyVPNPeers` renamed to `/organizations/{organizationId}/appliance/vpn/thirdPartyVPNPeers`",
            "messageHtml": "renamed to <code>/organizations/{organizationId}/appliance/vpn/thirdPartyVPNPeers</code>",
            "path": "/organizations/{organizationId}/thirdPartyVPNPeers",
            "newPath": "/organizations/{organizationId}/appliance/vpn/thirdPartyVPNPeers",
            "type": "renamed",
            "name": "What's Changed"
        },
        {
            "ruleId": "rename-path",
            "message": "Path `/organizations/{organizationId}/uplinksLossAndLatency` renamed to `/organizations/{organizationId}/devices/uplinksLossAndLatency`",
            "messageHtml": "renamed to <code>/organizations/{organizationId}/devices/uplinksLossAndLatency</code>",
            "path": "/organizations/{organizationId}/uplinksLossAndLatency",
            "newPath": "/organizations/{organizationId}/devices/uplinksLossAndLatency",
            "type": "renamed",
            "name": "What's Changed"
        },
        {
            "ruleId": "rename-path",
            "message": "Path `/organizations/{organizationId}/vpnFirewallRules` renamed to `/organizations/{organizationId}/appliance/vpn/vpnFirewallRules`",
            "messageHtml": "renamed to <code>/organizations/{organizationId}/appliance/vpn/vpnFirewallRules</code>",
            "path": "/organizations/{organizationId}/vpnFirewallRules",
            "newPath": "/organizations/{organizationId}/appliance/vpn/vpnFirewallRules",
            "type": "renamed",
            "name": "What's Changed"
        },
        {
            "ruleId": "rename-path",
            "message": "Path `/organizations/{organizationId}/webhookLogs` renamed to `/organizations/{organizationId}/webhooks/logs`",
            "messageHtml": "renamed to <code>/organizations/{organizationId}/webhooks/logs</code>",
            "path": "/organizations/{organizationId}/webhookLogs",
            "newPath": "/organizations/{organizationId}/webhooks/logs",
            "type": "renamed",
            "name": "What's Changed"
        }
    ],
    "oldVersion": "0.11.0",
    "newVersion": "1.1.0"
};

data.diff.map(d => {
    delete d.message
    delete d.messageHtml
    delete d.apiDetails
    delete d.details
    return d
})
const parsed = JSON.parse(JSON.stringify(data.diff))

console.log(JSON.stringify(parsed, null, 4))